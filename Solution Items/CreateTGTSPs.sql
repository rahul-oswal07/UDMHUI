/*
 * Author: Nikhil
 * Creation Date: 22/06/2015
 * Description: This SQL code applies business transformation for X02_A01 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer                   Description
 *-----------------------------------------------------------------------------------------------------
    1.0        14/07/2015       Nikhil                   Based on Mapping Spec version v0.7
    1.1        29/7/2015        Pothirajan               Based on Mapping Spec version v0.7
    2.0        20/8/2015        Pothirajan               Based on mapping spec version v0.9
    3.0        09/10/2015.......Pothirajan...............Based on the mapping spec version v1.0
    4.0        12/9/2015....... Pothirajan...............Based on the mapping spec version v1.3
    5.0        12/15/2015....... Pothirajan...............Based on code review comments and bugs raised
 *-----------------------------------------------------------------------------------------------------
 */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_A01]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_A01]
GO 

CREATE VIEW [dbo].[VW_X02_A01]
AS
WITH
FILTER_ACPEDYMD_MONTHENDBEFOREMIGR AS (
  SELECT ACPEDACNTNO AS ACPEDACNTNO_M
        ,ACPEDSUBACNO AS ACPEDSUBACNO_M
        ,ACPEDAREARSOS AS ACPEDAREARSOS_M
        ,ACPEDTRUECALINTGROSDB AS ACPEDTRUECALINTGROSDB_M
        ,ACPEDINTPAIDGRDB AS ACPEDINTPAIDGRDB_M
        ,ACPEDFORINTGROSDB AS ACPEDFORINTGROSDB_M
        ,ACPEDINTACGRDB AS ACPEDINTACGRDB_M
    FROM VW_FILTER_ACPEDYMD_MONTHENDBEFOREMIGR
),
FILTER_ACPEDYMD_YEARENDBEFOREMIGR AS (
  SELECT  ACPEDACNTNO AS ACPEDACNTNO_Y
         ,ACPEDSUBACNO AS ACPEDSUBACNO_Y
         ,ACPEDCAPITALBAL AS ACPEDCAPITALBAL_Y
         ,ACPEDAREARSOS AS ACPEDAREARSOS_Y
         ,ACPEDGROSRT AS ACPEDGROSRT_Y
         ,ACPEDCALINTGROSDB AS ACPEDCALINTGROSDB_Y
    FROM VW_FILTER_ACPEDYMD_YEARENDBEFOREMIGR
),
FILTER_VTRANS_SUMOFTRAMOUNTDB AS (
  SELECT SUM(TRAMOUNTDB) AS SUM_TRAMOUNTDB
         ,TRACNTNO 
         ,TRSUBACNO
    FROM VW_FILTER_VTRANSACTIONS_NOTREVERSEDORREVERSING 
   INNER JOIN TB_XFM_LUT_TX AS TX_LUT
      ON TRGTRSTYPE = TX_LUT.SRC_TRGTRSTYPE
     AND TX_LUT.XFM_IS_FINES = 'Y'
    CROSS JOIN TB_UDMH_CTL 
    WHERE YEAR(TRDATE) = YEAR( WS_MIGR_DATE )
    GROUP BY TRACNTNO,TRSUBACNO,TRGTRSTYPE
),
FILTER_VTRANS_SUMOF_TRAMOUNTCR AS (
  SELECT SUM(TRAMOUNTCR) AS SUM_TRAMOUNTCR
        ,TRACNTNO 
        ,TRSUBACNO
    FROM TB_SRC_VTRANSACTIONS
   CROSS JOIN TB_UDMH_CTL  
   WHERE TRGTRSTYPE IN ('R', 'CR', 'RED','TCR')
     AND YEAR(TRDATE) = YEAR( WS_MIGR_DATE )
   GROUP BY TRACNTNO,TRSUBACNO
),
FILTER_VTRANS_SUM_TRAMOUNTCR_TRAMOUNTDB AS (
  SELECT SUM(TRAMOUNTCR + TRAMOUNTDB) AS SUM_TRAMOUNTCR_TRAMOUNTDB
        ,TRACNTNO 
        ,TRSUBACNO
    FROM TB_SRC_VTRANSACTIONS AS VTRANSACTIONS
   CROSS JOIN TB_UDMH_CTL  
   WHERE ( TRGTRSTYPE IN ('R','RED','TCR')
          OR ( TRGTRSTYPE  = 'RC')
         AND ( SELECT COUNT(1)
                FROM TB_SRC_VTRANSACTIONS AS ODD
                WHERE ODD.TRACNTNO = VTRANSACTIONS.TRACNTNO
                 AND ODD.TRSUBACNO = VTRANSACTIONS.TRSUBACNO
                 AND ODD.TRGTRSTYPE = 'ODD'
                 AND ODD.TRAMOUNTDB = VTRANSACTIONS.TRAMOUNTCR
                 AND(    ODD.TRDATE = VTRANSACTIONS.TRDATE
                      OR ODD.TRAUDITDATE = VTRANSACTIONS.TRAUDITDATE
                    )
                ) > 0
            )
     AND YEAR(TRDATE) = YEAR( WS_MIGR_DATE )
   GROUP BY TRACNTNO
           ,TRSUBACNO
),
FILTER_VTRANS_SUMOF_TRAMOUNTCR_RED AS (
  SELECT SUM(TRAMOUNTCR) AS SUM_TRAMOUNTCR_RED
        ,TRACNTNO
        ,TRSUBACNO
        ,TRDATE
        ,MAX(TRDATE) AS MAX_TRDATE
    FROM VW_FILTER_VTRANSACTIONS_NOTREVERSEDORREVERSING
   WHERE TRGTRSTYPE = 'RED'
   GROUP BY TRACNTNO
        ,TRSUBACNO
        ,TRDATE
),
FILTER_ACAS_APP AS (
  SELECT ACAS.A1227
        ,APP.M63214
        ,LOWESTFORANAPP.ACSUBACNO
    FROM TB_SRC_ACAS AS ACAS
   INNER JOIN TB_SRC_APP AS APP
      ON ACAS.A1422 = APP.A14223
     AND ACAS.M6321 = APP.M63214
   INNER JOIN VW_FILTER_AC01_LOWESTFORANAPP AS LOWESTFORANAPP
      ON APP.M63214 = LOWESTFORANAPP.ACACNTNO
     AND APP.A1238 = LOWESTFORANAPP.ACINCEPDATE
),
FILTER_VTRANS_SUMOF_TRAMOUNTCR_CURRMONTH AS (
  SELECT SUM(TRAMOUNTCR) AS SUM_TRAMOUNTCR_CURRMONTH
        ,TRACNTNO 
        ,TRSUBACNO
    FROM TB_SRC_VTRANSACTIONS
   CROSS JOIN TB_UDMH_CTL  
   WHERE TRGTRSTYPE IN ('R', 'CR', 'RED','TCR')
     AND TRDATE >= dbo.FN_FIRST_OF_MONTH(WS_MIGR_DATE)
   GROUP BY TRACNTNO,TRSUBACNO
),
FILTER_VTRANS_SUM_TRAMOUNTCR_TRAMOUNTDB_CURRMONTH AS (
  SELECT SUM(TRAMOUNTCR + TRAMOUNTDB) AS SUM_TRAMOUNTCR_TRAMOUNTDB_CURRMONTH
        ,TRACNTNO 
        ,TRSUBACNO
    FROM TB_SRC_VTRANSACTIONS AS VTRANSACTIONS
   CROSS JOIN TB_UDMH_CTL  
   WHERE ( TRGTRSTYPE IN ('R','RED','TCR')
          OR ( TRGTRSTYPE  = 'RC')
         AND ( SELECT COUNT(1)
                FROM TB_SRC_VTRANSACTIONS AS ODD
                WHERE ODD.TRACNTNO = VTRANSACTIONS.TRACNTNO
                 AND ODD.TRSUBACNO = VTRANSACTIONS.TRSUBACNO
                 AND ODD.TRGTRSTYPE = 'ODD'
                 AND ODD.TRAMOUNTDB = VTRANSACTIONS.TRAMOUNTCR
                 AND(    ODD.TRDATE = VTRANSACTIONS.TRDATE
                      OR ODD.TRAUDITDATE = VTRANSACTIONS.TRAUDITDATE
                    )
                ) > 0
            )
     AND TRDATE = dbo.FN_FIRST_OF_MONTH( WS_MIGR_DATE )
   GROUP BY TRACNTNO
           ,TRSUBACNO
),
FILTER_RED_C62513 AS (
  SELECT RED.C62513 
        ,RED.A2502
        ,RED.M6321
    FROM TB_SRC_RED AS RED
   WHERE RED.S2503 = '001'
),
FILTER_M01 AS (
  SELECT AC01MAIN.ACACNTNO
        ,CASE AC01_FIRSTLIVE_LASTREDEEM.ACPROCESSTATUS
           WHEN 3 THEN 'N'
           WHEN 4 THEN 'N'
           ELSE NULL
         END AS MAR01_M01_RED_INS
    FROM TB_SRC_AC01_MAIN AS AC01MAIN
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVE_LASTREDEEM
      ON AC01MAIN.ACACNTNO = AC01_FIRSTLIVE_LASTREDEEM.ACACNTNO
),
CONSTANTS AS (
  SELECT dbo.FN_END_OF_PREV_MONTH(WS_MIGR_DATE) AS PREV_MONTH_DT
    FROM TB_UDMH_CTL
),
JOIN_WRITECRITERIA AS ( 
  SELECT AC01.ACSUBACNO
        ,AC01.ACACNTNO
        ,AC01.ACACTCODE
        ,AC01.ACINTCCODE
        ,AC01.ACAREARSPYMNTOS
        ,AC01.ACPROCESSTATUS
        ,AC01.ACAGREDADVANCE
        ,AC01.ACACTUALADVANCE
        ,AC01.ACAREARSOS
        ,AC01.ACINCEPDATE
        ,AC01.ACGACTTYPE
        ,AC01.ACBALOS
        ,AC01.ACINTRGROSRT
        ,AC01.ACCAPITALBAL
        ,AC01.ACFORINTGROSDB
        ,AC01.ACACINTGROSDB
        ,AC01.RCCODE
        ,AC01.ACHBRNCODE
        ,AC01.ACCLRDATE
        ,AC01.ACRETENTIONBAL
        ,AC01.ACCURENTTRM
        ,AC01.ACSCHEDTRMDATE
        ,AC01.ACSOCREGCODE 
        ,AC01.ACTRMBANDSTARTDATE
        ,AC01.ACHPORTEDACNTNO
        ,AC01.ACPORTEDSUBACNO
        ,AC01.ACLASTCAPDATEDB
        ,AC01.ACPURPOSECODE
        ,AC01.ACFISCINTGROSDB
        ,AC01.ACBALBFWD
        ,AC01.ACORIGINALTRM
        ,AC01.ACSMNTBAL
        ,AC01.ACMAXMTHSINAREARS
       ,AC01.ACMIRASLASTFISCGROS 
       ,CTRL.SOURCE
       ,CTRL.WS_MIGR_DATE
       ,CONS.PREV_MONTH_DT
    FROM TB_SRC_AC01 AS AC01 
   INNER JOIN TB_SRC_AC01_MAIN AS AC01MAIN
      ON AC01.ACACNTNO = AC01MAIN.ACACNTNO
   CROSS JOIN TB_UDMH_CTL AS CTRL
   CROSS JOIN CONSTANTS AS CONS
),
JOIN_EXTRA AS (
  SELECT J_W.*
        ,ACTINTCHGPERINDDR
        ,ACTINTCHGPERNODR
        ,APP.A1339
        ,ACPEDAREARSOS_M
        ,PAYMENTELEMENTS_CURRENTATMIGR.PAYEREGFREQCODE
        ,PAYMENTELEMENTS_CURRENTATMIGR.PAYENEXTDUEDATE
        ,PAYMENTELEMENTS_CURRENTATMIGR.PAYEFIRSTDATE
        ,PAYMENTELEMENTS_CURRENTATMIGR.PAYEFIRSTAMOUNT
        ,PAYMENTELEMENTS_CURRENTATMIGR.PAYEREGAMOUNT
        ,ACTPAYTYPE
        ,ACPEDCALINTGROSDB_Y
        ,ACPEDTRUECALINTGROSDB_M
        ,SUM_TRAMOUNTDB
        ,SUM_TRAMOUNTCR
        ,SUM_TRAMOUNTCR_TRAMOUNTDB
        ,SUM_TRAMOUNTCR_RED
        ,ACPEDCAPITALBAL_Y
        ,SUM_TRAMOUNTCR_CURRMONTH
        ,SUM_TRAMOUNTCR_TRAMOUNTDB_CURRMONTH
        ,ACPEDYMD.ACPEDAREARSOS AS ACPEDYMD_ACPEDAREARSOS
        ,ACPEDYMD_CURBAL_INTPRD.ACPEDBALOS AS ACPEDYMD_ACPEDBALOS
        ,ACPEDYMD_CURBAL_INTPRD.ACPEDFORINTGROSDB AS ACPEDYMD_ACPEDFORINTGROSDB
        ,ACPEDYMD_CURBAL_INTPRD.ACPEDINTACGRDB AS ACPEDYMD_ACPEDINTACGRDB
        ,ACPEDINTPAIDGRDB_M
        ,ACPEDFORINTGROSDB_M
        ,ACPEDINTACGRDB_M
        ,ACPEDAREARSOS_Y
        ,A21284
        ,A16247
        ,ACPEDGROSRT_Y
        ,ACAS_APP.A1227
        ,M01.MAR01_M01_RED_INS
        ,AC05C.DAT46 AS AC05C_DAT46
        ,(SELECT LEFT(
                    (SELECT FORMAT(ACPEDYMD.ACPEDMTHSINAREARS,'00') 
                        FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)')
                   +REPLICATE('0',24)
                 ,24)) AS ARREARSHISTORY_TWELEVE
        ,C62513
    FROM JOIN_WRITECRITERIA AS J_W
    LEFT OUTER JOIN TB_SRC_ACNTYPES AS ACNTYPES 
      ON J_W.ACACTCODE = ACNTYPES.ACTCODE
    LEFT OUTER JOIN VW_FILTER_PAYMENTELEMENTS_CURRENTATMIGR AS PAYMENTELEMENTS_CURRENTATMIGR
      ON J_W.ACACNTNO = PAYMENTELEMENTS_CURRENTATMIGR.PAYEACNTNO
     AND J_W.ACSUBACNO = PAYMENTELEMENTS_CURRENTATMIGR.PAYESUBACNO
    LEFT OUTER JOIN FILTER_ACPEDYMD_MONTHENDBEFOREMIGR  AS ACPEDYMD_MONTHENDBEFOREMIGR
      ON J_W.ACACNTNO = ACPEDYMD_MONTHENDBEFOREMIGR.ACPEDACNTNO_M
     AND J_W.ACSUBACNO = ACPEDYMD_MONTHENDBEFOREMIGR.ACPEDSUBACNO_M
    LEFT OUTER JOIN FILTER_ACPEDYMD_YEARENDBEFOREMIGR     
      ON J_W.ACACNTNO = FILTER_ACPEDYMD_YEARENDBEFOREMIGR.ACPEDACNTNO_Y
     AND J_W.ACSUBACNO= FILTER_ACPEDYMD_YEARENDBEFOREMIGR.ACPEDSUBACNO_Y
    LEFT OUTER JOIN VW_FILTER_APPSUB AS APPSUB
      ON J_W.ACACNTNO = APPSUB.M63220 
     AND J_W.ACSUBACNO = APPSUB.A253107
     AND EXISTS (
                SELECT (1)
                  FROM TB_SRC_APP AS APP
                 WHERE APPSUB.M63220 = APP.M63214 
                   AND APPSUB.A22010 = APP.A14223 
                   AND APP.A1238 IS NOT NULL 
     )
   LEFT OUTER JOIN TB_SRC_APP AS APP
      ON J_W.ACACNTNO = APP.M63214
     AND APPSUB.A22010 = APP.A14223 
   LEFT OUTER JOIN FILTER_VTRANS_SUMOFTRAMOUNTDB AS VTRANSACTIONS_SUMTRAMOUNTDB
     ON J_W.ACACNTNO = VTRANSACTIONS_SUMTRAMOUNTDB.TRACNTNO 
    AND J_W.ACSUBACNO = VTRANSACTIONS_SUMTRAMOUNTDB.TRSUBACNO
   LEFT OUTER JOIN FILTER_VTRANS_SUMOF_TRAMOUNTCR AS VTRANS_SUMOF_TRAMOUNTCR
     ON J_W.ACACNTNO = VTRANS_SUMOF_TRAMOUNTCR.TRACNTNO 
    AND J_W.ACSUBACNO = VTRANS_SUMOF_TRAMOUNTCR.TRSUBACNO
   LEFT OUTER JOIN FILTER_VTRANS_SUM_TRAMOUNTCR_TRAMOUNTDB AS VTRANS_SUM_TRAMOUNTCR_TRAMOUNTDB
     ON J_W.ACACNTNO = VTRANS_SUM_TRAMOUNTCR_TRAMOUNTDB.TRACNTNO 
    AND J_W.ACSUBACNO = VTRANS_SUM_TRAMOUNTCR_TRAMOUNTDB.TRSUBACNO
   LEFT OUTER JOIN FILTER_VTRANS_SUMOF_TRAMOUNTCR_RED AS VTRANS_SUMOF_TRAMOUNTCR_RED
     ON J_W.ACACNTNO = VTRANS_SUMOF_TRAMOUNTCR_RED.TRACNTNO
    AND J_W.ACSUBACNO = VTRANS_SUMOF_TRAMOUNTCR_RED.TRSUBACNO
    AND VTRANS_SUMOF_TRAMOUNTCR_RED.TRDATE = VTRANS_SUMOF_TRAMOUNTCR_RED.MAX_TRDATE
   LEFT OUTER JOIN FILTER_ACAS_APP AS  ACAS_APP
     ON J_W.ACACNTNO = ACAS_APP.M63214
    AND J_W.ACSUBACNO = ACAS_APP.ACSUBACNO
   LEFT OUTER JOIN FILTER_VTRANS_SUMOF_TRAMOUNTCR_CURRMONTH AS VTRANS_SUMOF_TRAMOUNTCR_CURRMONTH
     ON J_W.ACACNTNO = VTRANS_SUMOF_TRAMOUNTCR_CURRMONTH.TRACNTNO 
    AND J_W.ACSUBACNO = VTRANS_SUMOF_TRAMOUNTCR_CURRMONTH.TRSUBACNO
   LEFT OUTER JOIN FILTER_VTRANS_SUM_TRAMOUNTCR_TRAMOUNTDB_CURRMONTH AS VTRANS_SUM_TRAMOUNTCR_TRAMOUNTDB_CURRMONTH
     ON J_W.ACACNTNO = VTRANS_SUM_TRAMOUNTCR_TRAMOUNTDB_CURRMONTH.TRACNTNO 
    AND J_W.ACSUBACNO = VTRANS_SUM_TRAMOUNTCR_TRAMOUNTDB_CURRMONTH.TRSUBACNO
    LEFT OUTER JOIN TB_SRC_ACPEDYMD AS ACPEDYMD
      ON J_W.ACACNTNO = ACPEDYMD.ACPEDACNTNO 
     AND J_W.ACSUBACNO = ACPEDYMD.ACPEDSUBACNO
     AND J_W.ACLASTCAPDATEDB = ACPEDYMD.ACPEDPERIOD
    LEFT OUTER JOIN TB_SRC_ACPEDYMD AS ACPEDYMD_CURBAL_INTPRD
      ON J_W.ACACNTNO = ACPEDYMD_CURBAL_INTPRD.ACPEDACNTNO 
     AND J_W.ACSUBACNO = ACPEDYMD_CURBAL_INTPRD.ACPEDSUBACNO
     AND ACPEDYMD_CURBAL_INTPRD.ACPEDPERIOD = PREV_MONTH_DT
    LEFT OUTER JOIN FILTER_M01 AS M01
      ON J_W.ACACNTNO = M01.ACACNTNO
    LEFT OUTER JOIN TB_SRC_AC05C AS AC05C
      ON AC05C.ACNTNO = J_W.ACACNTNO
     AND AC05C.DATBLOCK = 3
    LEFT OUTER JOIN FILTER_RED_C62513 AS RED
      ON RED.M6321 = J_W.ACACNTNO
     AND RED.A2502 = APPSUB.A2501
),
JOIN_LUTS AS (
  SELECT J_E.*
        ,TGT_BACODE
        ,TGT_MPRCODE
        ,TGT_PRODRATE
        ,TGT_FLEXRULE
        ,TGT_INTRTECDE
        ,TGT_RATEEXP_FLAG
        ,TGT_PURPOSE
    FROM JOIN_EXTRA AS J_E 
    LEFT OUTER JOIN TB_XFM_LUT_BRANCH
      ON TB_XFM_LUT_BRANCH.SRC_BRANCH = J_E.ACHBRNCODE 
    LEFT OUTER JOIN TB_XFM_LUT_PRODUCT
      ON TB_XFM_LUT_PRODUCT.SRC_ACTCODE = J_E.ACACTCODE
     AND TB_XFM_LUT_PRODUCT.SRC_INTCCODE = J_E.ACINTCCODE
     AND TB_XFM_LUT_PRODUCT.SRC_RCCODE = J_E.RCCODE
    LEFT OUTER JOIN TB_XFM_LUT_PURPOSE
      ON TB_XFM_LUT_PURPOSE.SRC_PURPOSECODE = J_E.ACPURPOSECODE
    
),
MAP_FROMSRC AS (
  SELECT JOIN_LUTS.*
        ,ACSUBACNO AS A01_SEQNO
        ,CASE
           WHEN SOURCE = 'RED' AND ACACTCODE = 'NOSUB' AND ACINTCCODE IN ('M00009', 'M00011', 'M00023', 'M00895', 'M01092') THEN 'EQT'
           ELSE
             CASE ACTPAYTYPE
               WHEN 'C' THEN 'REP'
               WHEN 'N' THEN 'REP'
               WHEN 'P' THEN 'REP'
               WHEN 'I' THEN 'INT'
             END
          END AS MAR02_A01_MPR_TYPE
        ,CASE ACPROCESSTATUS
           WHEN 2 THEN 'L'
           WHEN 3 THEN 'R'
           WHEN 4 THEN 'R'
         END AS MAR02_A01_STATUS 
        ,CASE
            WHEN ACAGREDADVANCE > 0 THEN ACAGREDADVANCE
            WHEN ACACTUALADVANCE > 0 THEN ACACTUALADVANCE
            ELSE 1
          END AS MAR02_A01_ADVANCE
        ,COALESCE(A1339,DATEADD(DAY,-1,ACINCEPDATE)) AS A01_APPLIC_DT
        ,dbo.FN_FIRST_OF_NEXT_MONTH(ACINCEPDATE) AS A01_ARR_START_DT
        ,SUM_TRAMOUNTDB AS MAR02_A01_FINES
        ,ACFISCINTGROSDB AS MAR02_A01_FISCAL_INT
        ,ACFORINTGROSDB AS MAR02_A01_INT_IN_MTH
        ,ACPEDCALINTGROSDB_Y AS MAR02_A01_INT_PREV
        ,ACINTRGROSRT AS MAR02_A01_INT_RATE 
        ,ACPEDTRUECALINTGROSDB_M AS MAR02_A01_INT_TODATE 
        ,ACCAPITALBAL AS MAR02_A01_INTBEARBAL
        ,ACCAPITALBAL AS MAR02_A01_PRINC_BAL
        ,CASE SOURCE
           WHEN 'RED' THEN ACFORINTGROSDB
           WHEN 'BLUE' THEN ACACINTGROSDB
         END AS MAR02_A01_INTINPRD
        ,TGT_BACODE AS MAR02_A01_INTROCODE
        ,TGT_MPRCODE AS MAR02_A01_MPR_CODE
        ,CASE SOURCE
           WHEN 'RED' THEN SUM_TRAMOUNTCR
           WHEN 'BLUE' THEN SUM_TRAMOUNTCR_TRAMOUNTDB
         END AS MAR02_A01_PAIDTODATE
        ,ACMIRASLASTFISCGROS AS MAR02_A01_PREV_INT_F
        ,TGT_PRODRATE AS MAR02_A01_PROD_RATE
        ,ACCLRDATE AS A01_REDEEM_DT
        ,ACACTUALADVANCE AS MAR02_A01_REL_AMOUNT
        ,ACRETENTIONBAL AS MAR02_A01_RETAINED
        ,FLOOR(ACCURENTTRM) AS MAR02_A01_TERM
        ,(ACCURENTTRM - FLOOR(ACCURENTTRM ) ) * 100 AS MAR02_A01_TERM_MTH
        ,ACPEDCAPITALBAL_Y AS MAR02_A01_YR_INT_BAL
        ,A1227 AS MAR02_A01_CASHBKAMT
        ,CASE ACSOCREGCODE WHEN 'CCA' THEN 'Y' ELSE 'N' END AS MAR02_A01_CCA_REG
        ,TGT_FLEXRULE AS MAR02_A01_FLEX_RULE
        ,TGT_INTRTECDE AS MAR02_A01_INTRTECDE
        ,CASE SOURCE
           WHEN 'RED' THEN SUM_TRAMOUNTCR_CURRMONTH
           WHEN 'BLUE' THEN SUM_TRAMOUNTCR_TRAMOUNTDB_CURRMONTH
         END AS MAR02_A01_PAID_MTH
        ,CASE WHEN SOURCE = 'RED' AND ACAREARSOS < 0 THEN ABS(ACAREARSOS) ELSE 0 END AS MAR02_A01_PAYMNT_RES
        ,TGT_RATEEXP_FLAG AS MAR02_A01_RATE_EXP
        ,CASE WHEN SOURCE = 'BLUE' AND ACPEDAREARSOS_M < 0 THEN ABS(ACPEDAREARSOS_M) ELSE 0 END AS MAR02_A01_RES_START
        ,CASE WHEN ACTRMBANDSTARTDATE IS NOT NULL THEN ACTRMBANDSTARTDATE ELSE ACINCEPDATE END AS MAR02_A01_RTESTR_DT
        ,CASE WHEN ACHPORTEDACNTNO IS NOT NULL AND ACTRMBANDSTARTDATE < ACINCEPDATE THEN 'Y' ELSE 'N' END AS MAR02_A01_PORTED
        ,ACPORTEDSUBACNO AS MAR02_A01_PORTNO
        ,ACLASTCAPDATEDB AS A01_LSTCAP_DT
        ,TGT_PURPOSE AS MAR02_A01_PURPOSE
        ,ACPEDYMD_ACPEDAREARSOS AS A01_ARRLSTCAP
        ,ACPEDYMD_ACPEDBALOS AS A01_EOM_CURBAL
        ,ACPEDINTACGRDB_M AS A01_EOM_INT
        ,CASE 
           WHEN SOURCE = 'RED' THEN ACPEDYMD_ACPEDFORINTGROSDB  
           WHEN SOURCE = 'BLUE' THEN ACPEDYMD_ACPEDINTACGRDB 
         END AS A01_EOM_INTPRD
        ,A21284 AS MAR02_A01_OFFER_RATE
        ,ACPEDAREARSOS_Y AS MAR02_A01_EOY_ARRBAL
        ,ACBALBFWD AS MAR02_A01_EOY_INTBAL
        ,A16247 AS MAR02_A01_OFFER_CMS
        ,FLOOR(ACORIGINALTRM) AS MAR02_A01_ORIG_TERM
        ,(ACORIGINALTRM - FLOOR(ACORIGINALTRM)) * 100 AS MAR02_A01_ORIG_TMTH
        ,ACPEDGROSRT_Y AS MAR02_A01_RATE_YREND
        ,ACPEDAREARSOS_M AS MAR02_A01_EOM_ARRS
        ,CASE ACSOCREGCODE WHEN 'FSAM' THEN 'Y' ELSE 'N' END MAR02_A01_RMC_IND
        ,ACSMNTBAL AS MAR02_A01_STACLOBAL
        ,AC05C_DAT46 AS A01_CCA_LSTNOT
        ,ACINCEPDATE AS A01_COMP_DT 
        ,ACBALOS AS MAR02_A01_CURRENTBAL
        ,ACMAXMTHSINAREARS AS MAR02_A01_GRTMTHARR
        ,ARREARSHISTORY_TWELEVE AS MAR02_A01_HSTMTHARR  
       ,C62513 AS MAR02_A01_MAXERC
   FROM JOIN_LUTS
),
FILTER_ACCNOS_DIST AS (
  SELECT DISTINCT M_F.ACACNTNO
    FROM MAP_FROMSRC AS M_F
),
FILTER_ACPEDYMD_MAX_ACPEDMTHSINAREARS AS (
  SELECT MAX(ACPEDMTHSINAREARS) AS MAX_ACPEDMTHSINAREARS
        ,ACPEDACNTNO
    FROM TB_SRC_ACPEDYMD AS ACPEDYMD
   INNER JOIN FILTER_ACCNOS_DIST AS ACCNOS_DIST
      ON ACPEDYMD.ACPEDACNTNO = ACCNOS_DIST.ACACNTNO
   GROUP BY ACPEDACNTNO
),
FILTER_ACPEDYMD_MAX_MIGRDATE AS (
  SELECT MAX( ACPEDYMD.ACPEDMTHSINAREARS ) AS ACPEDMTHSINAREARS_MAX_MIGRDATE
        ,ACPEDACNTNO
   FROM TB_SRC_ACPEDYMD AS ACPEDYMD
  CROSS JOIN TB_UDMH_CTL AS CTRL
  INNER JOIN FILTER_ACCNOS_DIST AS ACCNOS_DIST
     ON ACPEDYMD.ACPEDACNTNO = ACCNOS_DIST.ACACNTNO
  WHERE ACPEDYMD.ACPEDPERIOD >= DATEADD(YEAR, -1, CTRL.WS_MIGR_DATE )
  GROUP BY ACPEDACNTNO
),
JOIN_DEPENDENT AS (
  SELECT M_F.*
        ,ACPEDYMD_MAX_ACPEDMTHSINAREARS.MAX_ACPEDMTHSINAREARS AS MAR11_A01_UNIGRTMAR
        ,(SELECT LEFT(
                    (SELECT FORMAT(ACPEDYMD_MAX_MIGRDATE.ACPEDMTHSINAREARS_MAX_MIGRDATE,'00') 
                        FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)')
                   +REPLICATE('0',24)
                 ,24)) AS MAR11_A01_UNIHISTMAR
    FROM MAP_FROMSRC AS M_F
    LEFT OUTER JOIN FILTER_ACPEDYMD_MAX_ACPEDMTHSINAREARS AS ACPEDYMD_MAX_ACPEDMTHSINAREARS
      ON ACPEDYMD_MAX_ACPEDMTHSINAREARS.ACPEDACNTNO = M_F.ACACNTNO
    LEFT OUTER JOIN FILTER_ACPEDYMD_MAX_MIGRDATE AS ACPEDYMD_MAX_MIGRDATE
      ON ACPEDYMD_MAX_MIGRDATE.ACPEDACNTNO = M_F.ACACNTNO
),

MAP_DEPENDENT_01 AS (
  SELECT J_D.*
        ,CASE MAR02_A01_STATUS                              
           WHEN 'R' THEN NULL
           WHEN 'L' THEN
             CASE SOURCE
               WHEN 'RED' THEN
                 CASE  
                    WHEN ACTINTCHGPERINDDR = 'Y' AND ACTINTCHGPERNODR = 1 THEN ACPEDAREARSOS_Y
                    ELSE ACPEDAREARSOS_M
                 END
               WHEN 'BLUE' THEN ACPEDAREARSOS_M
             END
          END AS MAR02_A01_ARREARIBB
        ,CASE MAR02_A01_STATUS
           WHEN 'R' THEN 0
           WHEN 'L' THEN
             CASE SOURCE
               WHEN 'RED' THEN ACAREARSOS
               WHEN 'BLUE' THEN ACAREARSPYMNTOS
             END
         END AS MAR02_A01_ARREARS
        ,CASE
            WHEN MAR02_A01_STATUS = 'R' THEN 0
            WHEN MAR02_A01_MPR_TYPE = 'EQT' THEN 0
            WHEN ACACTCODE = 'NOSUB' AND ACINTCCODE = 'ZERO' THEN 0
            WHEN SOURCE = 'RED' AND ACACTCODE IN ('FEEDI', 'FEEBTL', 'FEEFLX', 'FEEOFS', 'FEEANN') THEN 0
            WHEN PAYEREGFREQCODE = 'M' THEN
              CASE 
                WHEN PAYENEXTDUEDATE = PAYEFIRSTDATE THEN PAYEFIRSTAMOUNT
                WHEN PAYEFIRSTDATE >= DBO.FN_FIRST_OF_NEXT_MONTH(WS_MIGR_DATE) THEN PAYEFIRSTAMOUNT
                ELSE PAYEREGAMOUNT
              END
         END AS MAR02_A01_CMS
        ,CASE 
            WHEN MAR02_A01_STATUS = 'L' THEN NULL
            WHEN MAR02_A01_STATUS = 'R' THEN SUM_TRAMOUNTCR_RED
         END AS  MAR02_A01_REDEEM_AMT

        ,dbo.FN_FIRST_OF_MONTH(DATEADD(MONTH,COALESCE(MAR02_A01_TERM_MTH,0) * -1,DATEADD(YEAR,COALESCE(MAR02_A01_TERM,0) * -1,ACSCHEDTRMDATE))) AS A01_TERMST_DT
        ,CASE
           WHEN MAR01_M01_RED_INS = 'Y'AND MAR02_A01_STATUS = 'L' AND ACGACTTYPE = 'I' THEN
             CASE SOURCE
               WHEN 'RED' THEN ACAREARSOS
               WHEN 'BLUE' THEN ACAREARSPYMNTOS
             END
           ELSE 0
         END AS MAR02_A01_INS_ARRS
        ,CASE WHEN MAR01_M01_RED_INS = 'Y' AND MAR02_A01_STATUS = 'L' AND ACGACTTYPE = 'I' THEN ACBALOS ELSE 0 END AS MAR02_A01_INS_CBAL
        ,CASE
           WHEN SOURCE = 'RED'
            AND ACACTCODE IN ('FEEDI','FEEBTL','FEEFLX','FEEOFS','FEEANN')
            AND MAR02_A01_CURRENTBAL > 0 THEN MAR02_A01_CURRENTBAL
            ELSE 0
         END AS MAR02_A01_DEFSUM_BAL
        ,CASE
           WHEN MAR02_A01_RMC_IND = 'Y'AND MAR02_A01_MAXERC > 0 THEN 'Y'
           ELSE NULL
         END AS MAR02_A01_USE_MAXERC
    FROM JOIN_DEPENDENT AS J_D
),
MAP_DEPENDENT_02 AS (
  SELECT MAP_DEPENDENT_01.*
        ,CASE WHEN ACGACTTYPE = 'I' THEN MAR02_A01_CMS ELSE 0 END AS MAR02_A01_CMS_INS
        ,CASE WHEN MAR02_A01_MPR_TYPE = 'INT' THEN MAR02_A01_CMS ELSE NULL END AS MAR02_A01_CMS_INT
        ,CASE PAYEREGFREQCODE
           WHEN 'M' THEN MAR02_A01_CMS
           WHEN 'Y' THEN MAR02_A01_CMS / 12
         END AS MAR02_A01_M_CMS
    FROM MAP_DEPENDENT_01
),
MAP_DEPENDENT_03 AS (
  SELECT MAP_DEPENDENT_02.*
        ,CASE ACGACTTYPE WHEN 'I' THEN MAR02_A01_M_CMS ELSE 0 END AS MAR02_A01_M_CMS_INS
        ,CASE ACTPAYTYPE WHEN 'I' THEN MAR02_A01_M_CMS ELSE 0 END AS MAR02_A01_M_CMS_INT
    FROM MAP_DEPENDENT_02
),
MAP_COPYTARGET AS (
  SELECT MAP_DEPENDENT_03.*
        ,MAR02_A01_CMS_INT AS MAR02_A01_GROSS_INT
        ,MAR02_A01_INT_RATE AS MAR02_A01_PAY_RATE
        ,MAR02_A01_DEFSUM_BAL AS MAR11_A01_DEFSUM_BAL
        ,MAR02_A01_TERM AS MAR02_A01_R_TERM
        ,MAR02_A01_TERM_MTH AS MAR02_A01_R_TERM_MM
    FROM MAP_DEPENDENT_03
),
MAP_DEFAULTS AS (     --
  SELECT MAP_COPYTARGET.*
       ,'A01' AS A01_CODE
       ,NULL AS MAR02_A01_BONIND
       ,NULL AS MAR02_A01_CALC_CMS
       ,NULL AS MAR02_A01_CHECK_PP
       ,NULL AS MAR02_A01_HOMLOANIND
       ,NULL AS MAR02_A01_LOYAL_IND
       ,'N' AS MAR02_A01_PMBDISFLG
       ,'N' AS MAR02_A01_PP_LETSENT
       ,NULL AS MAR02_A01_REDPENOVER
       ,NULL AS MAR02_A01_ARREARCLR
       ,NULL AS MAR02_A01_ARREARINT
       ,NULL AS MAR02_A01_CHGINTNET
       ,0 AS MAR02_A01_CMS_CT
       ,NULL AS MAR02_A01_CNVINTADJ
       ,NULL AS MAR02_A01_CNVMIRTAX
       ,NULL AS MAR02_A01_EXCESS_AMT
       ,0 AS MAR02_A01_FISCAL_TAX
       ,NULL AS A01_INIT_INT
       ,NULL AS MAR02_A01_INT_LOAD
       ,NULL AS MAR02_A01_INT_ONLY
       ,NULL AS A01_INTLOD_DT
       ,NULL AS A01_ISTA_DT
       ,NULL AS MAR02_A01_MIRAS
       ,NULL AS MAR02_A01_MIRAS_AMT
       ,NULL AS MAR02_A01_NON_IBBAL
       ,NULL AS MAR02_A01_PREV_IBB_F
       ,NULL AS MAR02_A01_PREV_TAX_F
       ,NULL AS MAR02_A01_RED_PERCNT
       ,NULL AS A01_REDNOT_DT
       ,NULL AS A01_REDREQ_DT
       ,NULL AS MAR02_A01_SEC_DEBT
       ,NULL AS MAR02_A01_SPNS_RMNDR
       ,NULL AS MAR02_A01_TAX_IN_MTH
       ,NULL AS MAR02_A01_TAX_PREV
       ,NULL AS MAR02_A01_TAX_TODATE
       ,NULL AS MAR02_A01_TAXINPRD
       ,NULL AS MAR02_A01_TOT_LOYBON
       ,NULL AS MAR02_A01_EXP_INT
       ,NULL AS MAR02_A01_ACT_INT
       ,NULL AS MAR02_A01_ACT_TAX
       ,NULL AS MAR02_A01_IL_RED
       ,NULL AS MAR02_A01_DFRIND
       ,NULL AS MAR02_A01_M_CMS_CT
       ,NULL AS MAR02_A01_RED_WRN_DT
       ,NULL AS MAR02_A01_SWITCHBAL
       ,NULL AS MAR08_A01_CALTYP
       ,NULL AS MAR08_A01_CMS_IBB
       ,NULL AS MAR08_A01_CMSINTRTE
       ,NULL AS MAR08_A01_CMSCURBAL
       ,NULL AS MAR08_A01_CMSINTONLY
       ,NULL AS MAR08_A01_CMSREMMTH
       ,NULL AS MAR08_A01_CMSREMYRS
       ,NULL AS MAR11_A01_ARR_RES
       ,NULL AS A01_ARRCAP_DT
       ,NULL AS MAR02_A01_CAPARRAMT
       ,NULL AS A01_ARRPRT_DT
       ,0 AS MAR02_A01_POSTCAPARR --TODO: This field is defaulted, but there is a rule written in the mapping spec which has a dependency on A07, So it is mentioned in the deviation tracker
       ,NULL AS MAR02_A01_PORTDUE
       ,NULL AS A01_RTEEND_DT
       ,NULL AS MAR02_A01_PORTAMT
       ,NULL AS MAR02_A01_PRV_LOYBON
       ,NULL AS MAR02_A01_IRTEND_DT
       ,NULL AS A01_PER_E_DT
       ,NULL AS A01_PER_ST_DT
       ,NULL AS MAR08_A01_PYMFRQ
       ,NULL AS A01_EOM_FISINT
       ,NULL AS A01_EOM_FISTAX
       ,NULL AS A01_EOM_TAX
       ,NULL AS A01_EOM_TAXPRD
       ,NULL AS MAR02_A01_II_TO_CAP
       ,NULL AS A01_YTDCONVINT
       ,0 AS MAR02_A01_ANNREV_TYP
       ,NULL AS MAR02_A01_MPR_CODE_A
       ,NULL AS MAR02_A01_PRARRBAL
       ,NULL AS MAR02_A01_R_TARG_BAL
       ,NULL AS MAR02_A01_TARG_BAL
       ,NULL AS MAR02_A01_TARG_ORIDE
       ,NULL AS MAR02_A01_TARG_SCHEM
       ,NULL AS A01_CMS_ADD
       ,NULL AS A01_INTINS
       ,NULL AS A01_INT_ADJ
       ,0 AS MAR02_A01_SEC_FEE
       ,0 AS MAR02_A01_SEC_INS_D
       ,0 AS MAR02_A01_SEC_INS_ND
       ,NULL AS MAR11_A01_CR_MTHS
       ,NULL AS MAR11_A01_CRED_RCV
       ,NULL AS MAR11_A01_EOM_NET_CD
       ,NULL AS MAR11_A01_EXP_CR
       ,NULL AS MAR11_A01_NET_MTHS
       ,0 AS MAR11_A01_OVER_PAY
       ,0 AS MAR11_A01_UNDER_FEES
       ,0 AS MAR11_A01_UNDER_INS
       ,0 AS MAR11_A01_UNDER_INT
       ,0 AS MAR11_A01_UNDER_REP
       ,NULL AS MAR02_A01_FROZEN
       ,NULL AS MAR02_A01_UNCLEARED
       ,NULL AS MAR08_A01_TARG_CMS
       ,NULL AS MAR02_A01_BENINKIND
       ,NULL AS MAR02_A01_CMS_NOTPRD
       ,NULL AS MAR02_A01_EXTRACT
       ,NULL AS MAR02_A01_LEGREF_AMT
       ,'N' AS MAR02_A01_MAN_RED_QT
       ,NULL AS MAR02_A01_NOTICE_PRD
       ,NULL AS MAR02_A01_VALREF_AMT
       ,NULL AS MAR08_A01_RTC_EXT
       ,NULL AS A01_EXPIRY_DT
       ,NULL AS MAR02_A01_EX_INT_AMT
       ,NULL AS MAR02_A01_IOP_YEARS
       ,NULL AS A01_IOP_ST_DTE
       ,NULL AS MAR02_A01_CCA_RAC
       ,NULL AS MAR02_A01_PREVARRINT
       ,NULL AS MAR11_A01_PREVARRINT
       ,NULL AS MAR02_A01_JUDBAL
       ,NULL AS MAR02_A01_BANK_ACNO
       ,NULL AS MAR02_A01_SORT_CODE
       ,NULL AS MAR02_A01_MIG_ACCNO
       ,NULL AS MAR02_A01_PREMIG_ACCNO
       ,NULL AS MAR02_A01_PREMIG_SRCE
       ,NULL AS MAR02_A01_ANN_REVIEW
       ,NULL AS MAR02_A01_LOY_REAS
       ,'N' AS MAR02_A01_UNSEC_IND
       ,NULL AS MAR02_A01_CCA_LDATE
       ,NULL AS A01_BUILD_PROD
       ,NULL AS MAR02_A01_ARRFEEBAL
       ,NULL AS MAR02_A01_EOM_FEEBAL
       ,NULL AS MAR02_A01_FEE_ONLY
       ,NULL AS MAR02_A01_FEE_TOT
       ,NULL AS MAR02_A01_EOD_CURBAL
       ,NULL AS MAR02_A01_EOD_CMS
       ,NULL AS MAR02_A01_EOD_CMSINT
       ,NULL AS MAR02_A01_EOD_IBB
       ,NULL AS MAR02_A01_EOD_INTCDE
       ,NULL AS MAR02_A01_EOD_INTRTE
       ,NULL AS A01_EODMPR_CDE
       ,NULL AS MAR02_A01_MAX_ERCBAL
       ,NULL AS MAR02_A01_EOD_PRDCLS
       ,NULL AS MAR02_A01_ERC_CHRGD
       ,NULL AS A01_REPEXP_DT
       ,NULL AS MAR02_A01_ORIG_TYPE
       ,NULL AS A01_TMPREP_DT
       ,NULL AS MAR02_A01_ORIG_IOAMT
       ,NULL AS MAR02_ERC_TOTRPM
       ,NULL AS MAR02_ERC_OPM_BR
       ,NULL AS A01_PREV_CCA
       ,NULL AS A01_TOLMONTHS
       ,NULL AS A01_TOLDATE
       ,NULL AS A01_FORB_START
       ,NULL AS A01_FORB_END
       ,NULL AS A01_LTMPRPSTRT
       ,NULL AS A01_LTMPRPEND
        ----Explicit Defaults for SIGN fields
        ,' ' AS A01_SEC_INS_ND_SIGN
        ,' ' AS A01_SEC_INS_D_SIGN
        ,' ' AS A01_SEC_FEE_SIGN
        ,NULL AS A01_SIGN1
        ,NULL AS A01_SIGN3
        ,NULL AS A01_SIGN5
        ,NULL AS A01_SIGN6
        ,' ' AS A01_SIGN10 
        ,NULL AS A01_SIGN16
        ,NULL AS A01_SIGN18
        ,NULL AS A01_SIGN20
        ,NULL AS A01_SIGN22
        ,NULL AS A01_SIGN23
        ,NULL AS A01_SIGN24
        ,NULL AS A01_SIGN25
        ,NULL AS A01_SIGN26
        ,NULL AS A01_SIGN27
        ,NULL AS A01_SIGN29
        ,NULL AS A01_SIGN30
        ,NULL AS A01_SIGN31
        ,NULL AS A01_SIGN35
        ,NULL AS A01_ARES_SIGN
        ,NULL AS A01_PRV_LOY_SIGN
        ,NULL AS A01_FISTAX_SIGN
        ,NULL AS A01_EOM_TAX_SIGN
        ,NULL AS A01_TAX_PRD_SIGN
        ,NULL AS A01_CNVINT_SIGN
        ,NULL AS A01_PRARRBAL_SIGN
        ,NULL AS A01_INIT_INS_SIGN
        ,NULL AS A01_INT_ADJUST_SIGN
        ,NULL AS A01_CRED_RCV_SIGN
        ,NULL AS A01_EOM_NET_CD_SIGN
        ,NULL AS A01_EX_INT_AMT_SIGN
        ,NULL AS A01_FEE_TOT_SIGN 
        ,NULL AS A01_IFRS_OCBAL_SIGN --TODO: This is beieng defaulted as it has a dependency on the field MAR02.A01-IFRS-OCBAL which has  depency ON A05
        ,NULL AS A01_EODCURBAL_SIGN
        ,NULL AS A01_EODIBB_SIGN 
        ,NULL AS A01_FISINT_SIGN
        ----Explicit Defaults where it has depedency on other target types
        ,NULL AS A01_IF_ORG_DT --TODO: This is being defaulted because of its dependency on A06 and placed in the Deviation Tracker
        ,NULL AS A01_IFRS_PR_OR_DT --TODO: This is being defaulted because of its dependency on A06 and placed in the Deviation Tracker
        ,NULL AS MAR02_A01_EOM_IF_ORT --TODO: This is being defaulted because of its dependency on A06 and placed in the Deviation Tracker
        ,NULL AS MAR02_A01_IFRS_O_RTE --TODO: This is being defaulted because of its dependency on A06 and placed in the Deviation Tracker
        ,NULL AS MAR02_A01_IFRS_OCBAL --TODO: This is being defaulted because of its dependency on A05 and A06 and placed in the Deviation Tracker
        ,NULL AS MAR02_A01_IFRS_PR_PD --TODO: This is being defaulted because of its dependency on A05 and A06 and placed in the Deviation Tracker
        ,NULL AS MAR02_A01_REPO_CBAL --TODO: This is being defaulted because of its dependency on A05 placed in the Deviation Tracker
        ,NULL AS MAR02_A01_COMP_RATE --TODO: This is being defaulted because of its dependency on A06 and placed in the Deviation Tracker
        ,NULL AS MAR02_A01_EOM_CMS --TODO: This is being defaulted because of its dependency on A16 and placed in the Deviation Tracker
        ,NULL AS MAR02_A01_EOM_CMSINT --TODO: This is being defaulted because of its dependency on A16 and placed in the Deviation Tracker
        ,NULL AS MAR02_A01_SEP_DDS01 --TODO: This is being defaulted because of its dependency on M06 and placed in the Deviation Tracker
        ,NULL AS MAR02_A01_SEP_DUEDAY --TODO: This is being defaulted because of its dependency on M06 AND M01 and placed in the Deviation Tracker
        ----Defaulting Not Started Fields
        ,NULL AS MAR02_A01_CAT_LOAN
        ,NULL AS MAR11_A01_L_MLA_BD
        ,NULL AS MAR02_ERC_STBAL

    FROM MAP_COPYTARGET
),
MAP_EXCEPTION AS (
  SELECT MAP_DEF.*
        
        ,CASE 
           WHEN ACAGREDADVANCE > 0 AND MAR02_A01_ADVANCE <> ACAGREDADVANCE THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_A01','R:ROUNDING',ACACNTNO,'MAR02_A01_ADVANCE', MAR02_A01_ADVANCE))
           WHEN ACACTUALADVANCE > 0 AND MAR02_A01_ADVANCE <> ACACTUALADVANCE THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_A01','R:ROUNDING',ACACNTNO,'MAR02_A01_ADVANCE', MAR02_A01_ADVANCE))
         END AS EXCEPTION_1
    FROM MAP_DEFAULTS AS MAP_DEF
),
MAP_SIGN AS (
  SELECT MAP_EXP.*
        ,CASE                              
           WHEN MAR02_A01_ARREARIBB > 0 THEN '+'  
           WHEN MAR02_A01_ARREARIBB < 0 THEN '-'
           ELSE ' '
         END AS A01_SIGN2
        ,CASE 
           WHEN MAR02_A01_ARREARS > 0 THEN '+'
           WHEN MAR02_A01_ARREARS < 0 THEN '-'
           ELSE ' '
          END AS A01_SIGN4
         ,CASE  
            WHEN MAR02_A01_CURRENTBAL > 0 THEN '+'
            WHEN MAR02_A01_CURRENTBAL < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN7
         ,CASE  
            WHEN MAR02_A01_FINES > 0 THEN '+'
            WHEN MAR02_A01_FINES < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN8
         ,CASE  
            WHEN MAR02_A01_FISCAL_INT > 0 THEN '+'
            WHEN MAR02_A01_FISCAL_INT < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN9
         ,CASE  
            WHEN MAR02_A01_INT_IN_MTH > 0 THEN '+'
            WHEN MAR02_A01_INT_IN_MTH < 0 THEN '-'
            ELSE ' '
         END AS A01_SIGN11
        ,CASE  
           WHEN MAR02_A01_INT_PREV > 0 THEN '+'
           WHEN MAR02_A01_INT_PREV < 0 THEN '-'
           ELSE ' '
          END AS A01_SIGN12
         ,CASE  
            WHEN MAR02_A01_INT_TODATE > 0 THEN '+'
            WHEN MAR02_A01_INT_TODATE < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN13
         ,CASE  
            WHEN MAR02_A01_INTBEARBAL > 0 THEN '+'
            WHEN MAR02_A01_INTBEARBAL < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN14
         ,CASE  
            WHEN MAR02_A01_INTINPRD > 0 THEN '+'
            WHEN MAR02_A01_INTINPRD < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN15
         ,CASE  
            WHEN MAR02_A01_PAIDTODATE > 0 THEN '+'
            WHEN MAR02_A01_PAIDTODATE < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN17
         ,CASE  
            WHEN MAR02_A01_PREV_INT_F > 0 THEN '+'
            WHEN MAR02_A01_PREV_INT_F < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN19
         ,CASE  
            WHEN MAR02_A01_DEFSUM_BAL > 0 THEN '+'
            WHEN MAR02_A01_DEFSUM_BAL < 0 THEN '-'
            ELSE ' '
          END AS A01_DEFSUM_BAL02_SIGN
         ,CASE  
            WHEN MAR02_A01_REDEEM_AMT > 0 THEN '+'
            WHEN MAR02_A01_REDEEM_AMT < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN21
         ,CASE  
            WHEN MAR02_A01_PAID_MTH > 0 THEN '+'
            WHEN MAR02_A01_PAID_MTH < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN32
         ,CASE  
            WHEN MAR02_A01_PAYMNT_RES > 0 THEN '+'
            WHEN MAR02_A01_PAYMNT_RES < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN33
         ,CASE  
            WHEN MAR02_A01_RES_START > 0 THEN '+'
            WHEN MAR02_A01_RES_START < 0 THEN '-'
            ELSE ' '
          END AS A01_SIGN34
         ,CASE
            WHEN A01_ARRLSTCAP > 0 THEN '+'
            WHEN A01_ARRLSTCAP < 0 THEN '-'
            ELSE ' '
          END AS A01_ARR_SIGN
         ,CASE  
            WHEN A01_EOM_INT > 0 THEN '+'
            WHEN A01_EOM_INT < 0 THEN '-'
            ELSE ' '
          END AS A01_INT_SIGN
         ,CASE  
            WHEN A01_EOM_INTPRD > 0 THEN '+'
            WHEN A01_EOM_INTPRD < 0 THEN '-'
            ELSE ' '
          END AS A01_INTPRD_SIGN
         ,CASE  
            WHEN MAR02_A01_EOY_ARRBAL > 0 THEN '+'
            WHEN MAR02_A01_EOY_ARRBAL < 0 THEN '-'
            ELSE ' '
          END AS A01_ARRBAL_SIGN
         ,CASE  
            WHEN MAR02_A01_EOY_INTBAL > 0 THEN '+'
            WHEN MAR02_A01_EOY_INTBAL < 0 THEN '-'
            ELSE ' '
          END AS A01_INTBAL_SIGN
         ,CASE  
            WHEN MAR02_A01_PRINC_BAL > 0 THEN '+'
            WHEN MAR02_A01_PRINC_BAL < 0 THEN '-'
            ELSE ' '
          END AS A01_PRINC_BAL_SIGN
         ,CASE  
             WHEN MAR02_A01_YR_INT_BAL > 0 THEN '+'
             WHEN MAR02_A01_YR_INT_BAL < 0 THEN '-'
             ELSE ' '
          END AS A01_SIGN28
         ,CASE  
             WHEN MAR02_A01_EOM_ARRS > 0 THEN '+'
             WHEN MAR02_A01_EOM_ARRS < 0 THEN '-'
             ELSE ' '
          END AS A01_EOM_ARRS_SIGN
         ,CASE  
            WHEN MAR02_A01_INS_CBAL > 0 THEN '+'
            WHEN MAR02_A01_INS_CBAL  < 0 THEN '-'
            ELSE ' '
          END AS A01_INS_CBAL_SIGN
         ,CASE  
            WHEN MAR02_A01_INS_ARRS > 0 THEN '+'
            WHEN MAR02_A01_INS_ARRS < 0 THEN '-'
            ELSE ' '
           END AS A01_INS_ARRS_SIGN
         ,CASE  
            WHEN MAR02_A01_STACLOBAL > 0 THEN '+'
            WHEN MAR02_A01_STACLOBAL  < 0 THEN '-'
            ELSE ' '
          END AS A01_STACLOBAL_SIGN
         ,CASE  
            WHEN MAR11_A01_DEFSUM_BAL > 0 THEN '+'
            WHEN MAR11_A01_DEFSUM_BAL < 0 THEN '-'
            ELSE ' '
          END AS A01_DEFSUM_BAL11_SIGN
         ,CASE  
            WHEN MAR02_A01_MAXERC > 0 THEN '+'
            WHEN MAR02_A01_MAXERC < 0 THEN '-'
            ELSE ' '
          END AS A01_MAX_ERC_SIGN
         ,CASE  
            WHEN A01_EOM_CURBAL > 0 THEN '+'
            WHEN A01_EOM_CURBAL < 0 THEN '-'
            ELSE ' '
          END AS A01_CURBAL_SIGN
        ,' ' AS A01_ARRFEEBAL_SIGN
        ,' ' AS A01_EOMFEEBAL_SIGN
    FROM MAP_EXCEPTION AS MAP_EXP
),
OUT_FIELDS AS (
  SELECT ACACNTNO AS X02KEY
        ,A01_CODE
        ,A01_SEQNO
        ,MAR02_A01_BONIND
        ,MAR02_A01_CALC_CMS
        ,MAR02_A01_CHECK_PP
        ,MAR02_A01_HOMLOANIND
        ,MAR02_A01_LOYAL_IND
        ,MAR02_A01_MPR_TYPE
        ,MAR02_A01_PMBDISFLG
        ,MAR02_A01_PP_LETSENT
        ,MAR02_A01_REDPENOVER
        ,MAR02_A01_STATUS
        ,MAR02_A01_ADVANCE
        ,A01_APPLIC_DT
        ,A01_ARR_START_DT
        ,A01_SIGN1
        ,MAR02_A01_ARREARCLR
        ,A01_SIGN2
        ,MAR02_A01_ARREARIBB
        ,A01_SIGN3
        ,MAR02_A01_ARREARINT
        ,A01_SIGN4
        ,MAR02_A01_ARREARS
        ,MAR02_A01_CHGINTNET
        ,MAR02_A01_CMS
        ,MAR02_A01_CMS_CT
        ,MAR02_A01_CMS_INS
        ,MAR02_A01_CMS_INT
        ,A01_SIGN5
        ,MAR02_A01_CNVINTADJ
        ,A01_SIGN6
        ,MAR02_A01_CNVMIRTAX
        ,A01_COMP_DT
        ,A01_SIGN7
        ,MAR02_A01_CURRENTBAL
        ,MAR02_A01_EXCESS_AMT
        ,A01_SIGN8
        ,MAR02_A01_FINES
        ,A01_SIGN9
        ,MAR02_A01_FISCAL_INT
        ,A01_SIGN10
        ,MAR02_A01_FISCAL_TAX
        ,MAR02_A01_GROSS_INT
        ,A01_SIGN11
        ,MAR02_A01_INT_IN_MTH
        ,A01_INIT_INT
        ,MAR02_A01_INT_LOAD
        ,MAR02_A01_INT_ONLY
        ,A01_SIGN12
        ,MAR02_A01_INT_PREV
        ,MAR02_A01_INT_RATE
        ,A01_SIGN13
        ,MAR02_A01_INT_TODATE
        ,A01_SIGN14
        ,MAR02_A01_INTBEARBAL
        ,A01_SIGN15
        ,MAR02_A01_INTINPRD
        ,A01_INTLOD_DT
        ,MAR02_A01_INTROCODE
        ,A01_ISTA_DT
        ,MAR02_A01_MIRAS
        ,MAR02_A01_MIRAS_AMT
        ,MAR02_A01_MPR_CODE
        ,A01_SIGN16
        ,MAR02_A01_NON_IBBAL
        ,A01_SIGN17
        ,MAR02_A01_PAIDTODATE
        ,MAR02_A01_PAY_RATE
        ,A01_SIGN18
        ,MAR02_A01_PREV_IBB_F
        ,A01_SIGN19
        ,MAR02_A01_PREV_INT_F
        ,A01_SIGN20
        ,MAR02_A01_PREV_TAX_F
        ,MAR02_A01_PROD_RATE
        ,MAR02_A01_RED_PERCNT
        ,A01_SIGN21
        ,MAR02_A01_REDEEM_AMT
        ,A01_REDEEM_DT
        ,A01_REDNOT_DT
        ,A01_REDREQ_DT
        ,MAR02_A01_REL_AMOUNT
        ,A01_SIGN22
        ,MAR02_A01_REPO_CBAL
        ,MAR02_A01_RETAINED
        ,MAR02_A01_SEC_DEBT
        ,MAR02_A01_SPNS_RMNDR
        ,A01_SIGN23
        ,MAR02_A01_TAX_IN_MTH
        ,A01_SIGN24
        ,MAR02_A01_TAX_PREV
        ,A01_SIGN25
        ,MAR02_A01_TAX_TODATE
        ,A01_SIGN26
        ,MAR02_A01_TAXINPRD
        ,A01_SIGN27
        ,MAR02_A01_TOT_LOYBON
        ,MAR02_A01_TERM
        ,MAR02_A01_TERM_MTH
        ,A01_TERMST_DT
        ,A01_SIGN28
        ,MAR02_A01_YR_INT_BAL
        ,A01_SIGN29
        ,MAR02_A01_EXP_INT
        ,A01_SIGN30
        ,MAR02_A01_ACT_INT
        ,A01_SIGN31
        ,MAR02_A01_ACT_TAX
        ,MAR02_A01_IL_RED
        ,MAR02_A01_CASHBKAMT
        ,MAR02_A01_CCA_REG
        ,MAR02_A01_DFRIND
        ,MAR02_A01_FLEX_RULE
        ,MAR02_A01_INTRTECDE
        ,MAR02_A01_M_CMS
        ,MAR02_A01_M_CMS_CT
        ,MAR02_A01_M_CMS_INS
        ,MAR02_A01_M_CMS_INT
        ,A01_SIGN32
        ,MAR02_A01_PAID_MTH
        ,A01_SIGN33
        ,MAR02_A01_PAYMNT_RES
        ,MAR02_A01_RATE_EXP
        ,MAR02_A01_RED_WRN_DT
        ,A01_SIGN34
        ,MAR02_A01_RES_START
        ,MAR02_A01_RTESTR_DT
        ,A01_SIGN35
        ,MAR02_A01_SWITCHBAL
        ,MAR08_A01_CALTYP
        ,MAR08_A01_CMS_IBB
        ,MAR08_A01_CMSINTRTE
        ,MAR08_A01_CMSCURBAL
        ,MAR08_A01_CMSINTONLY
        ,MAR08_A01_CMSREMMTH
        ,MAR08_A01_CMSREMYRS
        ,A01_ARES_SIGN
        ,MAR11_A01_ARR_RES
        ,A01_ARRCAP_DT
        ,MAR02_A01_CAPARRAMT
        ,A01_ARRPRT_DT
        ,MAR02_A01_POSTCAPARR
        ,MAR02_A01_PORTED
        ,MAR02_A01_PORTDUE
        ,MAR02_A01_PORTNO
        ,A01_RTEEND_DT
        ,MAR02_A01_PORTAMT
        ,A01_PRV_LOY_SIGN
        ,MAR02_A01_PRV_LOYBON
        ,A01_LSTCAP_DT
        ,MAR02_A01_IRTEND_DT
        ,MAR02_A01_PURPOSE
        ,MAR02_A01_CAT_LOAN
        ,A01_PER_E_DT
        ,A01_PER_ST_DT
        ,MAR08_A01_PYMFRQ
        ,A01_ARR_SIGN
        ,A01_ARRLSTCAP
        ,MAR02_A01_COMP_RATE
        ,MAR02_A01_EOM_CMS
        ,MAR02_A01_EOM_CMSINT
        ,A01_CURBAL_SIGN
        ,A01_EOM_CURBAL
        ,A01_FISINT_SIGN
        ,A01_EOM_FISINT
        ,A01_FISTAX_SIGN
        ,A01_EOM_FISTAX
        ,A01_INT_SIGN
        ,A01_EOM_INT
        ,A01_INTPRD_SIGN
        ,A01_EOM_INTPRD
        ,A01_EOM_TAX_SIGN
        ,A01_EOM_TAX
        ,A01_TAX_PRD_SIGN
        ,A01_EOM_TAXPRD
        ,MAR02_A01_II_TO_CAP
        ,MAR02_A01_OFFER_RATE
        ,MAR02_A01_SEP_DDS01
        ,MAR02_A01_SEP_DUEDAY
        ,A01_CNVINT_SIGN
        ,A01_YTDCONVINT
        ,MAR02_A01_ANNREV_TYP
        ,A01_ARRBAL_SIGN
        ,MAR02_A01_EOY_ARRBAL
        ,A01_INTBAL_SIGN
        ,MAR02_A01_EOY_INTBAL
        ,MAR02_A01_MPR_CODE_A
        ,MAR02_A01_OFFER_CMS
        ,MAR02_A01_ORIG_TERM
        ,MAR02_A01_ORIG_TMTH
        ,A01_PRARRBAL_SIGN
        ,MAR02_A01_PRARRBAL
        ,MAR02_A01_R_TARG_BAL
        ,MAR02_A01_R_TERM
        ,MAR02_A01_R_TERM_MM
        ,MAR02_A01_RATE_YREND
        ,MAR02_A01_TARG_BAL
        ,MAR02_A01_TARG_ORIDE
        ,MAR02_A01_TARG_SCHEM
        ,A01_CMS_ADD
        ,A01_INIT_INS_SIGN
        ,A01_INTINS
        ,A01_INT_ADJUST_SIGN
        ,A01_INT_ADJ
        ,A01_PRINC_BAL_SIGN
        ,MAR02_A01_PRINC_BAL
        ,A01_SEC_FEE_SIGN
        ,MAR02_A01_SEC_FEE
        ,A01_SEC_INS_D_SIGN
        ,MAR02_A01_SEC_INS_D
        ,A01_SEC_INS_ND_SIGN
        ,MAR02_A01_SEC_INS_ND
        ,MAR11_A01_CR_MTHS
        ,A01_CRED_RCV_SIGN
        ,MAR11_A01_CRED_RCV
        ,A01_EOM_NET_CD_SIGN
        ,MAR11_A01_EOM_NET_CD
        ,MAR11_A01_EXP_CR
        ,MAR11_A01_NET_MTHS
        ,MAR11_A01_OVER_PAY
        ,MAR11_A01_UNDER_FEES
        ,MAR11_A01_UNDER_INS
        ,MAR11_A01_UNDER_INT
        ,MAR11_A01_UNDER_REP
        ,MAR02_A01_FROZEN
        ,MAR02_A01_UNCLEARED
        ,MAR08_A01_TARG_CMS
        ,MAR02_A01_BENINKIND
        ,MAR02_A01_CMS_NOTPRD
        ,A01_EOM_ARRS_SIGN
        ,MAR02_A01_EOM_ARRS
        ,MAR02_A01_EXTRACT
        ,A01_INS_ARRS_SIGN
        ,MAR02_A01_INS_ARRS
        ,A01_INS_CBAL_SIGN
        ,MAR02_A01_INS_CBAL
        ,MAR02_A01_LEGREF_AMT
        ,MAR02_A01_MAN_RED_QT
        ,MAR02_A01_NOTICE_PRD
        ,MAR02_A01_RMC_IND
        ,MAR02_A01_VALREF_AMT
        ,MAR08_A01_RTC_EXT
        ,A01_IF_ORG_DT
        ,MAR02_A01_IFRS_O_RTE
        ,A01_IFRS_PR_OR_DT
        ,MAR02_A01_IFRS_PR_PD
        ,MAR11_A01_L_MLA_BD
        ,A01_EXPIRY_DT
        ,A01_STACLOBAL_SIGN
        ,MAR02_A01_STACLOBAL
        ,A01_EX_INT_AMT_SIGN
        ,MAR02_A01_EX_INT_AMT
        ,MAR02_A01_EOM_IF_ORT
        ,MAR02_A01_IOP_YEARS
        ,A01_IOP_ST_DTE
        ,A01_CCA_LSTNOT
        ,MAR02_A01_CCA_RAC
        ,MAR02_A01_PREVARRINT
        ,A01_DEFSUM_BAL02_SIGN
        ,MAR02_A01_DEFSUM_BAL
        ,MAR11_A01_PREVARRINT
        ,A01_DEFSUM_BAL11_SIGN
        ,MAR11_A01_DEFSUM_BAL
        ,MAR02_A01_JUDBAL
        ,MAR02_A01_BANK_ACNO
        ,MAR02_A01_SORT_CODE
        ,MAR02_A01_MIG_ACCNO
        ,MAR02_A01_PREMIG_ACCNO
        ,MAR02_A01_PREMIG_SRCE
        ,MAR02_A01_ANN_REVIEW
        ,MAR02_A01_GRTMTHARR
        ,MAR02_A01_HSTMTHARR
        ,MAR11_A01_UNIGRTMAR
        ,MAR11_A01_UNIHISTMAR
        ,MAR02_A01_LOY_REAS
        ,MAR02_A01_UNSEC_IND
        ,MAR02_A01_CCA_LDATE
        ,A01_BUILD_PROD
        ,MAR02_A01_ARRFEEBAL
        ,A01_ARRFEEBAL_SIGN
        ,A01_EOMFEEBAL_SIGN
        ,MAR02_A01_EOM_FEEBAL
        ,MAR02_A01_FEE_ONLY
        ,A01_FEE_TOT_SIGN
        ,MAR02_A01_FEE_TOT
        ,A01_IFRS_OCBAL_SIGN
        ,MAR02_A01_IFRS_OCBAL
        ,A01_EODCURBAL_SIGN
        ,MAR02_A01_EOD_CURBAL
        ,MAR02_A01_EOD_CMS
        ,MAR02_A01_EOD_CMSINT
        ,A01_EODIBB_SIGN
        ,MAR02_A01_EOD_IBB
        ,MAR02_A01_EOD_INTCDE
        ,MAR02_A01_EOD_INTRTE
        ,A01_EODMPR_CDE
        ,MAR02_A01_MAX_ERCBAL
        ,MAR02_A01_EOD_PRDCLS
        ,A01_MAX_ERC_SIGN
        ,MAR02_A01_MAXERC
        ,MAR02_A01_ERC_CHRGD
        ,MAR02_A01_USE_MAXERC
        ,A01_REPEXP_DT
        ,MAR02_A01_ORIG_TYPE
        ,A01_TMPREP_DT
        ,MAR02_A01_ORIG_IOAMT
        ,MAR02_ERC_STBAL
        ,MAR02_ERC_TOTRPM
        ,MAR02_ERC_OPM_BR
        ,A01_PREV_CCA
        ,A01_TOLMONTHS
        ,A01_TOLDATE
        ,A01_FORB_START
        ,A01_FORB_END
        ,A01_LTMPRPSTRT
        ,A01_LTMPRPEND
        --Exception Fields
         ,CASE 
            WHEN CAST(EXCEPTION_1 AS VARCHAR(MAX)) = ' ' THEN NULL 
            ELSE CAST( CAST(EXCEPTION_1 AS VARCHAR(MAX)) AS XML) 
           END AS X02_UDMH_EXCEPTION
             
    FROM MAP_SIGN
)

SELECT * FROM OUT_FIELDS 
GO
/*
 * Author: Bhargav Satish
 * Creation Date: 30/06/2015
 * Description: This SQL code applies business transformation for X02_A02 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version         Date           Developer                     Description
 *-----------------------------------------------------------------------------------------------------
    1.0         30/06/2015      Bhargav Satish       Based on Mapping Spec version v0.5
    2.0         15/07/2015      Bhargav Satish       Changes Done based on code review by Sowmya
    3.0         06/08/2015      Aishwarya Rao        Modifications as per Mapping Spec Version v0.7
    4.0         09/23/2015      Pothirajan           Based on mapping spec version v1.0
	5.0         14/12/2015      Shravani Huggi       Updated based on Mapping spec v1.3
 *-----------------------------------------------------------------------------------------------------
 */
 
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_A02]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_A02]
GO 
 
CREATE VIEW [dbo].[VW_X02_A02]
AS 
WITH
FILTER_AA31D_TIERS AS (
  SELECT AA31D.ACNTNO
        ,AC01_MAIN.ACACNTNO AS AC01_ACNTNO
        ,AC01_MAIN.ACSUBACNO AS AC01_ACSUBACNO
        ,AA31D.ACNTSUBNO
        ,AA31D.ARNGNO
        ,AA31D.ARNGTYPE
        ,AA31D.ARNGSTATUS
        ,AA31D.CREATEDATE
        ,AA31D.CANCELDATE
        ,AA31D.LASTCHECKDATE
        ,AA31D.ENDDATE    
        ,AA31D.PAYMENTMETHOD
        ,FLT_AA32P_TIERCHANG.TIER_INSTLDATE_END
        ,FLT_AA32P_TIERCHANG.TIER_STATUS
        ,FLT_AA32P_TIERCHANG.INSTLDATE
        ,FLT_AA32P_TIERCHANG.INSTLAMOUNT
        ,CTRL.WS_MIGR_DATE
        ,CTRL.SOURCE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_AA31D AS AA31D
      ON AC01_MAIN.ACACNTNO = AA31D.ACNTNO
   INNER JOIN VW_FILTER_AA32P_TIERCHANGE AS FLT_AA32P_TIERCHANG
      ON AA31D.ARNGNO = FLT_AA32P_TIERCHANG.ARNGNO  
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE (AA31D.CANCELDATE IS NULL
      OR AA31D.CANCELDATE > AA31D.LASTCHECKDATE)
     AND (AC01_MAIN.ACCLRDATE IS NULL
      OR AC01_MAIN.ACCLRDATE >= FLT_AA32P_TIERCHANG.INSTLDATE)
    AND AC01_MAIN.ACGACTTYPE = 'M'
),
FILTER_AA31D_HISTORIC_TIERS_OVERP_INARR_SUBACNT AS (
  SELECT FIL_AA31D_TIERS.*
    FROM FILTER_AA31D_TIERS AS FIL_AA31D_TIERS
   OUTER APPLY (
         SELECT TOP 1
                 A07.MAR09_A07_ARREARS
           FROM TB_X02_A07 AS A07
          WHERE A07.X02KEY = FIL_AA31D_TIERS.ACNTNO
            AND A07.A07_SUB_ACC = FIL_AA31D_TIERS.AC01_ACSUBACNO
            AND A07.A07_POSTED_DT <= FIL_AA31D_TIERS.INSTLDATE ) AS TIERSTART_ARREARS
   WHERE FIL_AA31D_TIERS.TIER_STATUS = 'HISTORIC'
     AND FIL_AA31D_TIERS.ARNGTYPE = 'CMS+'
     AND EXISTS (SELECT 1
                   FROM TB_X02_A07 AS A07
                  WHERE A07.X02KEY = FIL_AA31D_TIERS.ACNTNO
                    AND A07.A07_SUB_ACC = FIL_AA31D_TIERS.AC01_ACSUBACNO
                    AND A07.MAR09_A07_ARREARS > 0
                    AND A07.A07_POSTED_DT <= FIL_AA31D_TIERS.INSTLDATE )
),
FILTER_AA31D_HISTORIC_TIERS_OVERP_NOARR_SUBACNT AS (
  SELECT FIL_AA31D_TIERS.*
    FROM FILTER_AA31D_TIERS AS FIL_AA31D_TIERS
   WHERE FIL_AA31D_TIERS.TIER_STATUS = 'HISTORIC' 
     AND FIL_AA31D_TIERS.ARNGTYPE = 'CMS+'
     AND NOT EXISTS (SELECT 1
                       FROM FILTER_AA31D_HISTORIC_TIERS_OVERP_INARR_SUBACNT 
                      WHERE FILTER_AA31D_HISTORIC_TIERS_OVERP_INARR_SUBACNT.ACNTNO = FIL_AA31D_TIERS.ACNTNO )
),
FILTER_AA31D_HISTORIC_TIERS_UNDERP_SUBACNT AS (
  SELECT FIL_AA31D_TIERS.*
    FROM FILTER_AA31D_TIERS AS FIL_AA31D_TIERS
   WHERE FIL_AA31D_TIERS.TIER_STATUS = 'HISTORIC'
     AND FIL_AA31D_TIERS.ARNGTYPE = 'CMS-'
),
FILTER_AA31D_CURRENTFUTURE_TIERS_OVERP_INARR_SUBACNT AS (
  SELECT FIL_AA31D_TIERS.*
    FROM FILTER_AA31D_TIERS AS FIL_AA31D_TIERS
   INNER JOIN VW_FILTER_A07_LATEST AS A07_LATEST
      ON A07_LATEST.X02KEY = FIL_AA31D_TIERS.ACNTNO
   INNER JOIN TB_X02_A01 AS A01
      ON A07_LATEST.A07_SUB_ACC = A01.A01_SEQNO --TODO CHECK WITH ANSUL THIS JOINING CONDN IS OK
   WHERE FIL_AA31D_TIERS.TIER_STATUS IN ('CURRENT','FUTURE')
     AND FIL_AA31D_TIERS.ARNGTYPE = 'CMS+'
     AND A07_LATEST.MAR09_A07_ARREARS > 0
     AND (    FIL_AA31D_TIERS.ARNGSTATUS <> 'D'
           OR FIL_AA31D_TIERS.ARNGSTATUS IS NULL
           OR FIL_AA31D_TIERS.INSTLDATE <= WS_MIGR_DATE )  
),
FILTER_AA31D_CURRENTFUTURE_TIERS_OVERP_NOARR_SUBACNT AS (
  SELECT FIL_AA31D_TIERS.*
    FROM FILTER_AA31D_TIERS AS FIL_AA31D_TIERS
   WHERE FIL_AA31D_TIERS.TIER_STATUS IN ('CURRENT','FUTURE')
     AND FIL_AA31D_TIERS.ARNGTYPE = 'CMS+'
     AND (    FIL_AA31D_TIERS.ARNGSTATUS <> 'D'
           OR FIL_AA31D_TIERS.ARNGSTATUS IS NULL
           OR FIL_AA31D_TIERS.INSTLDATE <= WS_MIGR_DATE )
     AND  NOT EXISTS ( SELECT 1
                         FROM FILTER_AA31D_CURRENTFUTURE_TIERS_OVERP_INARR_SUBACNT
                        WHERE FILTER_AA31D_CURRENTFUTURE_TIERS_OVERP_INARR_SUBACNT.ACNTNO = FIL_AA31D_TIERS.ACNTNO )
),
FILTER_AA31D_CURRENTFUTURE_TIERS_UNDERP_SUBACNT AS (
  SELECT FIL_AA31D_TIERS.*
    FROM FILTER_AA31D_TIERS AS FIL_AA31D_TIERS
   WHERE FIL_AA31D_TIERS.TIER_STATUS IN ('CURRENT','FUTURE')
     AND FIL_AA31D_TIERS.ARNGTYPE = 'CMS-'
     AND (    FIL_AA31D_TIERS.ARNGSTATUS <> 'D'
           OR FIL_AA31D_TIERS.ARNGSTATUS IS NULL
           OR FIL_AA31D_TIERS.INSTLDATE <= WS_MIGR_DATE )  
),
FILTER_ARRNG_REAS_BLUE AS (
   SELECT FIL_AA31D_TIERS.*        
         ,AH48C.DATAVALUE 
        ,AH48C.CHNGDATETIME
     FROM FILTER_AA31D_TIERS AS FIL_AA31D_TIERS
    JOIN TB_SRC_AH48C AS AH48C
      ON AH48C.ACNTNO = FIL_AA31D_TIERS.ACNTNO
      AND AH48C.DATACODE = ((5-1)*50)+10 -- Block 5; Value 10, aka 210
      AND AH48C.CHNGDATETIME <= COALESCE( FIL_AA31D_TIERS.CANCELDATE, FIL_AA31D_TIERS.ENDDATE )
      AND AH48C.CHNGDATETIME >= FIL_AA31D_TIERS.CREATEDATE
),
FILTER_ARRNG_REAS_RED AS (
  SELECT FIL_AA31D_TIERS.*
        ,AH48C.DATAVALUE 
        ,AH48C.CHNGDATETIME 
    FROM FILTER_AA31D_TIERS AS FIL_AA31D_TIERS
    JOIN TB_SRC_AH48C AS AH48C
      ON AH48C.ACNTNO = FIL_AA31D_TIERS.ACNTNO
      AND AH48C.DATACODE = ((4-1)*50)+10 -- Block 5; Value 10, aka 210
      AND AH48C.CHNGDATETIME <= COALESCE( FIL_AA31D_TIERS.CANCELDATE, FIL_AA31D_TIERS.ENDDATE )
      AND AH48C.CHNGDATETIME >= FIL_AA31D_TIERS.CREATEDATE
),
JOIN_WRITECRITERIA AS (
  SELECT FILTER_AA31D_HISTORIC_TIERS_OVERP_INARR_SUBACNT.*
    FROM FILTER_AA31D_HISTORIC_TIERS_OVERP_INARR_SUBACNT
   UNION ALL
  SELECT FILTER_AA31D_HISTORIC_TIERS_OVERP_NOARR_SUBACNT.*
    FROM FILTER_AA31D_HISTORIC_TIERS_OVERP_NOARR_SUBACNT
   UNION ALL
  SELECT FILTER_AA31D_HISTORIC_TIERS_UNDERP_SUBACNT.*
    FROM FILTER_AA31D_HISTORIC_TIERS_UNDERP_SUBACNT
   UNION ALL
  SELECT FILTER_AA31D_CURRENTFUTURE_TIERS_OVERP_INARR_SUBACNT.*
    FROM FILTER_AA31D_CURRENTFUTURE_TIERS_OVERP_INARR_SUBACNT
   UNION ALL
  SELECT FILTER_AA31D_CURRENTFUTURE_TIERS_OVERP_NOARR_SUBACNT.*
    FROM FILTER_AA31D_CURRENTFUTURE_TIERS_OVERP_NOARR_SUBACNT
   UNION ALL
  SELECT FILTER_AA31D_CURRENTFUTURE_TIERS_UNDERP_SUBACNT.*
    FROM FILTER_AA31D_CURRENTFUTURE_TIERS_UNDERP_SUBACNT
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,A07.MAR09_A07_ARREARS
        ,A01.MAR02_A01_CMS
        ,A01.A01_SEQNO
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT JOIN TB_X02_A07 AS A07
      ON A07.X02KEY = J_WC.AC01_ACNTNO
    LEFT JOIN TB_X02_A01 AS A01
      ON A01.X02KEY = J_WC.AC01_ACNTNO
),
JOIN_LUTS AS (
  SELECT J_EX.*
        --TOP 1
        -- ARRNG_REAS.TGT_ARRNG_REAS AS TGT_ARRNG
        --,ARRNG_REAS_BLUE.*
        -- J_E.MAR09_A07_ARREARS
  --      ,J_E.MAR02_A01_CMS
        --,J_E.A01_SEQNO
    FROM JOIN_EXTRA AS J_EX
--    LEFT OUTER JOIN FILTER_ARRNG_REAS_BLUE AS ARRNG_REAS_BLUE
    --  ON ARRNG_REAS_BLUE.DATAVALUE = ARRNG_REAS.SRC_VAL10_BLK5
    --LEFT OUTER JOIN FILTER_ARRNG_REAS_RED AS ARRNG_REAS_RED
    -- ON ARRNG_REAS_RED.DATAVALUE = ARRNG_REAS.SRC_VAL10_BLK5
    --LEFT OUTER JOIN JOIN_EXTRA AS J_E  
    --  ON ARRNG_REAS_BLUE.ACNTNO = J_E.ACNTNO
),
MAP_FROMSRC AS (
  SELECT J_LT.*
        ,AC01_ACNTNO AS X02KEY
        ,J_LT.AC01_ACSUBACNO AS A02_SUB_ACC
        ,J_LT.ARNGTYPE AS ADM20_A02_DETAILS_77
        ,CASE
          WHEN J_LT.CREATEDATE >= J_LT.CANCELDATE THEN J_LT.CREATEDATE
          WHEN J_LT.CANCELDATE >  J_LT.CREATEDATE THEN J_LT.CANCELDATE
         END AS A02_AMEND_DT
        ,CASE J_LT.ARNGTYPE 
           WHEN 'CMS-' THEN  --TODO: Need more clarity on Exception, have sent mail to Ansul, with the subject Base Query Showstopper
             J_LT.INSTLAMOUNT*(J_LT.MAR09_A07_ARREARS / SUM (J_LT.MAR09_A07_ARREARS) OVER (
                                                                                            PARTITION BY J_LT.ACNTNO
                                                                                                        ,J_LT.ARNGNO
                                                                                                        ,J_LT.INSTLDATE 
                                                                                           )
                               )
           WHEN 'CMS+' THEN J_LT.INSTLAMOUNT *(J_LT.MAR02_A01_CMS /SUM(J_LT.MAR02_A01_CMS) OVER (
                                                                                                  PARTITION BY J_LT.ACNTNO
                                                                                                              ,J_LT.ARNGNO
                                                                                                              ,J_LT.INSTLDATE 
                                                                                                 )
                                              )
         END AS ADM20_A02_AMT_ARR
        ,CASE
           WHEN J_LT.ENDDATE <= COALESCE(J_LT.CANCELDATE,'1900-01-01')
            AND J_LT.ENDDATE <= COALESCE(J_LT.TIER_INSTLDATE_END, '1900-01-01')
             THEN J_LT.ENDDATE
           WHEN J_LT.CANCELDATE <= COALESCE(J_LT.ENDDATE,'1900-01-01')
            AND J_LT.CANCELDATE <= COALESCE(J_LT.TIER_INSTLDATE_END,'1900-01-01')
             THEN J_LT.CANCELDATE
           WHEN J_LT.TIER_INSTLDATE_END <= COALESCE(J_LT.CANCELDATE,'1900-01-01')
            AND J_LT.TIER_INSTLDATE_END <= COALESCE(J_LT.ENDDATE,'1900-01-01')
             THEN J_LT.TIER_INSTLDATE_END
         END AS A02_END_ARR_DT
        ,J_LT.INSTLDATE AS A02_START_ARR_DT
        ,CASE
           WHEN J_LT.ARNGSTATUS = 'D'
            AND J_LT.TIER_INSTLDATE_END > J_LT.ENDDATE 
              THEN J_LT.ENDDATE
         END AS A02_BROKEN_DT
         --,CASE SOURCE
         --   WHEN 'RED' THEN TGT_ARRNG
         --   WHEN 'BLUE' THEN TGT_ARRNG
         -- END AS ADM20_A02_ARRNG_REAS
        ,CASE J_LT.PAYMENTMETHOD
           WHEN 'DD' THEN 'Y'
           ELSE 'N'
         END AS ADM20_A02_COLL_BY_DD 
    FROM JOIN_LUTS AS J_LT
),
MAP_DEFAULTS AS (
  SELECT MAP_FROMSRC.*
        ,'A02' AS A02_CODE
        ,NULL AS ADM20_A02_DETAIL2_77
        ,2 AS ADM20_A02_TYPE_ARR
        ,NULL AS ADM20_A02_DD_AMT
        ,NULL AS ADM20_A02_DD_TYP
        ,NULL AS ADM20_A02_DSS_ELG_YN
        ,NULL AS ADM20_A02_RA_INTONLY
        ,NULL AS ADM20_A02_APPORT_TYP
        ,NULL AS ADM20_A02_OVER_UNDER 
    FROM MAP_FROMSRC 
),
MAP_SIGN AS (
  SELECT *
        ,CASE
           WHEN ADM20_A02_AMT_ARR > 0 THEN '+'
           WHEN ADM20_A02_AMT_ARR < 0 THEN '-'
           ELSE ' '
         END AS A02_SIGN
    FROM MAP_DEFAULTS
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,A02_CODE
        ,A02_SUB_ACC
        ,ADM20_A02_DETAILS_77
        ,ADM20_A02_DETAIL2_77
        ,A02_AMEND_DT
        ,A02_SIGN
        ,ADM20_A02_AMT_ARR
        ,A02_END_ARR_DT
        ,A02_START_ARR_DT
        ,ADM20_A02_TYPE_ARR
        ,A02_BROKEN_DT
        ,NULL AS ADM20_A02_ARRNG_REAS
        ,ADM20_A02_DD_AMT
        ,ADM20_A02_DD_TYP
        ,ADM20_A02_DSS_ELG_YN
        ,ADM20_A02_RA_INTONLY
        ,ADM20_A02_COLL_BY_DD
        ,ADM20_A02_APPORT_TYP
        ,ADM20_A02_OVER_UNDER
    FROM MAP_SIGN
)
SELECT *
  FROM OUT_FIELDS
GO
/*
 * Author: Aishwarya Rao
 * Creation Date: 14/09/2015
 * Description: This SQL code applies business transformation for X02_A10 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------------------------------------------------
    1.0         14/09/2015      Aishwarya Rao           Based on Mapping Spec Version v1.0
    2.0         24/11/2015      Aishwarya Rao           Based on Mapping Spec Version v1.3
    3.0         29/09/2015      Aishwarya Rao           Changes made as per review comments(removed tabs and unnecessary refernces of TB_UDMH_CTL
    4.0         09/12/2015      Aishwarya Rao           Changes as per Bug 79168
    5.0         10/12/2015      Aishwarya Rao           Added CONSTANTS CTE
 *-----------------------------------------------------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.VW_X02_A10') AND type in (N'V'))
DROP VIEW dbo.VW_X02_A10
GO 
 
CREATE VIEW dbo.VW_X02_A10
AS 
WITH
CONSTANTS AS (
  SELECT 0 AS ZERO
        ,'01' AS ONE
        ,999912 AS I999912
),
FILTER_CBM_POOL_CONTROL AS (
  SELECT POOL_ACCOUNT_NO
        ,POOL_YEAR_MONTH
        ,POOL_BOND_ID
        ,POOL_ACCOUNT_SOURCE
    FROM TB_SRC_CBM_POOL_CONTROL
   CROSS JOIN TB_UDMH_CTL 
   WHERE POOL_ACCOUNT_SOURCE = ( CASE 
                                   WHEN SOURCE = 'RED' THEN 1 
                                   WHEN SOURCE = 'BLUE' THEN 2
                                 END 
                               )                                 
     AND POOL_STATUS_YEAR_MONTH = POOL_YEAR_MONTH
     AND POOL_BOND_ID IS NOT NULL
),
FILTER_SCR81_A10_CURRENTBAL AS (
  SELECT ACCH_ACCOUNT_NO
        ,YYYYMM
        ,SUM(COALESCE(ACC_BALANCE_OS_SA,CONST.ZERO)) AS SUM_ACC_BALANCE_OS_SA_CURRENTBAL
    FROM TB_SRC_CBM_COVERED_BOND_FACT 
   CROSS JOIN CONSTANTS AS CONST
   GROUP BY 
         ACCH_ACCOUNT_NO
        ,YYYYMM
),
FILTER_SCR81_A10_PRINP_BAL AS (
  SELECT ACCH_ACCOUNT_NO
        ,YYYYMM
        ,SUM(COALESCE(ACC_CAPITAL_BALANCE,CONST.ZERO)) AS SUM_ACC_CAPITAL_BALANCE
    FROM TB_SRC_CBM_COVERED_BOND_FACT 
   CROSS JOIN CONSTANTS AS CONST
   GROUP BY 
         ACCH_ACCOUNT_NO
        ,YYYYMM
),
FILTER_A10_SECDTE_OUT AS (
  SELECT TOP 1
         SWITCHOUT.POOL_ACCOUNT_NO
        ,SWITCHOUT.POOL_ACCOUNT_SOURCE
        ,SWITCHOUT.POOL_YEAR_MONTH
    FROM TB_SRC_CBM_POOL_CONTROL AS CBM_POOL_CONTROL
   INNER JOIN TB_SRC_CBM_POOL_CONTROL AS SWITCHOUT
      ON CBM_POOL_CONTROL.POOL_ACCOUNT_SOURCE = SWITCHOUT.POOL_ACCOUNT_SOURCE
     AND CBM_POOL_CONTROL.POOL_ACCOUNT_NO = SWITCHOUT.POOL_ACCOUNT_NO
     AND CBM_POOL_CONTROL.POOL_STATUS_YEAR_MONTH = SWITCHOUT.POOL_YEAR_MONTH 
     AND (CBM_POOL_CONTROL.POOL_BOND_ID <> SWITCHOUT.POOL_BOND_ID OR SWITCHOUT.POOL_BOND_ID IS NULL)
     AND CBM_POOL_CONTROL.POOL_YEAR_MONTH < SWITCHOUT.POOL_YEAR_MONTH
   ORDER BY CBM_POOL_CONTROL.POOL_YEAR_MONTH
),
FILTER_SCR81_A10_SWTOUT_BAL AS (
  SELECT ACCH_ACCOUNT_NO  
        ,YYYYMM
        ,SUM(COALESCE(ACC_BALANCE_OS_SA,CONST.ZERO)) AS SUM_ACC_BALANCE_OS_SA_SWTOUT_BAL
    FROM TB_SRC_CBM_COVERED_BOND_FACT
   CROSS JOIN CONSTANTS AS CONST
   GROUP BY 
         ACCH_ACCOUNT_NO
        ,YYYYMM
),
JOIN_WRITECRITERIA AS (
  SELECT DISTINCT 
         ACACNTNO AS AC01_MAIN_ACACNTNO
        ,POOL_YEAR_MONTH
        ,POOL_BOND_ID
        ,POOL_ACCOUNT_SOURCE
    FROM TB_SRC_AC01_MAIN
   INNER JOIN FILTER_CBM_POOL_CONTROL
      ON ACACNTNO = POOL_ACCOUNT_NO
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,SOURCE
        ,FLT_SCR81_A10_CURRENTBAL.SUM_ACC_BALANCE_OS_SA_CURRENTBAL
        ,FLT_SCR81_A10_PRINP_BAL.SUM_ACC_CAPITAL_BALANCE
        ,FLT_A10_SECDTE_OUT.POOL_YEAR_MONTH AS SWITCHOUT_POOL_YEAR_MONTH
        ,FLT_SCR81_A10_SWTOUT_BAL.SUM_ACC_BALANCE_OS_SA_SWTOUT_BAL
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT OUTER JOIN FILTER_SCR81_A10_CURRENTBAL AS FLT_SCR81_A10_CURRENTBAL
      ON FLT_SCR81_A10_CURRENTBAL.ACCH_ACCOUNT_NO = J_WC.AC01_MAIN_ACACNTNO
     AND FLT_SCR81_A10_CURRENTBAL.YYYYMM = J_WC.POOL_YEAR_MONTH
    LEFT OUTER JOIN FILTER_SCR81_A10_PRINP_BAL AS FLT_SCR81_A10_PRINP_BAL
      ON FLT_SCR81_A10_PRINP_BAL.ACCH_ACCOUNT_NO = J_WC.AC01_MAIN_ACACNTNO
     AND FLT_SCR81_A10_PRINP_BAL.YYYYMM = J_WC.POOL_YEAR_MONTH
    LEFT OUTER JOIN FILTER_A10_SECDTE_OUT AS FLT_A10_SECDTE_OUT
      ON FLT_A10_SECDTE_OUT.POOL_ACCOUNT_NO =  J_WC.AC01_MAIN_ACACNTNO
     AND FLT_A10_SECDTE_OUT.POOL_ACCOUNT_SOURCE = J_WC.POOL_ACCOUNT_SOURCE
    LEFT OUTER JOIN FILTER_SCR81_A10_SWTOUT_BAL AS FLT_SCR81_A10_SWTOUT_BAL
      ON FLT_SCR81_A10_SWTOUT_BAL.YYYYMM = FLT_A10_SECDTE_OUT.POOL_YEAR_MONTH
     AND FLT_SCR81_A10_SWTOUT_BAL.ACCH_ACCOUNT_NO = J_WC.AC01_MAIN_ACACNTNO
   CROSS JOIN TB_UDMH_CTL 
),
JOIN_LUTS AS (
  SELECT J_EXTRA.*
        ,FLT_SCR81_A10_BOKIDN.TGT_FUNDER
        ,FLT_SCR81_A10_BOKIDN.TGT_BOOK
        ,FLT_SCR81_A10_ORIG_BOOK.TGT_ORIG_FUNDERBOOK
    FROM JOIN_EXTRA AS J_EXTRA
    LEFT OUTER JOIN TB_XFM_LUT_BOOK_FUNDER AS FLT_SCR81_A10_BOKIDN
      ON FLT_SCR81_A10_BOKIDN.SRC_BONDID = J_EXTRA.POOL_BOND_ID
     AND FLT_SCR81_A10_BOKIDN.XFM_SOURCE = J_EXTRA.SOURCE
    LEFT OUTER JOIN TB_XFM_LUT_BOOK_FUNDER AS FLT_SCR81_A10_ORIG_BOOK
      ON FLT_SCR81_A10_ORIG_BOOK.SRC_BONDID = J_EXTRA.POOL_BOND_ID
     AND FLT_SCR81_A10_ORIG_BOOK.XFM_SOURCE = J_EXTRA.SOURCE
),  
MAP_FROMSRC AS (
  SELECT J_LUTS.*
        ,J_LUTS.AC01_MAIN_ACACNTNO AS X02KEY
        ,J_LUTS.TGT_FUNDER + J_LUTS.TGT_BOOK AS SCR81_A10_BOKIDN
        ,J_LUTS.SUM_ACC_BALANCE_OS_SA_CURRENTBAL AS SCR81_A10_CURRENTBAL
        ,J_LUTS.TGT_ORIG_FUNDERBOOK AS SCR81_A10_ORIG_BOOK
        ,J_LUTS.SUM_ACC_CAPITAL_BALANCE AS SCR81_A10_PRINP_BAL
        ,CAST(CONCAT(CAST(J_LUTS.POOL_YEAR_MONTH AS VARCHAR(6)),CONST.ONE) AS DATETIME) AS A10_SEC_DTE
        ,CAST(CONCAT(CAST(COALESCE(J_LUTS.SWITCHOUT_POOL_YEAR_MONTH,CONST.I999912) AS VARCHAR(6)),CONST.ONE) AS DATETIME) AS A10_SECDTE_OUT
        ,J_LUTS.SUM_ACC_BALANCE_OS_SA_SWTOUT_BAL AS SCR81_A10_SWTOUT_BAL
    FROM JOIN_LUTS AS J_LUTS
   CROSS JOIN CONSTANTS AS CONST
),
MAP_DEFAULTS AS (
  SELECT MAP_SRC.*
        ,'A10' AS A10_CODE
        ,0 AS SCR81_A10_INT_ADJUST
        ,NULL AS SCR81_A10_SEC_INS_D
        ,NULL AS SCR81_A10_SEC_INS_ND
    FROM MAP_FROMSRC AS MAP_SRC
),
MAP_SIGN AS (
  SELECT MAP_DEF.*
        ,CASE
           WHEN SCR81_A10_CURRENTBAL > 0 THEN '+'
           WHEN SCR81_A10_CURRENTBAL < 0 THEN '-'
           ELSE ' '
         END AS A10_CURRENTBAL_SIGN
        ,CASE 
           WHEN SCR81_A10_INT_ADJUST > 0 THEN '+'
           WHEN SCR81_A10_INT_ADJUST < 0 THEN '-'
           ELSE ' '
         END AS A10_INT_ADJUST_SIGN
        ,CASE  
           WHEN SCR81_A10_PRINP_BAL > 0 THEN '+'
           WHEN SCR81_A10_PRINP_BAL < 0 THEN '-'
           ELSE ' '
         END AS A10_PRINP_BAL_SIGN
        ,CASE 
           WHEN SCR81_A10_SEC_INS_D > 0 THEN '+'
           WHEN SCR81_A10_SEC_INS_D < 0 THEN '-'
           ELSE ' '
         END AS A10_SEC_INS_D_SIGN
        ,CASE 
           WHEN SCR81_A10_SEC_INS_ND > 0 THEN '+'
           WHEN SCR81_A10_SEC_INS_ND < 0 THEN '-'
           ELSE ' '
         END AS A10_SEC_INS_ND_SIGN
        ,CASE 
           WHEN SCR81_A10_SWTOUT_BAL > 0 THEN '+'
           WHEN SCR81_A10_SWTOUT_BAL < 0 THEN '-'
           ELSE ' '
         END AS A10_SWTOUT_BAL_SIGN
    FROM MAP_DEFAULTS AS MAP_DEF
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,A10_CODE
        ,SCR81_A10_BOKIDN
        ,A10_CURRENTBAL_SIGN
        ,SCR81_A10_CURRENTBAL
        ,A10_INT_ADJUST_SIGN
        ,SCR81_A10_INT_ADJUST
        ,SCR81_A10_ORIG_BOOK
        ,A10_PRINP_BAL_SIGN
        ,SCR81_A10_PRINP_BAL
        ,A10_SEC_DTE
        ,A10_SEC_INS_D_SIGN
        ,SCR81_A10_SEC_INS_D
        ,A10_SEC_INS_ND_SIGN
        ,SCR81_A10_SEC_INS_ND
        ,A10_SECDTE_OUT
        ,A10_SWTOUT_BAL_SIGN
        ,SCR81_A10_SWTOUT_BAL
    FROM MAP_SIGN
)
SELECT *
  FROM OUT_FIELDS 

GO
/*
 * Author: Akila kesavan
 * Creation Date: 23/06/2015 
 * Description: This SQL code applies business transformation for X02_C01 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version        Date           Developer                     Description
 *-----------------------------------------------------------------------------------------------------
    1.0        23/06/2015    AKILA KESAVAN           Based on Mapping Spec version v0.4_19062015
    2.0        07/07/2015    AKILA KESAVAN           Updated Base Query based on Review Comments
    3.0        13/07/2015    AKILA KESAVAN           Updated Base Query based on Review Comments
    4.0        18/08/2015    AKILA KESAVAN           Based on Mapping Spec version v0.9
    5.0        02/09/2015    KAVANA GC               Raised exception for the lenght overrun
    6.0        09/09/2015    AKILA KESAVAN           Updated Base Query based on Bugs Raised.
    7.0        11/09/2015    AKILA KESAVAN           Updatd Base Query based on Mapping Spec version V1.0
    8.0        11/09/2015    AKILA KESAVAN           Updatd Base Query based on Mapping Spec version V1.1
    9.0        11/14/2015    Pothirajan              Based on the clarifications and dupes issues on spec 1.3
 *-----------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_C01]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_C01]
GO

CREATE VIEW [dbo].[VW_X02_C01]
AS
WITH

FILTER_CUS AS (
  SELECT ROW_NUMBER() OVER (
           PARTITION BY
            CA.C4551
           ORDER BY
            CA.C4122 DESC     
           ) AS RN
        ,CA.C41513
        ,CA.C41512
        ,CA.C4551
    FROM dbo.TB_SRC_CUSADD AS CA
),
FILTER_CUS_UNIQUE AS (
  SELECT CUS.*
    FROM FILTER_CUS AS CUS
   WHERE CUS.RN = 1
),
FILTER_CURRENT_EXECUTOR_HOLDCODES AS (
  SELECT HLDLNKS.HLDLACNTNO
        ,COUNT(1) AS CNT_HLDLNKS
        ,MAX (HLDLNKS.HLDLTODATE) AS MAX_HLDLTODATE
        ,HLDLFROMDATE
    FROM VW_FILTER_HLDLNKS AS HLDLNKS
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE HLDLNKS.HLDLCODE = 'EXEC'
     AND ( HLDLNKS.HLDLTODATE IS NULL
      OR HLDLNKS.HLDLTODATE > CTRL.WS_MIGR_DATE )
GROUP BY HLDLNKS.HLDLACNTNO
        ,HLDLFROMDATE
),
FILTER_CURRENT_UNKADD_HOLDCODES AS (
  SELECT HLDLNKS.HLDLACNTNO
        ,COUNT(1) AS CURRENT_UNKADD_HOLDCODES_CNT
    FROM VW_FILTER_HLDLNKS AS HLDLNKS
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE HLDLNKS.HLDLCODE = 'SUS'
     AND ( HLDLNKS.HLDLTODATE IS NULL
      OR HLDLNKS.HLDLTODATE > CTRL.WS_MIGR_DATE )
GROUP BY HLDLNKS.HLDLACNTNO
),
FILTER_CURRENT_FRAUD_HOLDCODES AS (
  SELECT HLDLNKS.HLDLACNTNO
        ,COUNT(1) AS CURRENT_FRAUD_HOLDCODES_CNT
        ,MAX(HLDLTODATE) AS CURRENT_FRAUD_HOLDCODES_MAXHLDLTODATE
    FROM VW_FILTER_HLDLNKS AS HLDLNKS
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE HLDLNKS.HLDLCODE = 'C065'
     AND ( HLDLNKS.HLDLTODATE IS NULL
      OR HLDLNKS.HLDLTODATE > CTRL.WS_MIGR_DATE )
GROUP BY HLDLNKS.HLDLACNTNO

),
FILTER_HLDLNKS_BRAILL AS (
  SELECT COUNT(1) AS CNT_HLDLINKS_BRAILL
        ,HLDLNKS_BRAILL.HLDLACNTNO
    FROM VW_FILTER_HLDLNKS AS HLDLNKS_BRAILL
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE HLDLNKS_BRAILL.HLDLFROMDATE <= CTRL.WS_MIGR_DATE
     AND ( HLDLNKS_BRAILL.HLDLTODATE IS NULL
          OR HLDLNKS_BRAILL.HLDLTODATE >= CTRL.WS_MIGR_DATE )
     AND HLDLNKS_BRAILL.HLDLCODE IN ('BRAILL')
   GROUP BY HLDLNKS_BRAILL.HLDLACNTNO
            
),
FILTER_HLDLNKS_LPRINT AS (
  SELECT COUNT(1) AS CNT_HLDLINKS_LPRINT
        ,HLDLNKS_LPRINT.HLDLACNTNO
    FROM VW_FILTER_HLDLNKS AS HLDLNKS_LPRINT
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE HLDLNKS_LPRINT.HLDLFROMDATE <= CTRL.WS_MIGR_DATE
     AND ( HLDLNKS_LPRINT.HLDLTODATE IS NULL
          OR HLDLNKS_LPRINT.HLDLTODATE >= CTRL.WS_MIGR_DATE )
     AND HLDLNKS_LPRINT.HLDLCODE IN ('LPRINT')
   GROUP BY HLDLNKS_LPRINT.HLDLACNTNO
            
),
FILTER_APPCUST_ALL AS (
  SELECT M6321
        ,C4554
        ,E23153
        ,I120103
        ,ROW_NUMBER() OVER (
           PARTITION BY
             M6321
            ,C4554
           ORDER BY 
             F2253
             ) AS RN
    FROM TB_SRC_APPCUST AS APPCUST
),
FILTER_APPCUST_LATEST AS (
  SELECT *
    FROM FILTER_APPCUST_ALL
   WHERE RN = 1
),
FILTER_CWMARKETINGRESTRICTIONS AS (
  SELECT COUNT(1) AS CWMR_CNT
        ,CWMR.CUSTOMERNO
    FROM TB_SRC_CWMARKETINGRESTRICTIONS AS CWMR
   WHERE CWMR.TYPE = 2976003
    GROUP BY CUSTOMERNO
),
FILTER_CWPHONECONTACT AS (
  SELECT COUNT(1) AS CWPHONECONTACT_CNT
        ,CWPHONECONTACT.CUSTOMERNO 
    FROM TB_SRC_CWPHONECONTACT AS CWPHONECONTACT
   WHERE CWPHONECONTACT.USAGE IN (1) --TODO: Usage IN clause is yet to be decided
   GROUP BY CWPHONECONTACT.CUSTOMERNO
),
FILTER_CWPHONECONTACT_EMAILMARKETING AS (
  SELECT COUNT(1) AS CWPHONECONTACT_EMAILMARKETING_CNT
        ,CWPHONECONTACT_EMAILMARKETING.CUSTOMERNO
    FROM TB_SRC_CWPHONECONTACT AS CWPHONECONTACT_EMAILMARKETING
   WHERE CWPHONECONTACT_EMAILMARKETING.USAGE = 2976016
   GROUP BY CWPHONECONTACT_EMAILMARKETING.CUSTOMERNO
),
FILTER_CWPHONECONTACT_TELPHONE_MARKETING AS (
  SELECT COUNT(1) AS CWPHONECONTACT_TELPHONE_MARKETING_CNT
        ,CWPHONECONTACT_TELPHONE_MARKETING.CUSTOMERNO
    FROM TB_SRC_CWPHONECONTACT AS CWPHONECONTACT_TELPHONE_MARKETING
   WHERE CWPHONECONTACT_TELPHONE_MARKETING.USAGE = 2976001
   GROUP BY CWPHONECONTACT_TELPHONE_MARKETING.CUSTOMERNO
),
FILTER_CUSEXP AS (
  SELECT COUNT(1) AS CUSEXP_CNT
        ,CUSEXP.C4551
    FROM TB_SRC_CUSEXP AS CUSEXP
   WHERE CUSEXP.C4213 = 'X'
   GROUP BY C4551
),
FILTER_CUSINC1 AS (
  SELECT TOP 1 CUSINC.C4525 
    FROM TB_SRC_CUSINC AS CUSINC 
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE CTRL.SOURCE = 'RED' 
     AND  CUSINC.C4524 = 'BA'
),
FILTER_CUSINC2 AS (
  SELECT TOP 1 CUSINC.C4525 
    FROM TB_SRC_CUSINC AS CUSINC 
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE CTRL.SOURCE = 'BLUE' 
     AND  CUSINC.C4524 = 'GI'
),
FILTER_CUSINC3 AS (
  SELECT TOP 1 CUSINC.C4525 
    FROM TB_SRC_CUSINC AS CUSINC 
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE CTRL.SOURCE = 'BLUE' 
     AND  CUSINC.C4524 = 'BA'
),
FILTER_REGBON_SUM AS (
  SELECT C4551
        ,SUM(CASE CUSINC.C4526
               WHEN 'A' THEN CUSINC.C4525 * 1.0 / 12.0
               WHEN 'W' THEN CUSINC.C4525 * 52.0 / 12.0
               ELSE CUSINC.C4525
             END
            ) AS SUM_REGBON
    FROM TB_SRC_CUSINC AS CUSINC
   WHERE CUSINC.C4524 = 'BR'
   GROUP BY CUSINC.C4551 
),
FILTER_CUSINC_OTHER_SUM AS (
  SELECT C4551
        ,SUM(CASE CUSINC.C4526
               WHEN 'A' THEN CUSINC.C4525 * 1.0 / 12.0
               WHEN 'W' THEN CUSINC.C4525 * 52.0 / 12.0
               ELSE CUSINC.C4525
             END
            ) AS SUM_OTHERINCOME
    FROM TB_SRC_CUSINC AS CUSINC
   WHERE CUSINC.C4152 = 'OTHER'
   GROUP BY CUSINC.C4551 
),
FILTER_CUSEMP_INCOME_SUM AS (
  SELECT CUSEMP.C4551
        ,SUM(CASE CUSINC.C4526
               WHEN 'A' THEN CUSINC.C4525 * 1.0 / 12.0
               WHEN 'W' THEN CUSINC.C4525 * 52.0 / 12.0
               ELSE CUSINC.C4525
             END
            ) AS SUM_CUSEMP_INCOME
    FROM TB_SRC_CUSEMP AS CUSEMP
   INNER JOIN TB_SRC_CUSINC AS CUSINC
      ON CUSEMP.C41528 = CUSINC.C4152
     AND CUSEMP.C4551 = CUSINC.C4551
   WHERE CUSEMP.C4312 = 'C'
   GROUP BY CUSEMP.C4551 
),
FILTER_OVERTIME_SUM AS (
  SELECT C4551
        ,SUM(CASE CUSINC.C4526
               WHEN 'A' THEN CUSINC.C4525 * 1.0 / 12.0
               WHEN 'W' THEN CUSINC.C4525 * 52.0 / 12.0
               ELSE CUSINC.C4525
             END
            ) AS SUM_MONTHLY_OVERTIME
    FROM TB_SRC_CUSINC AS CUSINC
   WHERE CUSINC.C4524 IN ('OTG','OTR')
   GROUP BY CUSINC.C4551 
),

JOIN_WRITECRITERIA AS (
  SELECT AC01_MAIN.ACACNTNO AS AC01_MAIN_ACACNTNO
        ,AC01_MAIN.ACINCEPDATE AS AC01MAIN_ACINCEPDATE
        ,AC01_MAIN.ADDRESS1 AS AC01_ADDRESS1
        ,AC01_MAIN.ADDRESS2 AS AC01_ADDRESS2
        ,AC01_MAIN.ADDRESS3 AS AC01_ADDRESS3
        ,AC01_MAIN.ADDRESS4 AS AC01_ADDRESS4
        ,AC01_MAIN.ADDRESS5 AS AC01_ADDRESS5
        ,AC01_MAIN.ADDRESSNO 
        ,AC01_MAIN.POSTCODE AS AC01_POSTCODE
        
        ,FLLR.ACACNTNO AS FILRS_ACACNTNO
        ,FLLR.ACPROCESSTATUS AS ACPROCESSTATUS
        ,FLLR.ACCLRDATE AS ACCLRDATE
        ,FLLR.POSTCODE AS FLLR_POSTCODE
        ,FLLR.ADDRESS1 AS FLLR_ADDRESS1
        ,ACNTLNKS.ACLACNTNO AS ACLACNTNO
        ,ACNTLNKS.ACLSUBACNO AS ACLSUBACNO
        ,ACNTLNKS.ACLCLSEQNO  AS ACLCLSEQNO
        ,ACNTLNKS.ACLHLDERPOS
        ,ACNTLNKS.ACLLASTCHNGDATE AS ACLLASTCHNGDATE
        ,ACNTLNKS.ACLCLUSAGE
        ,CLUS.CUCDCLUSAGE AS CUCDCLUSAGE
        ,CLUS.CUCDAPAVAILIND AS CUCDAPAVAILIND
        ,CLUS.CUCDACNTHLDERIND
        ,CLUS.CUCDEXECUTOR AS CUCDEXECUTOR
        ,CLUS.CUCDGUARANTOR
        ,CLIENT.CLPNICODE
        ,CLIENT.CLSEQNO
        ,CLIENT.CLINITIALS 
        ,CLIENT.CLPSEX 
        ,CLIENT.CLFAMNAME
        ,CLIENT.CLUKTAXPAYER
        ,CLIENT.CLPRIVATETELEPHONE 
        ,CLIENT.CLMOBILETELEPHONE
        ,CLIENT.CLFORENAMESFIRST
        ,CLIENT.CLPOTHERINCOMESOURCE
        ,CLIENT.CLPLASTCHNGDATE 
        ,CLIENT.CLPEARNINGSGROS 
        ,CLIENT.CLPDOB
        ,CLIENT.CLCOMENCEDATE 
        ,CLIENT.CLPDATEDECEASED
        ,CLIENT.CLPNODEPENDANTS 
        ,CLIENT.CLEMAILADR
        ,CLIENT.CLFORENAMESOTHERS
        ,CLIENT.CORADDRESSNO AS CLIENT_CORADDRESSNO
        ,CLIENT.LIVADDRESSNO AS LIVADDRESSNO
        ,CLIENT.CLBUSINESTELEPHONE 
        ,CLIENT.CLMAILFLAG 
        ,CLIENT.CORADDRESS1 AS CLIENTCORRADDR1
        ,CLIENT.CORADDRESS2 AS CLIENTCORRADDR2
        ,CLIENT.CORADDRESS3 AS CLIENTCORRADDR3
        ,CLIENT.CORADDRESS4 AS CLIENTCORRADDR4
        ,CLIENT.CORADDRESS5 AS CLIENTCORRADDR5
        ,CLIENT.LIVADDRESS1 AS CLIENT_LIVADDRESS1
        ,CLIENT.LIVADDRESS2 AS CLIENT_LIVADDRESS2
        ,CLIENT.LIVADDRESS3 AS CLIENT_LIVADDRESS3
        ,CLIENT.LIVADDRESS4 AS CLIENT_LIVADDRESS4
        ,CLIENT.LIVADDRESS5 AS CLIENT_LIVADDRESS5
        ,CLIENT.CLPEMPLOYTYPE
        ,CLIENT.CLPEARNPAYMETH 
        ,CLIENT.CORPOSTCODE AS CLIENT_CORPOSTCODE
        ,CLIENT.LIVPOSTCODE AS CLIENT_LIVPOSTCODE
        ,CLIENT.CLPMARITALSTATUS
        ,CLIENT.CLTITLE AS CLIENT_TITLE
        ,CLIENT.CLPNATIONALITY
        ,CLIENT.CLRESIDENCYCODE
        ,CLIENT.CLPOCUPATIONCODE
        ,CLIENT.CLPOCUPATION 
        ,CLIENT.CLALTCLNO
        ,CLIENT.CLPREFEREDCONTACT
        ,CLIENT.CORADDRESS1
        ,CLIENTWISECUSTOMER.FIRSTNAME
        ,CLIENTWISECUSTOMER.INITIALS 
       ,CLIENTWISECUSTOMER.CUSTOMERNO AS CWCUSTOMERNO
        ,CLIENTWISECUSTOMER.NATINSNO
        ,CLIENTWISECUSTOMER.SEX
        ,CLIENTWISECUSTOMER.LASTNAME 
        ,CLIENTWISECUSTOMER.LASTUPDATEDATE 
        ,CLIENTWISECUSTOMER.DATEOFBIRTH
        ,CLIENTWISECUSTOMER.MARITALSTATUS 
        ,CLIENTWISECUSTOMER.TITLE AS CWCUSTOMER_TITLE
        ,CLIENTWISECUSTOMER.NATIONALITY
        ,CLIENTWISECUSTOMER.LETTERS 
        ,CLIENTWISECUSTOMER.DATEOFDEATH
        ,APPCUST.E23153
        ,APPCUST.C4554 
        ,APPCUST.I120103
        ,APP_LASTMADE.A66291
        ,APP_LASTMADE.B52664
        ,APP_LASTMADE.A1339
        ,APP_LASTMADE.C45427
        ,CTRL.SOURCE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
    JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS FLLR
      ON AC01_MAIN.ACACNTNO = FLLR.ACACNTNO
    JOIN TB_SRC_ACNTLNKS AS ACNTLNKS
      ON FLLR.ACACNTNO = ACNTLNKS.ACLACNTNO
     AND FLLR.ACSUBACNO = ACNTLNKS.ACLSUBACNO
    JOIN TB_SRC_CLUSAGECODES AS CLUS
      ON ACNTLNKS.ACLCLUSAGE = CLUS.CUCDCLUSAGE
    JOIN TB_SRC_CLIENTS AS CLIENT
      ON ACNTLNKS.ACLCLSEQNO = CLIENT.CLSEQNO
    LEFT OUTER JOIN TB_SRC_CWCUSTOMER AS CLIENTWISECUSTOMER
      ON CLIENT.CLALTCLNO = CLIENTWISECUSTOMER.CUSTOMERNO
    LEFT OUTER JOIN FILTER_APPCUST_LATEST AS APPCUST
      ON ACNTLNKS.ACLCLSEQNO = APPCUST.C4554 
     AND ACNTLNKS.ACLACNTNO =  APPCUST.M6321
    LEFT OUTER JOIN VW_FILTER_APP_LASTMADE AS APP_LASTMADE
      ON APPCUST.M6321 = APP_LASTMADE.M63214
     AND ACNTLNKS.ACLCLSEQNO = APP_LASTMADE.C4554
    CROSS JOIN TB_UDMH_CTL AS CTRL
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,CORRADDRESS.CUSTOMERNO AS CORRADDRESS_CUSTOMERNO
        ,CORRADDRESS.COUNTRY AS CORRADDRESS_COUNTRY
        ,dbo.FN_REGEXISMATCH('^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([AZa-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([AZa-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9]?[A-Za-z]))))[0-9][A-Za-z]{2})$',CORRADDRESS.POSTCODE) AS REGEX_COL
        ,VWPOSTALCORR_ADDP_OP.COUNTY AS CORRADDRESS_COUNTY
        ,CLIENT_ADDP_OP.COUNTY AS CLIENTADDR_COUNTY
        ,AC01_ADDP_OP.COUNTY AS AC01ADDR_COUNTY
        ,VWPOSTALLIVING_ADDP_OP.COUNTY AS POSTALADDR_COUNTY
        ,CLIENT_LIVEADDR_OP.COUNTY AS CLIENT_LIVEADDR_COUNTY
        ,VWPOSTALCORR_ADDP_OP.DISTRICT AS CORRADDRESS_DIST
        ,CLIENT_ADDP_OP.DISTRICT AS CLIENTADDR_DIST
        ,AC01_ADDP_OP.DISTRICT AS AC01ADDR_DIST
        ,VWPOSTALLIVING_ADDP_OP.DISTRICT AS POSTALADDR_DIST
        ,CLIENT_LIVEADDR_OP.DISTRICT AS CLIENT_LIVEADDR_DIST
        ,VWPOSTALCORR_ADDP_OP.TOWN AS CORRADDRESS_TOWN
        ,CLIENT_ADDP_OP.TOWN AS CLIENTADDR_TOWN
        ,AC01_ADDP_OP.TOWN AS AC01ADDR_TOWN
        ,VWPOSTALLIVING_ADDP_OP.TOWN AS POSTALADDR_TOWN
        ,CLIENT_LIVEADDR_OP.TOWN AS CLIENT_LIVEADDR_TOWN
        ,VWPOSTALCORR_ADDP_OP.STREET AS CORRADDRESS_STREET
        ,CLIENT_ADDP_OP.STREET AS CLIENTADDR_STREET
        ,AC01_ADDP_OP.STREET AS AC01ADDR_STREET
        ,VWPOSTALLIVING_ADDP_OP.STREET AS POSTALADDR_STREET
        ,CLIENT_LIVEADDR_OP.STREET AS CLIENT_LIVEADDR_STREET
        ,VWPOSTALCORR_ADDP_OP.PREMISE_NAME AS CORRADDRESS_BUILDNAME
        ,CLIENT_ADDP_OP.PREMISE_NAME AS CLIENTADDR_BUILDNAME
        ,AC01_ADDP_OP.PREMISE_NAME AS AC01ADDR_BUILDNAME
        ,VWPOSTALLIVING_ADDP_OP.PREMISE_NAME AS POSTALADDR_BUILDNAME
        ,CLIENT_LIVEADDR_OP.PREMISE_NAME AS CLIENT_LIVEADDR_BUILDNAME
        ,VWPOSTALCORR_ADDP_OP.PREMISE_NO AS CORRADDRESS_BUILDNUM
        ,CLIENT_ADDP_OP.PREMISE_NO AS CLIENTADDR_BUILDNUM
        ,AC01_ADDP_OP.PREMISE_NO AS AC01ADDR_BUILDNUM
        ,VWPOSTALLIVING_ADDP_OP.PREMISE_NO AS POSTALADDR_BUILDNUM
        ,CLIENT_LIVEADDR_OP.PREMISE_NO AS CLIENT_LIVEADDR_BUILDNUM
        ,CURRENT_EXECUTOR_HOLDCODES.CNT_HLDLNKS
        ,CURRENT_EXECUTOR_HOLDCODES.HLDLFROMDATE
        ,CURRENT_EXECUTOR_HOLDCODES.MAX_HLDLTODATE
        ,CURRENT_UNKADD_HOLDCODES.CURRENT_UNKADD_HOLDCODES_CNT
        ,CURRENT_FRAUD_HOLDCODES.CURRENT_FRAUD_HOLDCODES_CNT
        ,ADRESES.ADRFOREIGNADRIND
        ,ADRESES_AC01.ADRFOREIGNADRIND AS ADRESES_AC01_ADRFOREIGNADRIND
        ,ADRESES.ADRCOUNTRYCODE
        ,ADRESES.ADRNUMBER
        ,CWPHONECONTACT_FIRSTMOBILE.TELEPHONENO
        ,CWPHONECONTACT.CWPHONECONTACT_CNT 
        ,CORRADDRESS.POSTCODE AS CWPOSTALADDR_POSTCODE
        ,POSTAL_ADDR_LIVING.POSTCODE AS POSTAL_ADDR_LIVING_POSTCODE
        ,CWPOSTALADDRESS.GONEAWAY
        ,CASE WHEN SOURCE = 'RED' THEN (SELECT C4525 FROM  FILTER_CUSINC1) END AS CUSINC1_C4525
        ,CASE WHEN SOURCE = 'BLUE' THEN (SELECT C4525 FROM  FILTER_CUSINC2) END AS CUSINC2_C4525
        ,CASE WHEN SOURCE = 'BLUE' THEN (SELECT C4525 FROM  FILTER_CUSINC3) END AS CUSINC3_C4525
        ,CWPHONECONTACT_LASTUPDATED.FREEFORMATADD
        ,CUSEXP.CUSEXP_CNT
        ,CNT_HLDLINKS_BRAILL
        ,CNT_HLDLINKS_LPRINT
        ,CUSINC_REGBONSUM.SUM_REGBON
        ,CUSINC_OTHERSUM.SUM_OTHERINCOME
        ,CUSEMP_INCOMESUM.SUM_CUSEMP_INCOME
        ,CUSINC_OVERTIMESUM.SUM_MONTHLY_OVERTIME
        ,CASE CUCDACNTHLDERIND 
           WHEN 'Y' THEN 0
           ELSE 4
          END
          + 
          ROW_NUMBER() OVER (
            PARTITION BY 
              FILRS_ACACNTNO
             ,CUCDACNTHLDERIND
            ORDER BY
              CASE 
                WHEN ACLHLDERPOS = 0 THEN 999
                WHEN SOURCE = 'RED' AND DATEOFDEATH IS NOT NULL THEN 999
                WHEN SOURCE = 'BLUE' AND CLPDATEDECEASED IS NOT NULL THEN 999
                ELSE ACLHLDERPOS
              END ASC
             ,CASE SOURCE
                WHEN 'RED' THEN DATEOFDEATH
                WHEN 'BLUE' THEN CLPDATEDECEASED
               END DESC
             ) AS SEQNO
        ,CASE J_WC.SOURCE
           WHEN 'RED'  THEN  CWCUSTOMERNO
           WHEN 'BLUE' THEN  CLSEQNO
         END AS CUSTNO
         -- ,CASE J_WC.CUCDACNTHLDERIND
         --  WHEN 'Y' THEN
         --    CASE 
         --      WHEN J_WC.GH1_CUSNO2 IS NULL THEN 'SOL' 
         --      ELSE 'JNT' 
         --    END
         --  ELSE
         --    CASE
         --      WHEN M_D1.CUCDGUARANTOR = 'Y' THEN 'GUA'
         --      WHEN M_D1.ACLCLUSAGE = 'PA' THEN 'POA'
         --      WHEN M_D1.ACLCLUSAGE = 'EX' THEN 'EXE'
         --      WHEN M_D1.ACLCLUSAGE = 'AD' THEN 'ADM'
         --      ELSE 'OTH'
         --    END
         --END AS CUS02_C03_RELTYP
        ,CUSADD.C41513
        ,CUSADD.C41512  
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT OUTER JOIN VW_FILTER_CWPOSTAL_ADDRESS_CORRESPONDENCE AS CORRADDRESS
      ON J_WC.CWCUSTOMERNO = CORRADDRESS.CUSTOMERNO
    LEFT OUTER JOIN VW_FILTER_CWPOSTAL_ADDRESS_LIVING AS POSTAL_ADDR_LIVING
      ON J_WC.CWCUSTOMERNO = POSTAL_ADDR_LIVING.CUSTOMERNO
    LEFT OUTER JOIN TB_SRC_CWPOSTALADDRESS AS CWPOSTALADDRESS
      ON J_WC.CWCUSTOMERNO = CWPOSTALADDRESS.CUSTOMERNO
    LEFT OUTER JOIN FILTER_CURRENT_EXECUTOR_HOLDCODES AS  CURRENT_EXECUTOR_HOLDCODES
      ON J_WC.AC01_MAIN_ACACNTNO = CURRENT_EXECUTOR_HOLDCODES.HLDLACNTNO
    LEFT OUTER JOIN FILTER_CURRENT_UNKADD_HOLDCODES AS  CURRENT_UNKADD_HOLDCODES
      ON J_WC.AC01_MAIN_ACACNTNO = CURRENT_UNKADD_HOLDCODES.HLDLACNTNO
    LEFT OUTER JOIN FILTER_CURRENT_FRAUD_HOLDCODES AS  CURRENT_FRAUD_HOLDCODES
      ON J_WC.AC01_MAIN_ACACNTNO = CURRENT_FRAUD_HOLDCODES.HLDLACNTNO
    LEFT OUTER JOIN TB_SRC_ADRESES AS ADRESES
      ON J_WC.CLIENT_CORADDRESSNO = ADRESES.ADRADRNO
    LEFT OUTER JOIN TB_SRC_ADRESES AS ADRESES_AC01
      ON J_WC.ADDRESSNO = ADRESES_AC01.ADRADRNO
    LEFT OUTER JOIN VW_FILTER_CWOTHERCONTACT_LASTUPDATED AS CWPHONECONTACT_LASTUPDATED
      ON J_WC.CWCUSTOMERNO = CWPHONECONTACT_LASTUPDATED.CUSTOMERNO
    LEFT OUTER JOIN VW_FILTER_CWPHONECONTACT_FIRSTMOBILE AS CWPHONECONTACT_FIRSTMOBILE
      ON J_WC.CWCUSTOMERNO = CWPHONECONTACT_FIRSTMOBILE.CUSTOMERNO
    LEFT OUTER JOIN FILTER_CWPHONECONTACT AS CWPHONECONTACT
      ON J_WC.CWCUSTOMERNO = CWPHONECONTACT.CUSTOMERNO
    LEFT OUTER JOIN FILTER_CUSEXP AS CUSEXP
      ON J_WC.CLSEQNO = CUSEXP.C4551
    LEFT OUTER JOIN FILTER_HLDLNKS_BRAILL AS HLDLNKS_BRAILL
      ON HLDLNKS_BRAILL.HLDLACNTNO = AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_HLDLNKS_LPRINT AS HLDLNKS_LPRINT
      ON HLDLNKS_LPRINT.HLDLACNTNO = AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_REGBON_SUM AS CUSINC_REGBONSUM
      ON J_WC.CLSEQNO = CUSINC_REGBONSUM.C4551
    LEFT OUTER JOIN FILTER_CUSEMP_INCOME_SUM AS CUSEMP_INCOMESUM
      ON J_WC.CLSEQNO = CUSEMP_INCOMESUM.C4551
    LEFT OUTER JOIN FILTER_CUSINC_OTHER_SUM AS CUSINC_OTHERSUM
      ON J_WC.CLSEQNO = CUSINC_OTHERSUM.C4551
    LEFT OUTER JOIN FILTER_OVERTIME_SUM AS CUSINC_OVERTIMESUM
      ON J_WC.CLSEQNO = CUSINC_OVERTIMESUM.C4551
    LEFT OUTER JOIN FILTER_CUS_UNIQUE AS CUSADD
      ON J_WC.C4554 = CUSADD.C4551  
   CROSS APPLY
         FN_ADDRESS_SPLIT(CORRADDRESS.ADDRESS1,CORRADDRESS.ADDRESS2,CORRADDRESS.ADDRESS3,CORRADDRESS.ADDRESS4,CORRADDRESS.ADDRESS5,CORRADDRESS.ADDRESS6,CORRADDRESS.ADDRESS7,J_WC.AC01_MAIN_ACACNTNO,'C01') AS VWPOSTALCORR_ADDP_OP
   CROSS APPLY
         FN_ADDRESS_SPLIT(J_WC.CLIENTCORRADDR1,J_WC.CLIENTCORRADDR2,J_WC.CLIENTCORRADDR3,J_WC.CLIENTCORRADDR4,J_WC.CLIENTCORRADDR5,NULL,NULL,J_WC.AC01_MAIN_ACACNTNO,'C01') AS CLIENT_ADDP_OP
   CROSS APPLY
         FN_ADDRESS_SPLIT(J_WC.AC01_ADDRESS1,J_WC.AC01_ADDRESS2,J_WC.AC01_ADDRESS3,J_WC.AC01_ADDRESS4,J_WC.AC01_ADDRESS5,NULL,NULL,J_WC.AC01_MAIN_ACACNTNO,'C01') AS AC01_ADDP_OP
   CROSS APPLY
         FN_ADDRESS_SPLIT(POSTAL_ADDR_LIVING.ADDRESS1,POSTAL_ADDR_LIVING.ADDRESS2,POSTAL_ADDR_LIVING.ADDRESS3,POSTAL_ADDR_LIVING.ADDRESS4,POSTAL_ADDR_LIVING.ADDRESS5,POSTAL_ADDR_LIVING.ADDRESS6,POSTAL_ADDR_LIVING.ADDRESS7,J_WC.AC01_MAIN_ACACNTNO,'C01') AS VWPOSTALLIVING_ADDP_OP
   CROSS APPLY
         FN_ADDRESS_SPLIT(J_WC.CLIENT_LIVADDRESS1,J_WC.CLIENT_LIVADDRESS2,J_WC.CLIENT_LIVADDRESS3,J_WC.CLIENT_LIVADDRESS4,J_WC.CLIENT_LIVADDRESS5,NULL,NULL,J_WC.AC01_MAIN_ACACNTNO,'C01') AS CLIENT_LIVEADDR_OP
),
JOIN_LUTS AS (
  SELECT J_E.*
        ,EMPST_LUT.TGT_CUS01_C01_EMPST
        ,FRQ_LUT.TGT_CUS01_C01_FRQPAD
        ,M_STATUS_CWCUSTOMER_LUT.TGT_C01_M_STATUS AS CUSTOMER_MARITALSTATUS
        ,M_STATUS_CLIENT_LUT.TGT_C01_M_STATUS AS CLIENT_MARITALSTATUS
        ,MR_ETC_CWCUSTOMER_LUT.TGT_C01_MR_ETC AS CUSTOMER_MR_ETC
        ,MR_ETC_CLIENT_LUT.TGT_C01_MR_ETC AS CLIENT_MR_ETC
        ,NATIONLTY_LUT_CLIENT.TGT_NATIONLTY AS CLIENT_NATIONLTY
        ,NATIONLTY_LUT_CWCUSTOMER.TGT_NATIONLTY AS CWCUSTOMER_NATIONLTY
        ,NATIONLTY_LUT_CLIENTRES.TGT_NATIONLTY AS CLIENTRES_NATIONALTY
        ,OCCUPATION_LUT.TGT_OCCUPATION
        ,NM_SUFFIX_LUT.TGT_NM_SUFFIX
    FROM JOIN_EXTRA AS J_E
    LEFT OUTER JOIN TB_XFM_LUT_EMPST AS EMPST_LUT 
      ON J_E.CLPEMPLOYTYPE = EMPST_LUT.SRC_CLIENTS_CLPEMPLOYTYPE
    LEFT OUTER JOIN TB_XFM_LUT_FRQPAD AS FRQ_LUT
      ON J_E.CLPEARNPAYMETH = FRQ_LUT.SRC_CLIENTS_CLPEARNPAYMETH
    LEFT OUTER JOIN TB_XFM_LUT_M_STATUS AS M_STATUS_CWCUSTOMER_LUT
      ON J_E.MARITALSTATUS = M_STATUS_CWCUSTOMER_LUT.SRC_CWCUSTOMER_MARITALSTATUS
    LEFT OUTER JOIN TB_XFM_LUT_M_STATUS AS M_STATUS_CLIENT_LUT
      ON J_E.CLPMARITALSTATUS = M_STATUS_CLIENT_LUT.SRC_CLIENTS_CLPMARITALSTATUS
    LEFT OUTER JOIN TB_XFM_LUT_MR_ETC AS MR_ETC_CWCUSTOMER_LUT
      ON J_E.CWCUSTOMER_TITLE = MR_ETC_CWCUSTOMER_LUT.SRC_CWCUSTOMER_TITLE
    LEFT OUTER JOIN TB_XFM_LUT_MR_ETC AS MR_ETC_CLIENT_LUT
      ON J_E.CLIENT_TITLE = MR_ETC_CLIENT_LUT.SRC_CLIENTS_CLTITLE
    LEFT OUTER JOIN TB_XFM_LUT_NATIONLTY AS NATIONLTY_LUT_CLIENT
      ON J_E.CLPNATIONALITY = NATIONLTY_LUT_CLIENT.SRC_CLIENTS_CLPNATIONALITY
    LEFT OUTER JOIN TB_XFM_LUT_NATIONLTY AS NATIONLTY_LUT_CWCUSTOMER
      ON J_E.NATIONALITY = NATIONLTY_LUT_CWCUSTOMER.SRC_CWCUSTOMER_NATIONALITY
    LEFT OUTER JOIN TB_XFM_LUT_NATIONLTY AS NATIONLTY_LUT_CLIENTRES
      ON J_E.CLRESIDENCYCODE = NATIONLTY_LUT_CLIENTRES.SRC_CLIENTS_CLRESIDENCYCODE
    LEFT OUTER JOIN TB_XFM_LUT_OCCUPATION AS OCCUPATION_LUT
      ON COALESCE ( J_E.CLPOCUPATIONCODE , J_E.CLPOCUPATION ) = OCCUPATION_LUT.SRC_CLPOCUPATIONCODE
    LEFT OUTER JOIN TB_XFM_LUT_NM_SUFFIX AS NM_SUFFIX_LUT
      ON J_E.LETTERS = NM_SUFFIX_LUT.SRC_CWCUSTOMER_LETTERS
),
MAP_FROMSRC AS (
  SELECT J_L.*
        ,SEQNO AS C01_SEQNO
        ,CUSTNO AS C01_CUST_NO
        ,CASE WHEN J_L.SEQNO = 2 THEN J_L.CUSTNO END AS GH1_CUSNO2
        ,TGT_CUS01_C01_EMPST AS CUS01_C01_EMPST
        ,CASE J_L.SOURCE
           WHEN 'BLUE' THEN J_L.CLFORENAMESFIRST
           WHEN 'RED' THEN
             CASE
               WHEN CHARINDEX( ' ', J_L.FIRSTNAME ) > 1 THEN LEFT( J_L.FIRSTNAME ,CHARINDEX( ' ',J_L.FIRSTNAME )-1 ) ELSE J_L.FIRSTNAME
             END
         END AS CUS01_C01_FNAME_1
        ,TGT_CUS01_C01_FRQPAD AS CUS01_C01_FRQPAD_1
        ,CLPOTHERINCOMESOURCE AS CUS01_C01_INCSOU
        ,CASE J_L.SOURCE
           WHEN  'BLUE' THEN
             CASE
               WHEN J_L.CLINITIALS IS NULL OR J_L.CLINITIALS = '' THEN LEFT( J_L.CLFORENAMESFIRST, 1 ) ELSE J_L.CLINITIALS
             END
           WHEN  'RED' THEN
             CASE
               WHEN J_L.INITIALS IS NULL OR J_L.INITIALS = '' THEN LEFT( J_L.FIRSTNAME, 1 ) ELSE J_L.INITIALS
             END
         END AS CUS01_C01_INITIALS_1
        ,CASE J_L.SOURCE
           WHEN 'BLUE' THEN J_L.CLMOBILETELEPHONE
           WHEN 'RED' THEN J_L.TELEPHONENO
         END AS CUS01_C01_MOBTELNBR_FULL
        ,NULL AS CUS01_C01_FAXNBR --It is a default field, but used here, because it is going to be used for the field CUS01.C01-TELEPHONE implementation
        ,'I' AS CUS01_C01_CUSTYP --It is a default field, but used here, because it is going to be used for the field CUS01.C01-MR-ETC implementation
        ,CASE J_L.SOURCE
           WHEN 'RED' THEN J_L.CUSTOMER_MARITALSTATUS
           WHEN 'BLUE' THEN J_L.CLIENT_MARITALSTATUS
         END AS CUS01_C01_M_STATUS
        ,CASE J_L.SOURCE
           WHEN 'BLUE' THEN J_L.CLIENT_NATIONLTY
           WHEN 'RED' THEN J_L.CWCUSTOMER_NATIONLTY
         END AS CUS01_C01_NATIONLTY
        ,CASE J_L.SOURCE
           WHEN 'RED' THEN J_L.NATINSNO
           WHEN 'BLUE' THEN J_L.CLPNICODE
         END AS CUS01_C01_NI_NUM
        ,CASE J_L.SOURCE
           WHEN 'RED' THEN
             CASE
               WHEN J_L.CWPHONECONTACT_CNT > 0 THEN 'Y' ELSE 'N'
             END
           WHEN 'BLUE' THEN
             CASE
               WHEN J_L.CLPRIVATETELEPHONE IS NOT NULL THEN 'Y'
               WHEN J_L.CLMOBILETELEPHONE IS NOT NULL THEN 'Y'
               ELSE NULL
             END
         END AS CUS01_C01_RINGIND
        ,CASE J_L.SOURCE
           WHEN 'RED' THEN
             CASE J_L.SEX
               WHEN 32000 THEN NULL
               WHEN 32001 THEN 'M'
               WHEN 32002 THEN 'F'
             END
           WHEN 'BLUE' THEN J_L.CLPSEX
         END AS CUS01_C01_SEX_CODE
        ,CASE J_L.SOURCE
           WHEN 'RED' THEN J_L.LASTNAME
           WHEN 'BLUE' THEN J_L.CLFAMNAME
         END AS CUS01_C01_SURNAME_1
        ,J_L.CLUKTAXPAYER AS CUS01_C01_UKTAXPAYER_UK
        ,CASE J_L.SOURCE
           WHEN 'RED' THEN
             CASE
               WHEN J_L.LASTUPDATEDATE IS NULL THEN J_L.CLPLASTCHNGDATE
               WHEN J_L.CLPLASTCHNGDATE IS NULL THEN J_L.LASTUPDATEDATE
               WHEN J_L.LASTUPDATEDATE > J_L.CLPLASTCHNGDATE THEN J_L.LASTUPDATEDATE
               ELSE J_L.CLPLASTCHNGDATE
             END
           WHEN 'BLUE' THEN J_L.CLPLASTCHNGDATE
         END AS C01_AMEND_DT
        ,COALESCE(J_L.CUSINC1_C4525,J_L.CUSINC2_C4525,J_L.CUSINC3_C4525,J_L.CLPEARNINGSGROS) AS CUS01_C01_BASIC_1
        ,CASE J_L.SOURCE
           WHEN 'RED' THEN J_L.DATEOFBIRTH
           WHEN 'BLUE' THEN J_L.CLPDOB
         END  AS C01_BIRTHDATE
        ,J_L.CLCOMENCEDATE AS C01_CREATE_DT
        ,CASE J_L.SOURCE
           WHEN 'RED' THEN J_L.DATEOFBIRTH
           WHEN 'BLUE' THEN J_L.CLPDATEDECEASED
         END AS C01_DEATH_DT
        ,J_L.CLPNODEPENDANTS AS CUS01_C01_DEPENDS
        ,CASE J_L.SOURCE
           WHEN 'RED' THEN J_L.FREEFORMATADD
           WHEN 'BLUE' THEN J_L.CLEMAILADR
         END AS CUS01_C01_EMAILADD
        ,TGT_OCCUPATION AS CUS01_C01_OCCUPATION
        ,CASE J_L.SOURCE
           WHEN 'BLUE' THEN J_L.CUSEXP_CNT
           WHEN 'RED' THEN NULL
         END AS CUS01_C01_NBRCRD
        ,J_L.CLIENTRES_NATIONALTY AS CUS01_C01_RESIDENCY
        ,CASE 
           WHEN CNT_HLDLINKS_BRAILL > 0 THEN 4
           WHEN CNT_HLDLINKS_LPRINT > 0 THEN 3
         END AS MAR01_M01_VISUAL_IMP
        ,CASE J_L.CLPREFEREDCONTACT
           WHEN 'F' THEN 'F'
           WHEN 'E' THEN 'E'
           WHEN 'W' THEN 'M'
           WHEN 'H' THEN 'H'
           WHEN 'B' THEN 'B'
           WHEN 'M' THEN 'O'
         END AS CUS01_C01_COM_METH1
        ,CASE J_L.SOURCE
           WHEN 'BLUE' THEN J_L.CLFORENAMESOTHERS
           WHEN 'RED' THEN
             CASE
               WHEN CHARINDEX(' ',J_L.FIRSTNAME ) > 1 THEN SUBSTRING( J_L.FIRSTNAME, CHARINDEX( ' ',J_L.FIRSTNAME ) + 1, 15 ) ELSE NULL
             END
        END AS CUS01_C01_FORENAME2_1
        ,CASE J_L.SOURCE
           WHEN 'RED' THEN J_L.TGT_NM_SUFFIX
           WHEN 'BLUE' THEN NULL
        END AS CUS01_C01_NM_SUFFIX
        ,CASE J_L.SOURCE
           WHEN 'BLUE' THEN J_L.CLIENT_NATIONLTY
           WHEN 'RED' THEN J_L.CWCUSTOMER_NATIONLTY
         END AS CUS01_C01_NATLTYCOD1_1
        ,FLOOR(J_L.E23153) AS CUS01_C01_CCJ_VAL_1
        ,J_L.I120103 AS CUS01_C01_IMP_V

        ,SUM_REGBON AS CUS01_C01_REGBON
        ,COALESCE(SUM_CUSEMP_INCOME,0) + COALESCE( SUM_OTHERINCOME,0) AS CUS01_C01_MTH_INCOME
        ,SUM_MONTHLY_OVERTIME AS CUS01_C01_MTH_OTIME
        ,SUM(CASE CUCDACNTHLDERIND
               WHEN 'Y' THEN 1
               ELSE 0
             END) OVER (PARTITION BY FILRS_ACACNTNO) AS UDMH_HOLDER_CNT
        ,CASE WHEN A66291 > 0 THEN 'Y' ELSE 'N' END AS CUS01_C01_IMP_A
        ,CASE
           WHEN B52664 IS NOT NULL AND DATEDIFF(YEAR,B52664,A1339) < 3 THEN 'Y'
           ELSE 'N'
         END AS CUS01_C01_IMP_B
        ,C41513 AS CUS01_C01_RES_MTH_1
        ,C41512 AS CUS01_C01_RES_YRS_1
    FROM JOIN_LUTS AS J_L
),
FILTER_DEPENDENT_TELEPHONE AS (
  SELECT DISTINCT C01_CUST_NO
        ,CUS01_C01_MOBTELNBR_FULL
        ,CUS01_C01_FAXNBR
        ,CWPHONECONTACTINFO.PHONEWITHSTD
    FROM MAP_FROMSRC AS M_SRC
    OUTER APPLY (SELECT TOP 1 CWPHONECONTACT.INTCODE + CWPHONECONTACT.AREACODE + CWPHONECONTACT.TELEPHONENO AS PHONEWITHSTD
                   FROM TB_SRC_CWPHONECONTACT AS CWPHONECONTACT
                  WHERE CWPHONECONTACT.CUSTOMERNO = C01_CUST_NO
                    AND ( CWPHONECONTACT.TELEPHONENO <> CUS01_C01_MOBTELNBR_FULL OR CUS01_C01_MOBTELNBR_FULL IS NULL)
                    AND ( CWPHONECONTACT.TELEPHONENO <> CUS01_C01_FAXNBR  OR CUS01_C01_FAXNBR IS NULL)
                    AND CWPHONECONTACT.EXTENSION IS NULL 
                 ORDER BY CASE WHEN CWPHONECONTACT.USAGE = 'CorrespondenceCode TBD' THEN 1 ELSE 2 END
                         ,CWPHONECONTACT.LASTUPDATEDATE ) AS CWPHONECONTACTINFO
),
FILTER_DEPENDENT_TELEPHONE2 AS (
  SELECT C01_CUST_NO
        ,DEPENDENT_TELEPHONE.PHONEWITHSTD
        ,CWPHONECONTACTINFO.PHONEWITHSTD_TELEPHONE2
        ,CWPHONECONTACTINFO_EXTENSION.EXTENSION
    FROM FILTER_DEPENDENT_TELEPHONE AS DEPENDENT_TELEPHONE
    OUTER APPLY (SELECT TOP 1 CWPHONECONTACT.INTCODE + CWPHONECONTACT.AREACODE + CWPHONECONTACT.TELEPHONENO AS PHONEWITHSTD_TELEPHONE2
                   FROM TB_SRC_CWPHONECONTACT AS CWPHONECONTACT
                  WHERE CWPHONECONTACT.CUSTOMERNO = C01_CUST_NO
                    AND ( CWPHONECONTACT.TELEPHONENO <> CUS01_C01_MOBTELNBR_FULL OR CUS01_C01_MOBTELNBR_FULL IS NULL)
                    AND ( CWPHONECONTACT.TELEPHONENO <> CUS01_C01_FAXNBR  OR CUS01_C01_FAXNBR IS NULL)
                    AND CWPHONECONTACT.TELEPHONENO <> PHONEWITHSTD
                 ORDER BY CASE WHEN CWPHONECONTACT.EXTENSION IS NULL THEN 1 ELSE 2 END
                         ,CWPHONECONTACT.LASTUPDATEDATE ) AS CWPHONECONTACTINFO
    OUTER APPLY (SELECT TOP 1 EXTENSION 
                   FROM TB_SRC_CWPHONECONTACT AS CWPHONECONTACT
                  WHERE CWPHONECONTACT.CUSTOMERNO = C01_CUST_NO
                    AND ( CWPHONECONTACT.TELEPHONENO <> CUS01_C01_MOBTELNBR_FULL OR CUS01_C01_MOBTELNBR_FULL IS NULL)
                    AND ( CWPHONECONTACT.TELEPHONENO <> CUS01_C01_FAXNBR  OR CUS01_C01_FAXNBR IS NULL)
                    AND CWPHONECONTACT.TELEPHONENO <> PHONEWITHSTD
                 ORDER BY CASE WHEN CWPHONECONTACT.EXTENSION IS NULL THEN 1 ELSE 2 END
                         ,CWPHONECONTACT.LASTUPDATEDATE ) AS CWPHONECONTACTINFO_EXTENSION
),
FILTER_DEPENDENT_MORTGAGE_STARTDATE AS (
  SELECT MIN(M_SRC.AC01MAIN_ACINCEPDATE) AS MIN_ACINCEPTIONDATE
        ,M_SRC.AC01_MAIN_ACACNTNO
    FROM MAP_FROMSRC AS M_SRC
   WHERE C01_SEQNO <= 4
   GROUP BY AC01_MAIN_ACACNTNO
),
--FILTER_M01 AS (
--  SELECT AC01MAIN.ACACNTNO
--        ,CASE WHEN (FLLR.ACPROCESSTATUS = 3 OR FLLR.ACPROCESSTATUS = 4 ) THEN FLLR.ACCLRDATE ELSE NULL END AS M01_REDEEM_DT
--    FROM TB_SRC_AC01_MAIN AS AC01MAIN
--   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS FLLR
--      ON AC01MAIN.ACACNTNO = FLLR.ACACNTNO
--),
--FILTER_M01_REDEEMDT_ISNULL AS (
--  SELECT  M_SRC.C01_CUST_NO AS C01_CUSTNO_REDEEMDTNULL ,M_SRC.AC01_MAIN_ACACNTNO
--   FROM MAP_FROMSRC AS M_SRC
--   LEFT OUTER JOIN FILTER_M01 AS M01
--     ON M_SRC.AC01_MAIN_ACACNTNO = M01.ACACNTNO
--  WHERE M01.M01_REDEEM_DT IS  NULL
--),
--FILTER_M01_MAXREDEEMDT AS (
--  SELECT C01_CUST_NO,
--       MAX(M01_REDEEM_DT) AS MAX_REDEEM_DT
--  FROM MAP_FROMSRC M_SRC
--  LEFT OUTER JOIN FILTER_M01 AS M01
--    ON M_SRC.AC01_MAIN_ACACNTNO  = M01.ACACNTNO
--  WHERE  NOT EXISTS (SELECT C01_CUSTNO_REDEEMDTNULL FROM FILTER_M01_REDEEMDT_ISNULL WHERE M_SRC.C01_CUST_NO = C01_CUSTNO_REDEEMDTNULL) 
--  GROUP BY C01_CUST_NO
--),
JOIN_DEPENDENT AS (
  SELECT M_SRC.*
        ,CWPHONE.PHONEWITHSTD
        ,CWPHONE.PHONEWITHSTD_TELEPHONE2
        ,CWPHONE.EXTENSION
        ,MARKETING_RESTRICTIONS.CWMR_CNT
        ,MIN_ACINCEPTIONDATE
        ,CWPHONECONTACT_EMAILMARKETING.CWPHONECONTACT_EMAILMARKETING_CNT
        ,CWPHONECONTACT_TELPHONE_MARKETING.CWPHONECONTACT_TELPHONE_MARKETING_CNT
        --,M01.MAX_REDEEM_DT
    FROM MAP_FROMSRC AS M_SRC
    LEFT OUTER JOIN FILTER_DEPENDENT_TELEPHONE2 AS CWPHONE
       ON CWPHONE.C01_CUST_NO = M_SRC.C01_CUST_NO
    LEFT OUTER JOIN FILTER_CWMARKETINGRESTRICTIONS AS MARKETING_RESTRICTIONS
      ON MARKETING_RESTRICTIONS.CUSTOMERNO = M_SRC.C01_CUST_NO
    LEFT OUTER JOIN FILTER_DEPENDENT_MORTGAGE_STARTDATE AS MORTGAGE_STARTDATE
      ON MORTGAGE_STARTDATE.AC01_MAIN_ACACNTNO = M_SRC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_CWPHONECONTACT_EMAILMARKETING AS CWPHONECONTACT_EMAILMARKETING
       ON CWPHONECONTACT_EMAILMARKETING.CUSTOMERNO = M_SRC.C01_CUST_NO 
    LEFT OUTER JOIN FILTER_CWPHONECONTACT_TELPHONE_MARKETING AS CWPHONECONTACT_TELPHONE_MARKETING
       ON CWPHONECONTACT_TELPHONE_MARKETING.CUSTOMERNO = M_SRC.C01_CUST_NO 
    --LEFT OUTER JOIN FILTER_M01_MAXREDEEMDT AS M01
    --   ON M01.C01_CUST_NO = M_SRC.C01_CUST_NO 
),
MAP_DEPENDENT_01 AS (
  SELECT J_D.*
        ,CASE J_D.C01_SEQNO
           WHEN 1 THEN
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_COUNTY
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_COUNTY
               ELSE J_D.AC01ADDR_COUNTY
             END
           ELSE
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_COUNTY
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_COUNTY
               WHEN J_D.SOURCE = 'RED' THEN J_D.POSTALADDR_COUNTY 
               WHEN J_D.SOURCE = 'BLUE' THEN J_D.CLIENT_LIVEADDR_COUNTY
             END
           END AS CUS01_C01_COUNTY
        ,CASE J_D.C01_SEQNO
           WHEN 1 THEN
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_DIST
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_DIST
               ELSE J_D.AC01ADDR_DIST
             END
           ELSE
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_DIST
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_DIST
               WHEN J_D.SOURCE = 'RED' THEN J_D.POSTALADDR_DIST
               WHEN J_D.SOURCE = 'BLUE' THEN J_D.CLIENT_LIVEADDR_DIST
             END
           END AS CUS01_C01_DIST
        ,CASE J_D.C01_SEQNO
           WHEN 1 THEN
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_TOWN
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_TOWN
               ELSE J_D.AC01ADDR_TOWN
             END
           ELSE
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_TOWN
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_TOWN
               WHEN J_D.SOURCE = 'RED' THEN J_D.POSTALADDR_TOWN
               WHEN J_D.SOURCE = 'BLUE' THEN J_D.CLIENT_LIVEADDR_TOWN
             END
           END AS CUS01_C01_TOWN
        ,CASE J_D.C01_SEQNO
           WHEN 1 THEN
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_STREET
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_STREET
               ELSE J_D.AC01ADDR_STREET
             END
           ELSE
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_STREET
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_STREET
               WHEN J_D.SOURCE = 'RED' THEN J_D.POSTALADDR_STREET
               WHEN J_D.SOURCE = 'BLUE' THEN J_D.CLIENT_LIVEADDR_STREET
             END
           END AS CUS01_C01_STREET
        ,CASE J_D.C01_SEQNO
           WHEN 1 THEN
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_BUILDNAME
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_BUILDNAME
               ELSE J_D.AC01ADDR_BUILDNAME
             END
           ELSE
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_BUILDNAME
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_BUILDNAME
               WHEN J_D.SOURCE = 'RED' THEN J_D.POSTALADDR_BUILDNAME
               WHEN J_D.SOURCE = 'BLUE' THEN J_D.CLIENT_LIVEADDR_BUILDNAME
             END
           END AS CUS01_C01_BUILD_NAME
        ,CASE J_D.C01_SEQNO
           WHEN 1 THEN
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_BUILDNUM
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_BUILDNUM
               ELSE J_D.AC01ADDR_BUILDNUM
             END
           ELSE
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CORRADDRESS_BUILDNUM
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENTADDR_BUILDNUM
               WHEN J_D.SOURCE = 'RED' THEN J_D.POSTALADDR_BUILDNUM
               WHEN J_D.SOURCE = 'BLUE' THEN J_D.CLIENT_LIVEADDR_BUILDNUM
             END
           END AS CUS01_C01_BUILD_NUM
        ,CASE
           WHEN  J_D.C01_SEQNO <= 4 THEN 'CU' ELSE 'TP'
         END AS CUS01_C01_CUS_CAT 
        ,CASE J_D.C01_SEQNO
           WHEN 1 THEN
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN
               CASE
                 WHEN J_D.CORRADDRESS_COUNTRY NOT IN ( 672002,672003,672004,672005,672006 ) AND J_D.REGEX_COL <> 1 THEN 'Y'
                 ELSE 'N'
               END
             WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN
               CASE
                 WHEN J_D.ADRFOREIGNADRIND = 'Y' THEN
                   CASE 
                     WHEN J_D.ADRCOUNTRYCODE <> 'UK' THEN 'Y'
                     ELSE 'Y'
                   END
                 ELSE --ADRFOREIGNADRIND != 'Y'
                   CASE 
                     WHEN J_D.ADRCOUNTRYCODE <> 'OT' THEN 'N' 
                     ELSE 'N'
                   END
               END-- END OF BLUE
             ELSE --COULD BE BLUE OR RED
              CASE
                WHEN J_D.ADRESES_AC01_ADRFOREIGNADRIND = 'Y' THEN 'Y'
                ELSE 'N'
             END
             END -- END OF SEQNO = 1
             ELSE --WHEN SEQNO <> 1
               CASE
                 WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN
                   CASE
                     WHEN J_D.CORRADDRESS_COUNTRY NOT IN ( 672002,672003,672004,672005,672006 ) AND J_D.REGEX_COL <> 1 THEN 'Y'
                     ELSE 'N'
                   END
                WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN
                   CASE
                     WHEN J_D.ADRFOREIGNADRIND = 'Y' THEN 'Y' ELSE 'N'
                   END
               END --END OF SEQNO <> 1
        END AS CUS01_C01_FORADD
       ,CASE J_D.SOURCE
          WHEN 'RED' THEN J_D.PHONEWITHSTD
          WHEN 'BLUE' THEN J_D.CLPRIVATETELEPHONE
        END AS CUS01_C01_TELEPHONE
       ,CASE J_D.SOURCE
          WHEN 'RED' THEN J_D.PHONEWITHSTD_TELEPHONE2
          WHEN 'BLUE' THEN J_D.CLBUSINESTELEPHONE
        END AS CUS01_C01_TELEPHONE2
       ,CASE J_D.SOURCE
          WHEN 'RED' THEN J_D.EXTENSION
          ELSE NULL
        END AS CUS01_C01_BUSTELEXT
        ,CASE J_D.CUS01_C01_CUSTYP
           WHEN 'I' THEN 
             CASE J_D.SOURCE
               WHEN 'RED' THEN J_D.CUSTOMER_MR_ETC
               WHEN 'BLUE' THEN J_D.CLIENT_MR_ETC
             END
            ELSE NULL
         END AS CUS01_C01_MR_ETC
        ,CASE J_D.C01_SEQNO
           WHEN 1 THEN
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CWPOSTALADDR_POSTCODE
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENT_CORPOSTCODE
               ELSE J_D.AC01_POSTCODE
             END
           ELSE
             CASE
               WHEN J_D.SOURCE = 'RED' AND J_D.CORRADDRESS_CUSTOMERNO IS NOT NULL THEN J_D.CWPOSTALADDR_POSTCODE
               WHEN J_D.SOURCE = 'BLUE' AND J_D.CLIENT_CORADDRESSNO IS NOT NULL THEN J_D.CLIENT_CORPOSTCODE
               WHEN J_D.SOURCE = 'RED' THEN J_D.POSTAL_ADDR_LIVING_POSTCODE 
               WHEN J_D.SOURCE = 'BLUE' THEN J_D.CLIENT_LIVPOSTCODE
             END
           END AS CUS01_C01_POSTCODE
          ,MIN_ACINCEPTIONDATE AS C01_MOR_ST_DT
          ,CASE J_D.SOURCE
             WHEN 'RED' THEN 
               CASE 
                 WHEN CWPHONECONTACT_EMAILMARKETING_CNT > 0 THEN 'N' 
                 ELSE 'Y' 
               END
             WHEN 'BLUE' THEN 'N'
           END AS CUS01_C01_EMRKT
          ,CASE J_D.SOURCE
             WHEN 'RED' THEN 
               CASE 
                 WHEN CWPHONECONTACT_TELPHONE_MARKETING_CNT > 0 THEN 'N' 
                 ELSE 'Y' 
               END
             WHEN 'BLUE' THEN
               CASE C45427
                 WHEN 'Y' THEN 'Y'
                 ELSE NULL
               END
           END AS CUS01_C01_TMRKT
          --,MAX_REDEEM_DT AS C01_MOR_CS_DT
    FROM JOIN_DEPENDENT AS J_D
),
MAP_DEPENDENT_02 AS (
  SELECT M_D1.*
        ,CASE
           WHEN M_D1.SOURCE = 'BLUE' AND M_D1.GH1_CUSNO2 IS NULL AND M_D1.CNT_HLDLNKS >= 1 THEN M_D1.HLDLFROMDATE
           WHEN M_D1.SOURCE = 'BLUE' AND M_D1.CLPDATEDECEASED IS NOT NULL THEN M_D1.CLPDATEDECEASED
           WHEN M_D1.SOURCE = 'RED' AND M_D1.DATEOFDEATH IS NOT NULL THEN M_D1.DATEOFDEATH
         END AS C01_NOTFY_DT

        ,CASE M_D1.SOURCE
           WHEN 'BLUE' THEN
             CASE
               WHEN M_D1.UDMH_HOLDER_CNT = 1 AND M_D1.C01_SEQNO = 1 AND M_D1.CURRENT_UNKADD_HOLDCODES_CNT > 0 THEN 'Y'
               ELSE 'N'
             END
           WHEN 'RED' THEN
             CASE
               WHEN M_D1.GONEAWAY IS NULL  OR M_D1.GONEAWAY = 0 THEN 'N'
               ELSE '1'
             END
            END AS CUS01_C01_UNKNOWNADD
        ,CASE M_D1.SOURCE
           WHEN 'BLUE' THEN 0
           WHEN 'RED' THEN
             CASE
               WHEN M_D1.UDMH_HOLDER_CNT = 1 AND M_D1.C01_SEQNO = 1 AND M_D1.CURRENT_FRAUD_HOLDCODES_CNT > 0 THEN 1
               ELSE 0
             END
         END AS CUS01_C01_FRAUD_IND
    FROM MAP_DEPENDENT_01 AS M_D1
),
MAP_DEPENDENT_03 AS (
  SELECT M_D2.*
        ,CASE M_D2.SOURCE
          WHEN 'RED' THEN NULL
          WHEN 'BLUE' THEN
            CASE
              WHEN M_D2.C01_NOTFY_DT IS NOT NULL AND M_D2.GH1_CUSNO2 IS NULL
               AND M_D2.CNT_HLDLNKS >= 1 THEN CONCAT( 'Executor in Notepad:',CAST( M_D2.MAX_HLDLTODATE AS VARCHAR(100) ) )
             ELSE NULL
            END
         END AS CUS01_C01_EXEC
       ,CASE 
          WHEN C01_NOTFY_DT IS NOT NULL THEN 'N'
          ELSE
            CASE M_D2.SOURCE
              WHEN 'RED' THEN 
                CASE WHEN CWMR_CNT > 0 THEN 'N'
                ELSE 'Y'
                END
          WHEN 'BLUE' THEN CLMAILFLAG
          END
        END AS CUS01_C01_MAILSHOT
       --,CASE
       --    WHEN M_D2.C01_SEQNO <= 4
       --     AND CASE M_D2.SOURCE
       --           WHEN 'RED' THEN M_D2.DATEOFDEATH
       --           WHEN 'BLUE' THEN M_D2.CLPDATEDECEASED
       --         END IS NOT NULL THEN 'DED'
       --    ELSE M_D2.CUS02_C03_RELTYP
       --  END AS CUS02_C03_HOLD_CAP
    FROM MAP_DEPENDENT_02 AS M_D2
),
--FILTER_MAX_M01_VISUALIMP AS (
--  SELECT MAX(M_D3.MAR01_M01_VISUAL_IMP) AS MAX_M01_VISUAL_IMP
--        ,AC01_MAIN_ACACNTNO
--    FROM MAP_DEPENDENT_03 AS M_D3
--   WHERE CUS02_C03_HOLD_CAP = 'SOL'
--   GROUP BY AC01_MAIN_ACACNTNO
--),
MAP_DEFAULTS AS (
  SELECT M_D3.*
        ,'C01' AS C01_CODE
        ,NULL AS CUS01_C01_B_CTY
        ,NULL AS CUS01_C01_B_DST
        ,NULL AS CUS01_C01_B_FAX
        ,NULL AS CUS01_C01_B_PCOD
        ,NULL AS CUS01_C01_B_STR
        ,NULL AS CUS01_C01_B_TEL
        ,NULL AS CUS01_C01_B_TWN
        ,NULL AS CUS01_C01_B_TPY
        ,'N' AS CUS01_C01_CHYASGOVR
        ,NULL AS CUS01_C01_CHYASGRSN
        ,NULL AS CUS01_C01_CORTAX
        ,NULL AS CUS01_C01_NMECON
        ,NULL AS CUS01_C01_NMECTIT
        ,NULL AS CUS01_C01_NMETRD
        ,NULL AS CUS01_C01_PMBSTA
        ,NULL AS CUS01_C01_RES_CODE
        ,'N' AS CUS01_C01_SELF_CERT
        ,NULL AS CUS01_C01_STAFF
        ,'N' AS CUS01_C01_TPS_IND
        ,NULL AS CUS01_C01_TRDCTY
        ,NULL AS CUS01_C01_TRDDST
        ,NULL AS CUS01_C01_TRDFAX
        ,NULL AS CUS01_C01_TRDPCODE
        ,NULL AS CUS01_C01_TRDSTR
        ,NULL AS CUS01_C01_TRDTEL
        ,NULL AS CUS01_C01_TRDTWN
        ,NULL AS CUS01_C01_ACORN_GRP
        ,NULL AS CUS01_C01_AGE_GROUP
        ,NULL AS C01_CEASE_DT
        ,NULL AS CUS01_C01_CMP_NO
        ,NULL AS CUS01_C01_EMP_MTH
        ,NULL AS CUS01_C01_EMP_YRS
        ,NULL AS CUS01_C01_GALLOW
        ,1 AS CUS01_C01_INCPAD
        ,NULL AS C01_MEM_CS_DT
        ,NULL AS C01_MEM_ST_DT
        ,NULL AS CUS01_C01_OUTGOINGS
        ,NULL AS C01_PMBSTA_DT
        ,NULL AS CUS01_C01_SOURCE_NO
        ,NULL AS CUS01_C01_VAT_NO
        ,NULL AS CUS01_C01_CMPNMELNG
        ,NULL AS CUS01_C01_CMPTRDLNG
        ,NULL AS CUS01_C01_BNKMTH
        ,NULL AS CUS01_C01_BNKYRS
        ,NULL AS CUS01_C01_RELYRS
        ,NULL AS CUS01_C01_BUSB_NAME
        ,NULL AS CUS01_C01_BUSB_NUM
        ,NULL AS CUS01_C01_COMMENT
        ,NULL AS CUS01_C01_EMP_STATUS
        ,NULL AS CUS01_C01_EMPLYR_CDE
        ,NULL AS CUS01_C01_EMPLYE_NO
        ,NULL AS C01_END_DT
        ,NULL AS CUS01_C01_ESTA_1
        ,NULL AS CUS01_C01_ESTA_2
        ,NULL AS CUS01_C01_ESTA_3
        ,NULL AS C01_ESTA_DT1
        ,NULL AS C01_ESTA_DT2
        ,NULL AS C01_ESTA_DT3
        ,NULL AS CUS01_C01_P11D_IND
        ,NULL AS C01_START_DT
        ,NULL AS CUS01_C01_TRDB_NAME
        ,NULL AS CUS01_C01_TRDB_NUM
        ,NULL AS CUS01_C01_COM_METH2
        ,NULL AS CUS01_C01_COM_METH3
        ,NULL AS C01_COMUPD_DT
        ,NULL AS CUS01_C01_DIS_CODE
        ,'N' AS CUS01_C01_LIFE_MAIL
        ,NULL AS CUS01_C01_SSC_CODE
        ,'Y' AS CUS01_C01_BOR_INC
        ,NULL AS CUS01_C01_BIRTH_PL
        ,NULL AS CUS01_C01_TAX_ID
        ,NULL AS CUS01_C01_NATLTYCOD2
        ,NULL AS C01_INCOR_DT
        ,NULL AS CUS01_C01_PLOM_AMT
        ,NULL AS CUS01_C01_BIRTH_CTRY
        ,NULL AS C01_LTC_NOTFY
        ,NULL AS C01_LTC_DT
        ,NULL AS C01_IVA_DT
        ,NULL AS CUS01_C01_IVA_AMT
        ,NULL AS CUS01_C01_IVA_NME
        ,NULL AS C01_BK_DTE
        ,NULL AS CUS01_C01_BK_AMT
        ,NULL AS CUS01_C01_BK_NME
        ,NULL AS CUS01_TERM_ILL
        ,NULL AS CUS01_C01_FSCS_STAT
        ,NULL AS CUS01_C01_FSCS_REAS
        ,NULL AS C01_FSCS_CHKDT
        ,NULL AS CUS01_C01_HNW_IND
        ,NULL AS CUS01_C01_PROF_IND
        ,NULL AS C01_DEBTMAN
        ,NULL AS C01_UKTAXRESON
        ,NULL AS C01_USCITIZEN
        ,NULL AS C01_RESTACTY1
        ,NULL AS C01_RESTACTY2
        ,NULL AS C01_RESTACTY3
        ,NULL AS C01_FATCARPFLG
        ,NULL AS CUS01_C01_TAX_ID1
        ,NULL AS CUS01_C01_TAX_ID2
        ,NULL AS CUS01_C01_TAX_ID3
        --Waiting on Johns reply
        ,NULL AS CUS01_C01_VISUAL_IMP
        ,NULL AS C01_MOR_CS_DT
        --Not Started
        ,NULL AS CUS01_C01_SEMCURYR
        ,NULL AS CUS01_C01_INC_USED
        --In Progress
        ,NULL AS CUS01_C01_SEMLSTYR
        ,NULL AS CUS01_C01_SEMPRVYR
    FROM MAP_DEPENDENT_03 AS M_D3
),
MAP_EXCEPTIONS AS (
  SELECT M_DEF.* 
        ,CASE WHEN CUS01_C01_CCJ_VAL_1 <> E23153 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','R:ROUNDING',AC01_MAIN_ACACNTNO,'CUS01_C01_CCJ_VAL',CUS01_C01_CCJ_VAL_1))
         END AS EXCEPTION_1
        ,CASE WHEN CUS01_C01_BASIC_1 <> CLPEARNINGSGROS THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','R:ROUNDING',AC01_MAIN_ACACNTNO,'CUS01_C01_BASIC',CUS01_C01_BASIC_1))
         END AS EXCEPTION_2
        ,CASE 
           WHEN LEN(CUS01_C01_FNAME_1) > 25 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_FNAME',CUS01_C01_FNAME_1))
         END AS EXCEPTION_3
        ,CASE 
           WHEN LEN(CUS01_C01_FNAME_1) > 25 THEN SUBSTRING(CUS01_C01_FNAME_1,1,25)
           ELSE CUS01_C01_FNAME_1
         END AS CUS01_C01_FNAME
        ,CASE
           WHEN LEN(CUS01_C01_INITIALS_1) > 4 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_INITIALS',CUS01_C01_INITIALS_1))
         END AS EXCEPTION_4
        ,CASE 
           WHEN LEN(CUS01_C01_INITIALS_1) > 4 THEN SUBSTRING(CUS01_C01_INITIALS_1,1,4)
           ELSE CUS01_C01_INITIALS_1
         END AS CUS01_C01_INITIALS
        ,CASE
           WHEN LEN(CUS01_C01_SURNAME_1) > 25 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_SURNAME',CUS01_C01_SURNAME_1))
         END AS EXCEPTION_5
        ,CASE 
           WHEN LEN(CUS01_C01_SURNAME_1) > 25 THEN SUBSTRING(CUS01_C01_SURNAME_1,1,25)
           ELSE CUS01_C01_SURNAME_1
         END AS CUS01_C01_SURNAME
        ,CASE WHEN LEN(CUS01_C01_BASIC_1) > 6 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_BASIC',CUS01_C01_BASIC_1))
         END AS EXCEPTION_6
        ,CASE 
           WHEN LEN(CUS01_C01_BASIC_1) > 6 THEN LEFT(CUS01_C01_BASIC_1,6)
           ELSE CUS01_C01_BASIC_1
         END AS CUS01_C01_BASIC
        ,CASE WHEN LEN(CUS01_C01_RES_MTH_1) > 2 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_RES_MTH',CUS01_C01_RES_MTH_1))
         END AS EXCEPTION_7
        ,CASE 
           WHEN LEN(CUS01_C01_RES_MTH_1) > 2 THEN LEFT(CUS01_C01_RES_MTH_1,2)
           ELSE CUS01_C01_RES_MTH_1
         END AS CUS01_C01_RES_MTH
        ,CASE
            WHEN LEN(CUS01_C01_RES_YRS_1) > 2 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_RES_YRS',CUS01_C01_RES_YRS_1)) 
         END AS EXCEPTION_8
        ,CASE 
           WHEN LEN(CUS01_C01_RES_YRS_1) > 2 THEN LEFT(CUS01_C01_RES_YRS_1,2)
           ELSE CUS01_C01_RES_YRS_1
         END AS CUS01_C01_RES_YRS
        ,CASE
           WHEN LEN(CUS01_C01_FORENAME2_1) > 15 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_FORENAME2',CUS01_C01_FORENAME2_1)) 
         END AS EXCEPTION_9
        ,CASE 
           WHEN LEN(CUS01_C01_FORENAME2_1) > 15 THEN SUBSTRING(CUS01_C01_FORENAME2_1,1,15)
           ELSE CUS01_C01_FORENAME2_1
         END AS CUS01_C01_FORENAME2
        ,CASE WHEN LEN(CUS01_C01_NATLTYCOD1_1) > 4 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_NATLTYCOD1',CUS01_C01_NATLTYCOD1_1)) 
          END AS EXCEPTION_10
        ,CASE 
           WHEN LEN(CUS01_C01_NATLTYCOD1_1) > 4 THEN SUBSTRING(CUS01_C01_NATLTYCOD1_1,1,4)
           ELSE CUS01_C01_NATLTYCOD1_1
         END AS CUS01_C01_NATLTYCOD1
        ,CASE WHEN LEN(CUS01_C01_CCJ_VAL_1) > 7 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_CCJ_VAL',CUS01_C01_CCJ_VAL_1)) 
         END AS EXCEPTION_11
        ,CASE 
           WHEN LEN(CUS01_C01_CCJ_VAL_1) > 7 THEN LEFT(CUS01_C01_CCJ_VAL_1,7)
           ELSE CUS01_C01_CCJ_VAL_1
         END AS CUS01_C01_CCJ_VAL
         ,CASE WHEN LEN(CUS01_C01_MOBTELNBR_FULL) > 15 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_MOBTELNBR',CUS01_C01_MOBTELNBR_FULL))
         END AS EXCEPTION_12
        ,CASE 
           WHEN LEN(CUS01_C01_MOBTELNBR_FULL) > 15 THEN LEFT(CUS01_C01_MOBTELNBR_FULL,15)
           ELSE CUS01_C01_MOBTELNBR_FULL
         END AS CUS01_C01_MOBTELNBR
        ,CASE
           WHEN  ADRCOUNTRYCODE = 'VALUE THAN MEANS UK'THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','C01-FOREIGN-UKCNTRY',AC01_MAIN_ACACNTNO,'ADRESES.ADRNUMBER',ADRNUMBER))
         END AS EXCEPTION_13
        ,CASE 
           WHEN  ADRCOUNTRYCODE = 'VALUE THAN MEANS OTHER' THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','C01-OTHER-CNTRY',AC01_MAIN_ACACNTNO,'ADRESES.ADRNUMBER',ADRNUMBER))
         END AS EXCEPTION_14
        ,CASE
           WHEN M_DEF.SOURCE = 'RED'
            AND M_DEF.CLALTCLNO IS NULL THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:RED-CLALTCLNO',AC01_MAIN_ACACNTNO,'CLIENTS.CLALTCLNO',M_DEF.CLALTCLNO))
           WHEN M_DEF.SOURCE = 'RED'
            AND M_DEF.CLALTCLNO IS NOT NULL
            AND M_DEF.CWCUSTOMERNO IS NULL THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:RED-CUSTOMERNO',AC01_MAIN_ACACNTNO,'CWCUSTOMER.CUSTOMERNO',M_DEF.CWCUSTOMERNO))
         END AS EXCEPTION_15
        ,CASE 
           WHEN LEN(M_DEF.C01_CUST_NO) > 15 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'C01_CUST_NO',M_DEF.C01_CUST_NO))
         END AS EXCEPTION_16
        ,CASE 
           WHEN LEN(M_DEF.CUS01_C01_FRQPAD_1) > 1 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_FRQPAD',M_DEF.CUS01_C01_FRQPAD_1))
         END AS EXCEPTION_17
        ,SUBSTRING(M_DEF.CUS01_C01_FRQPAD_1,1,1) AS CUS01_C01_FRQPAD
        ,CASE
           WHEN LEN(M_DEF.CUSTOMER_MR_ETC) > 4 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_MR_ETC',M_DEF.CUSTOMER_MR_ETC))
         END AS EXCEPTION_18
        ,CASE 
           WHEN LEN(M_DEF.CLIENT_MR_ETC) > 4 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_MR_ETC',M_DEF.CLIENT_MR_ETC))
         END AS EXCEPTION_19
        ,CASE 
           WHEN LEN(M_DEF.CUS01_C01_NI_NUM) > 9 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_NI_NUM',M_DEF.CUS01_C01_NI_NUM))
         END AS EXCEPTION_20
        ,CASE 
           WHEN LEN(M_DEF.C01_AMEND_DT) > 8 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'C01_AMEND_DT',M_DEF.C01_AMEND_DT))
         END AS EXCEPTION_21
        ,CASE 
           WHEN LEN(M_DEF.C01_BIRTHDATE) > 8 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'C01_BIRTHDATE',M_DEF.C01_BIRTHDATE))
         END AS EXCEPTION_22
        ,CASE 
           WHEN LEN(M_DEF.CUS01_C01_TELEPHONE) > 15 THEN (SELECT EXCEP FROM  dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_TELEPHONE',M_DEF.CUS01_C01_TELEPHONE))
         END AS EXCEPTION_23  --take substring(PHONEWITHSTD,1,15)
        ,CASE 
           WHEN LEN(M_DEF.CUS01_C01_TELEPHONE2) > 15 THEN (SELECT EXCEP FROM  dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_TELEPHONE2',M_DEF.CUS01_C01_TELEPHONE2))
         END AS EXCEPTION_24 --take substring(PHONEWITHSTD_TELEPHONE2,1,15)     
        ,CASE 
           WHEN LEN(M_DEF.CUS01_C01_BUSTELEXT) > 6 THEN (SELECT EXCEP FROM  dbo.FN_EXCEPTION1('X02_C01','W:LENGTH-OVERRUN',AC01_MAIN_ACACNTNO,'CUS01_C01_BUSTELEXT',M_DEF.CUS01_C01_BUSTELEXT))
         END AS EXCEPTION_25  --left(CWPhoneContact_EXTENSION,6)
    FROM MAP_DEFAULTS AS M_DEF
),
OUT_FIELDS AS (
  SELECT AC01_MAIN_ACACNTNO AS X02KEY
        ,C01_CODE
        ,C01_SEQNO
        ,C01_CUST_NO
        ,CUS01_C01_B_CTY
        ,CUS01_C01_B_DST
        ,CUS01_C01_B_FAX
        ,CUS01_C01_B_PCOD
        ,CUS01_C01_B_STR
        ,CUS01_C01_B_TEL
        ,CUS01_C01_B_TWN
        ,CUS01_C01_B_TPY
        ,CUS01_C01_CHYASGOVR
        ,CUS01_C01_CHYASGRSN
        ,CUS01_C01_CORTAX  
        ,CUS01_C01_COUNTY
        ,CUS01_C01_CUS_CAT
        ,CUS01_C01_CUSTYP
        ,CUS01_C01_DIST
        ,CUS01_C01_EMPST
        ,CUS01_C01_EXEC
        ,CUS01_C01_FAXNBR
        ,CUS01_C01_FORADD
        ,CUS01_C01_FNAME
        ,CUS01_C01_FRQPAD
        ,CUS01_C01_INCSOU
        ,CUS01_C01_INITIALS
        ,CUS01_C01_M_STATUS
        ,CUS01_C01_MAILSHOT
        ,CUS01_C01_MOBTELNBR
        ,CUS01_C01_MR_ETC
        ,CUS01_C01_NATIONLTY
        ,CUS01_C01_NI_NUM
        ,CUS01_C01_NMECON
        ,CUS01_C01_NMECTIT
        ,CUS01_C01_NMETRD
        ,CUS01_C01_PMBSTA
        ,CUS01_C01_POSTCODE
        ,CUS01_C01_RES_CODE
        ,CUS01_C01_RINGIND
        ,CUS01_C01_SELF_CERT
        ,CUS01_C01_SEX_CODE
        ,CUS01_C01_STAFF
        ,CUS01_C01_STREET
        ,CUS01_C01_SURNAME
        ,CUS01_C01_TELEPHONE
        ,CUS01_C01_TELEPHONE2
        ,CUS01_C01_TOWN
        ,CUS01_C01_TPS_IND
        ,CUS01_C01_TRDCTY
        ,CUS01_C01_TRDDST
        ,CUS01_C01_TRDFAX
        ,CUS01_C01_TRDPCODE
        ,CUS01_C01_TRDSTR
        ,CUS01_C01_TRDTEL
        ,CUS01_C01_TRDTWN
        ,CUS01_C01_UKTAXPAYER_UK
        ,CUS01_C01_UNKNOWNADD
        ,CUS01_C01_ACORN_GRP
        ,CUS01_C01_AGE_GROUP
        ,C01_AMEND_DT
        ,CUS01_C01_BASIC
        ,C01_BIRTHDATE
        ,CUS01_C01_BUSTELEXT
        ,C01_CEASE_DT
        ,C01_CREATE_DT
        ,CUS01_C01_CMP_NO
        ,C01_DEATH_DT
        ,CUS01_C01_DEPENDS
        ,CUS01_C01_EMAILADD
        ,CUS01_C01_EMP_MTH
        ,CUS01_C01_EMP_YRS
        ,CUS01_C01_GALLOW
        ,CUS01_C01_INCPAD
        ,C01_MEM_CS_DT
        ,C01_MEM_ST_DT
        ,C01_NOTFY_DT
        ,CUS01_C01_OCCUPATION
        ,CUS01_C01_OUTGOINGS
        ,C01_PMBSTA_DT
        ,CUS01_C01_REGBON
        ,CUS01_C01_RES_MTH
        ,CUS01_C01_RES_YRS
        ,CUS01_C01_SOURCE_NO
        ,CUS01_C01_VAT_NO
        ,C01_MOR_CS_DT
        ,C01_MOR_ST_DT
        ,CUS01_C01_CMPNMELNG
        ,CUS01_C01_CMPTRDLNG
        ,CUS01_C01_BNKMTH
        ,CUS01_C01_BNKYRS
        ,CUS01_C01_NBRCRD
        ,CUS01_C01_RELYRS
        ,CUS01_C01_SEMCURYR
        ,CUS01_C01_SEMLSTYR
        ,CUS01_C01_SEMPRVYR
        ,CUS01_C01_BUILD_NAME
        ,CUS01_C01_BUILD_NUM
        ,CUS01_C01_BUSB_NAME
        ,CUS01_C01_BUSB_NUM
        ,CUS01_C01_COMMENT
        ,CUS01_C01_EMP_STATUS
        ,CUS01_C01_EMPLYR_CDE
        ,CUS01_C01_EMPLYE_NO
        ,C01_END_DT
        ,CUS01_C01_ESTA_1
        ,CUS01_C01_ESTA_2
        ,CUS01_C01_ESTA_3
        ,C01_ESTA_DT1
        ,C01_ESTA_DT2
        ,C01_ESTA_DT3
        ,CUS01_C01_MTH_INCOME
        ,CUS01_C01_MTH_OTIME
        ,CUS01_C01_P11D_IND
        ,CUS01_C01_RESIDENCY
        ,C01_START_DT
        ,CUS01_C01_TRDB_NAME
        ,CUS01_C01_TRDB_NUM
        ,CUS01_C01_VISUAL_IMP
        ,CUS01_C01_COM_METH1
        ,CUS01_C01_COM_METH2
        ,CUS01_C01_COM_METH3
        ,C01_COMUPD_DT
        ,CUS01_C01_DIS_CODE
        ,CUS01_C01_FORENAME2
        ,CUS01_C01_NM_SUFFIX
        ,CUS01_C01_LIFE_MAIL
        ,CUS01_C01_SSC_CODE
        ,CUS01_C01_BOR_INC
        ,CUS01_C01_BIRTH_PL
        ,CUS01_C01_TAX_ID
        ,CUS01_C01_NATLTYCOD1
        ,CUS01_C01_NATLTYCOD2
        ,C01_INCOR_DT
        ,CUS01_C01_PLOM_AMT
        ,CUS01_C01_CCJ_VAL
        ,CUS01_C01_IMP_A
        ,CUS01_C01_IMP_B
        ,CUS01_C01_IMP_V
        ,CUS01_C01_INC_USED
        ,CUS01_C01_BIRTH_CTRY
        ,C01_LTC_NOTFY
        ,C01_LTC_DT
        ,CUS01_C01_FRAUD_IND
        ,C01_IVA_DT
        ,CUS01_C01_IVA_AMT
        ,CUS01_C01_IVA_NME
        ,C01_BK_DTE
        ,CUS01_C01_BK_AMT
        ,CUS01_C01_BK_NME
        ,CUS01_TERM_ILL
        ,CUS01_C01_EMRKT
        ,CUS01_C01_TMRKT
        ,CUS01_C01_FSCS_STAT
        ,CUS01_C01_FSCS_REAS
        ,C01_FSCS_CHKDT
        ,CUS01_C01_HNW_IND
        ,CUS01_C01_PROF_IND
        ,C01_DEBTMAN
        ,C01_UKTAXRESON
        ,C01_USCITIZEN
        ,C01_RESTACTY1
        ,C01_RESTACTY2
        ,C01_RESTACTY3
        ,C01_FATCARPFLG
        ,CUS01_C01_TAX_ID1
        ,CUS01_C01_TAX_ID2
        ,CUS01_C01_TAX_ID3

        ,AC01MAIN_ACINCEPDATE
        ,FILRS_ACACNTNO
        ,ACPROCESSTATUS
        ,ACCLRDATE
        ,ACLCLUSAGE
        ,ACLACNTNO
        ,ACLSUBACNO
        ,ACLHLDERPOS
        ,ACLCLSEQNO
        ,ACLLASTCHNGDATE
        ,CLSEQNO
        ,CLALTCLNO
        ,CLIENT_CORADDRESSNO
        ,CLPDATEDECEASED
        ,CUCDACNTHLDERIND
        ,CUCDAPAVAILIND
        ,CUCDCLUSAGE
        ,CUCDGUARANTOR
        ,DATEOFDEATH
        ,DATEOFBIRTH
        ,CWCUSTOMERNO       
        ,FLLR_POSTCODE
        ,CLIENT_CORPOSTCODE
        ,FLLR_ADDRESS1
        ,CLIENTCORRADDR1
        ,GH1_CUSNO2
        ,CASE 
           WHEN CAST(CONCAT(
                            CAST(EXCEPTION_1 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_2 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_3 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_4 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_5 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_6 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_7 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_8 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_9 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_10 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_11 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_12 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_13 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_14 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_15 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_16 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_17 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_18 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_19 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_20 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_21 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_22 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_23 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_24 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_25 AS VARCHAR(MAX))
                           )AS NVARCHAR(MAX)) = ' ' THEN NULL 
           ELSE CAST(CONCAT(
                            CAST(EXCEPTION_1 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_2 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_3 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_4 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_5 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_6 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_7 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_8 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_9 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_10 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_11 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_12 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_13 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_14 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_15 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_16 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_17 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_18 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_19 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_20 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_21 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_22 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_23 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_24 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_25 AS VARCHAR(MAX))
                           )AS XML) 
         END AS X02_UDMH_EXCEPTION
    FROM MAP_EXCEPTIONS
)
  SELECT *
    FROM OUT_FIELDS





GO
/*
 * Author: Nikhil
 * Creation Date: 22/06/2015
 * Description: This SQL code applies business transformation for X02_C02 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version       Date           Developer                     Description
 *-----------------------------------------------------------------------------------------------------
    1.0        22/06/2015       Nikhil                    Based on Mapping Spec version v0.4
    2.0        02/07/2015       Vinodh Kumar P            Version MappingSpec_v0.5_26062015 (Fixed Indentation, removed * from filters and added fields only that was used down the pipeline,added MAP_DEFAULTS and OUT_FIELDS)
    3.0        21/07/2015       Vinodh Kumar P            Version Phoenix_RB_MappingSpec_v0.7
	4.0        28/08/2015       Vinodh Kumar P            Version Phoenix_RB_MappingSpec_v1.0(Fill NULL issue in CUS45_C02_RELATIONS, Converted AC01_MAIN filter to view)
 *-----------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.VW_X02_C02') AND type in (N'V'))
DROP VIEW dbo.VW_X02_C02
GO 
 
CREATE VIEW dbo.VW_X02_C02
AS
WITH
JOIN_WRITECRITERIA AS (
  SELECT O2646
        ,O2554
        ,O2315
        ,M6321
        ,AC01_MAIN.ACACNTNO AS X02KEY
    FROM TB_SRC_APPOCC AS APPOC
    INNER JOIN TB_SRC_AC01_MAIN AS AC01_MAIN 
      ON APPOC.M6321 = AC01_MAIN.ACACNTNO
),
MAP_FROMSRC AS (
  SELECT X02KEY
        ,O2646
        ,O2554
        ,O2315 AS C02_BIRTH_DT
    FROM JOIN_WRITECRITERIA AS J_WC
),
MAP_LUTS AS (
  SELECT M_FS.*
        ,TGT_RELATIONS AS CUS45_C02_RELATIONS
    FROM MAP_FROMSRC AS M_FS
    LEFT JOIN TB_XFM_LUT_RELATIONS
      ON O2646 = SRC_APPOCC_O2646
),
MAP_DEFAULTS AS (
  SELECT  M_LUTS.*
         ,'C02' AS C02_CODE
         ,1 AS CUS45_C02_SEC_NBR
         ,NULL AS CUS45_C02_FORENAME2 --Default, will be formatte by formation function
    FROM MAP_LUTS AS M_LUTS
),
LOG_EXCEPTIONS AS (
  SELECT M_DF.*
        ,CASE WHEN LEN(O2554) > 25 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C02','W:LENGTH-OVERUN',X02KEY,'CUS45_C02_FORENAME',O2554))
		 END AS EXCP_CUS45_C02_FORENAME
        ,CASE WHEN LEN(O2554) > 25 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_C02','W:LENGTH-OVERUN',X02KEY,'CUS45_C02_SURNAME',O2554))
         END AS EXCP_CUS45_C02_SURNAME
        ,CASE WHEN LEN(O2554) > 25 THEN SUBSTRING(O2554,1,25) ELSE O2554 
         END AS CUS45_C02_FORENAME
        ,CASE WHEN LEN(O2554) > 25 THEN SUBSTRING(O2554,1,25) ELSE O2554
         END AS CUS45_C02_SURNAME
    FROM MAP_DEFAULTS AS M_DF
),
OUT_FIELDS AS (
  SELECT X02KEY 
        ,C02_CODE
        ,CUS45_C02_FORENAME
        ,CUS45_C02_RELATIONS 
        ,CUS45_C02_SURNAME
        ,C02_BIRTH_DT
        ,CUS45_C02_SEC_NBR
        ,CUS45_C02_FORENAME2
        ,CASE
           WHEN CAST( CONCAT(
                              CAST(EXCP_CUS45_C02_FORENAME AS NVARCHAR(MAX))
                             ,CAST(EXCP_CUS45_C02_SURNAME AS NVARCHAR(MAX))
                            ) AS NVARCHAR(MAX)) = '' THEN NULL
           ELSE CAST( CONCAT(
                             CAST(EXCP_CUS45_C02_FORENAME AS NVARCHAR(MAX))
                             ,CAST(EXCP_CUS45_C02_SURNAME AS NVARCHAR(MAX))
                            ) AS XML)
         END AS X02_UDMH_EXCEPTION
    FROM LOG_EXCEPTIONS
)
  SELECT * 
    FROM OUT_FIELDS
GO
/*
 * Author: AKILA KESAVAN
 * Creation Date: 25/06/2015 
 * Description: This SQL code applies business transformation for X02_C03 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version        Date            Developer              Description
 *-----------------------------------------------------------------------------------------------------
    1.0         25/06/2015     AKILA KESAVAN           Based on Mapping Spec version v0.4_19062015
    2.0         06/07/2015     AKILA KESAVAN           Updated Base Query based on Review Comments
    3.0         13/07/2015     AKILA KESAVAN           Updated Base Query based on Review Comments
    4.0         17/08/2015     AKILA KESAVAN           Based on Mapping Spec version v0.9
    5.0         25/08/2015     AKILA KESAVAN           Updated Base Query based on Review Comments
    6.0         21/09/2015     AKILA KESAVAN           Based on Mapping Spec version v1.0
    7.0         30/10/2015     AKILA KESAVAN           Based on Mapping Spec version v1.2
    8.0         1/12/2015      AkILA KESAVAN           Based on Mapping Spec Version 1.3
 *-----------------------------------------------------------------------------------------------------
 */
IF  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[dbo].[VW_X02_C03]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_C03]
GO
CREATE VIEW [dbo].[VW_X02_C03]
AS
WITH
JOIN_WRITECRITERIA AS (
  SELECT X02_C01.AC01MAIN_ACINCEPDATE
        ,X02_C01.X02KEY AS AC01_MAIN_ACACNTNO
        ,X02_C01.ACLACNTNO
        ,X02_C01.ACLCLSEQNO
        ,X02_C01.ACLCLUSAGE
        ,X02_C01.ACLHLDERPOS
        ,X02_C01.ACLSUBACNO
        ,X02_C01.ACLLASTCHNGDATE
        ,X02_C01.FILRS_ACACNTNO AS FILRS_ACACNTNO
        ,X02_C01.FLLR_POSTCODE
        ,X02_C01.ACCLRDATE AS FILRS_ACCLRDATE
        ,X02_C01.ACPROCESSTATUS AS FLLR_ACPROCESSTATUS
        ,X02_C01.CLIENT_CORADDRESSNO
        ,X02_C01.CWCUSTOMERNO
        ,X02_C01.DATEOFDEATH
        ,X02_C01.DATEOFBIRTH
        ,X02_C01.CLALTCLNO
        ,X02_C01.CLPDATEDECEASED
        ,X02_C01.CLSEQNO
        ,X02_C01.CUCDACNTHLDERIND
        ,X02_C01.CUCDAPAVAILIND
        ,X02_C01.CUCDCLUSAGE
        ,X02_C01.CUCDGUARANTOR
        ,X02_C01.CLIENT_CORPOSTCODE
        ,X02_C01.FLLR_ADDRESS1
        ,X02_C01.CLIENTCORRADDR1
        ,X02_C01.GH1_CUSNO2
    FROM VW_X02_C01 AS X02_C01
),
JOIN_EXTRAS AS (
  SELECT J_WC.*
        ,CTR.SOURCE AS SOURCE
        ,CTR.WS_MIGR_DATE AS MIGR_DATE        
    FROM JOIN_WRITECRITERIA AS J_WC
   CROSS JOIN TB_UDMH_CTL AS CTR
),
MAP_FROMSRC AS (
  SELECT J_EX.CLIENT_CORADDRESSNO
        ,J_EX.SOURCE AS SOURCE
        ,J_EX.DATEOFBIRTH AS DATEOFBIRTH
        ,J_EX.DATEOFDEATH AS DATEOFDEATH
        ,J_EX.CLPDATEDECEASED AS CLPDATEDECEASED
        ,J_EX.GH1_CUSNO2
        ,J_EX.AC01_MAIN_ACACNTNO
        ,J_EX.FILRS_ACCLRDATE AS ACCLRDATE
        ,J_EX.FLLR_ACPROCESSTATUS AS FLLR_ACPROCESSTATUS
        ,J_EX.FILRS_ACACNTNO AS FLLR_ACACNTNO
        ,J_EX.MIGR_DATE AS MIGR_DATE
        ,J_EX.FLLR_POSTCODE AS FLLR_POSTCODE
        ,J_EX.FLLR_ADDRESS1 AS FLLR_ADDRESS1
        ,J_EX.CLIENT_CORPOSTCODE
        ,J_EX.CLIENTCORRADDR1 AS CLIENTCORRADDR1
        ,CASE J_EX.CUCDACNTHLDERIND WHEN 'Y' THEN 0 ELSE 4 END
         +
         ROW_NUMBER() OVER (
           PARTITION BY
             J_EX.FILRS_ACACNTNO
            ,J_EX.CUCDACNTHLDERIND
               ORDER BY
             CASE 
               WHEN J_EX.ACLHLDERPOS = 0 THEN 999
               WHEN J_EX.SOURCE = 'RED' AND J_EX.DATEOFDEATH IS NOT NULL THEN 999
               WHEN J_EX.SOURCE = 'BLUE' AND J_EX.CLPDATEDECEASED IS NOT NULL THEN 999
               ELSE J_EX.ACLHLDERPOS
             END  ASC
        ,CASE J_EX.SOURCE
           WHEN 'RED' THEN J_EX.DATEOFDEATH
           WHEN 'BLUE' THEN J_EX.CLPDATEDECEASED
         END DESC        
         ) AS CUS02_C03_ACC_LINK
        ,J_EX.ACLLASTCHNGDATE AS C03_AMEND_DT
        ,CASE J_EX.CUCDGUARANTOR WHEN 'Y' THEN J_EX.AC01MAIN_ACINCEPDATE ELSE NULL END AS C03_DTEGAR_DT
        ,CASE J_EX.CUCDGUARANTOR WHEN 'Y' THEN 'Y' ELSE NULL END AS CUS02_C03_GARUNL
        ,CASE J_EX.CUCDACNTHLDERIND
           WHEN 'Y' THEN
             CASE
              WHEN J_EX.GH1_CUSNO2 IS NULL THEN 'SOL' ELSE 'JNT' END
           ELSE
             CASE
               WHEN J_EX.CUCDGUARANTOR = 'Y' THEN 'GUA'
               WHEN J_EX.ACLCLUSAGE = 'PA' THEN 'POA'
               WHEN J_EX.ACLCLUSAGE = 'EX' THEN 'EXE'
               WHEN J_EX.ACLCLUSAGE = 'AD' THEN 'ADM'
               ELSE 'OTH'
             END
         END AS CUS02_C03_RELTYP        
        ,J_EX.AC01MAIN_ACINCEPDATE AS C03_ACC_ST_DT
        ,CASE J_EX.SOURCE
           WHEN 'BLUE' THEN J_EX.CLPDATEDECEASED
           WHEN 'RED' THEN J_EX.DATEOFDEATH
         END AS C03_ACC_CS_DT
        ,CASE J_EX.FLLR_ACPROCESSTATUS
           WHEN 3 THEN 'R'
           WHEN 4 THEN 'R'
           ELSE 'L'
         END AS FILTR_M01     
    FROM JOIN_EXTRAS AS J_EX
),
MAP_DEPENDENTS_01 AS (
  SELECT MS.*
        ,CASE
           WHEN MS.CUS02_C03_ACC_LINK = 1 THEN 'N'
           ELSE
             CASE
               WHEN MS.CLIENT_CORADDRESSNO IS NOT NULL
                AND MS.FLLR_ACACNTNO <> MS.CLIENT_CORADDRESSNO
                AND (     dbo.FN_FUZZY_COMPARE( MS.FLLR_POSTCODE) <> dbo.FN_FUZZY_COMPARE( MS.CLIENT_CORPOSTCODE) 
                      OR  dbo.FN_FUZZY_COMPARE( MS.FLLR_ADDRESS1) <> dbo.FN_FUZZY_COMPARE( MS.CLIENTCORRADDR1)) THEN 'Y'
               ELSE 'N'
              END
         END AS  CUS02_C03_SEPCORADR
        ,CASE
           WHEN MS.CUS02_C03_ACC_LINK = 1 THEN 'N'
           ELSE
             CASE
               WHEN MS.CLIENT_CORADDRESSNO IS NOT NULL THEN 'Y'
               ELSE 'N'
              END
         END AS  CUS02_C03_INV_STMT
        ,CASE
           WHEN MS.CUS02_C03_ACC_LINK <= 4
             AND CASE MS.SOURCE
                 WHEN 'RED' THEN MS.DATEOFDEATH
                 WHEN 'BLUE' THEN MS.CLPDATEDECEASED
             END IS NOT NULL THEN 'DED'
                 ELSE MS.CUS02_C03_RELTYP
         END AS CUS02_C03_HOLD_CAP
        ,CASE
           WHEN MS.CUS02_C03_ACC_LINK <= 4 AND  MS.GH1_CUSNO2 IS NOT NULL THEN MS.CUS02_C03_ACC_LINK ELSE NULL END AS CUS02_C03_EXP_CUST
        ,CASE MS.FILTR_M01
           WHEN 'R' THEN MS.ACCLRDATE
           ELSE NULL
         END AS M01_REDEEM
    FROM MAP_FROMSRC AS MS
),
MAP_DEPENDENT_02 AS (
  SELECT MD_01.*
        ,CASE
           WHEN MD_01.M01_REDEEM < dbo.FN_FIRST_OF_MONTH ( MD_01.MIGR_DATE ) THEN 'REDEEMED' + CONVERT( VARCHAR( 6 ), MD_01.M01_REDEEM, 112 ) 
           ELSE NULL 
         END AS  CUS02_C03_EQUIFAX_RF
    FROM MAP_DEPENDENTS_01 AS MD_01
),
MAP_DEFAULTS AS (
  SELECT MD.*
        ,'C03' AS C03_CODE
        ,NULL AS CUS02_C03_AMTGAR
        ,NULL AS CUS02_C03_AMTRNTPYM
        ,NULL AS CUS02_C03_BENIFIC
        ,NULL AS C03_CERT_DT
        ,NULL AS CUS02_C03_CUST_NO
        ,NULL AS C03_DECERT_DT
        ,NULL AS CUS02_C03_DECERT_WHY
        ,NULL AS C03_DTETEN_DT
        ,'M' AS CUS02_C03_M_OR_I
        ,NULL AS CUS02_C03_MANAGT
        ,NULL AS CUS02_C03_PERSHA
        ,NULL AS CUS02_C03_PG_SIGN
        ,NULL AS CUS02_C03_REQ_SIG
        ,NULL AS CUS02_C03_RNTPYMFRQ
        ,NULL AS CUS02_C03_SEC_NBR
        ,NULL AS CUS02_C03_SEP_ADDR
        ,NULL AS CUS02_C03_STATUS_IND
        ,NULL AS CUS02_C03_TAX_STAT
        ,NULL AS C03_TAX_TD_S
        ,NULL AS C03_TAX_TD
        ,NULL AS CUS02_C03_TRMTEN
        ,NULL AS CUS02_C03_VOTER
        ,NULL AS CUS02_C03_WAVCCASTAT
        ,NULL AS CUS02_C03_PRTNT_SEQNUM
        ,NULL AS CUS02_C03_EQUIFAX_UN
        ,NULL AS CUS02_C03_INVONL_USR
        ,NULL AS CUS02_C03_PPRSTM_REQ
    FROM MAP_DEPENDENT_02 AS MD
),
OUT_FIELDS AS (
  SELECT AC01_MAIN_ACACNTNO AS X02KEY
        ,C03_CODE        
        ,CUS02_C03_ACC_LINK
        ,C03_AMEND_DT
        ,CUS02_C03_AMTGAR
        ,CUS02_C03_AMTRNTPYM
        ,CUS02_C03_BENIFIC
        ,C03_CERT_DT
        ,CUS02_C03_CUST_NO
        ,C03_DECERT_DT
        ,CUS02_C03_DECERT_WHY
        ,C03_DTEGAR_DT
        ,C03_DTETEN_DT    
        ,CUS02_C03_GARUNL
        ,CUS02_C03_INV_STMT
        ,CUS02_C03_M_OR_I
        ,CUS02_C03_PERSHA
        ,CUS02_C03_MANAGT
        ,CUS02_C03_PG_SIGN
        ,CUS02_C03_RELTYP
        ,CUS02_C03_REQ_SIG
        ,CUS02_C03_RNTPYMFRQ
        ,CUS02_C03_SEC_NBR
        ,CUS02_C03_SEP_ADDR
        ,CUS02_C03_SEPCORADR
        ,CUS02_C03_STATUS_IND
        ,CUS02_C03_TAX_STAT
        ,C03_TAX_TD_S
        ,C03_TAX_TD
        ,CUS02_C03_TRMTEN
        ,CUS02_C03_VOTER
        ,CUS02_C03_EQUIFAX_RF
        ,CUS02_C03_HOLD_CAP
        ,C03_ACC_ST_DT
        ,C03_ACC_CS_DT
        ,CUS02_C03_WAVCCASTAT
        ,CUS02_C03_PRTNT_SEQNUM
        ,CUS02_C03_EQUIFAX_UN
        ,CUS02_C03_EXP_CUST
        ,CUS02_C03_INVONL_USR
        ,CUS02_C03_PPRSTM_REQ
    FROM MAP_DEFAULTS
) 
  SELECT *
  FROM OUT_FIELDS



GO
/*
 * Author: AKILA
 * Creation Date: 15/07/2015
 * Description: This SQL code applies business transformation for X02_F01 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version         Date             Developer                   Description
 *-----------------------------------------------------------------------------------------------------
    1.0         15/07/2015           Sowmya                  Based on Mapping Spec version v0.6_03072015
    2.0         24/09/2015           Akila Kesavan           Based on Mapping Spec version v1.0
    3.0         29/09/2015           Akila Kesavan           Updated Base Query based in Review Comments
    4.0         29/10/2015           Akila Kesavan           Updated Base Query Based on Mapping Spec Version 1.1
    5.0         04/12/2015           Akila Kesavan           Added PAYMENTELEMENTS<CurrentAtMigr>filter                   
 *-----------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_F01]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_F01]
GO

CREATE VIEW [dbo].[VW_X02_F01]
AS
WITH
FILTER_BLUE AS (
  SELECT AC01_MAIN.ACACNTNO
        ,AC01_MAIN.ACACTCODE
        ,FMA.FMAOVERUNDERIND AS FMA_FMAOVERUNDERIND
        ,FMA.FMAOVERUNDERAMOUNT AS FMA_FMAOVERUNDERAMOUNT
        ,FMA.FMAEFDATETO AS FMA_FMAEFDATETO
        ,FMA.FMAEFDATEFROM AS FMA_FMAEFDATEFROM
        ,AC01.ACPROCESSTATUS AS AC01_ACPROCESSTATUS
        ,AC01.ACSUBACNO AS AC01_ACSUBACNO
        ,AC01.ACACNTNO AS AC01_ACACNTNO
        ,PAYE_CURR.PAYEREGFREQCODE AS PAYE_PAYEREGFREQCODE
        ,PAYE_CURR.PAYENEXTDUEDATE AS PAYE_PAYENEXTDUEDATE
        ,PAYE_CURR.PAYEFIRSTAMOUNT AS PAYE_PAYEFIRSTAMOUNT
        ,PAYE_CURR.PAYEREGAMOUNT AS PAYE_PAYEREGAMOUNT
        ,PAYE_CURR.PAYEFIRSTDATE AS PAYE_PAYEFIRSTDATE
        ,NULL AS PAYO_POSUBACNO
        ,NULL AS PAYO_POAMOUNT
        ,NULL AS PAYO_POENDDATE
        ,NULL AS PAYO_POSTARTDATE
        ,NULL AS PAYO_POOVERIDETYPE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_FUNDSMOVESADJUSTMENTS AS FMA
      ON AC01_MAIN.ACACNTNO = FMA.FMAACNTNO
   INNER JOIN VW_FILTER_PAYMENTELEMENTS_CURRENTATMIGR AS PAYE_CURR    
      ON FMA.FMAACNTNO = PAYE_CURR.PAYEACNTNO
   INNER JOIN TB_SRC_AC01 AS AC01
      ON PAYE_CURR.PAYEACNTNO = AC01.ACACNTNO
     AND PAYE_CURR.PAYESUBACNO = AC01.ACSUBACNO
   CROSS JOIN TB_UDMH_CTL AS CTL
   WHERE CTL.SOURCE = 'BLUE'
     AND ( FMA.FMAEFDATEFROM IS NULL
      OR FMA.FMAEFDATEFROM >= CTL.WS_MIGR_DATE )
     AND FMA.FMACANCELEDDATE IS NULL
     AND AC01.ACPROCESSTATUS = 2
     AND AC01.ACGACTTYPE = 'M'
     AND ( FMA.FMAOVERUNDERIND = 'U'
      OR  FMA.FMAOVERUNDERIND = 'O'
     AND PAYE_CURR.PAYEALOWOVERPAY = 'Y' )
),
FILTER_RED_UNITARY AS (
  SELECT AC01_MAIN.ACACNTNO
        ,AC01_MAIN.ACACTCODE
        ,NULL AS FMA_FMAOVERUNDERIND
        ,NULL AS FMA_FMAOVERUNDERAMOUNT
        ,NULL AS FMA_FMAEFDATETO
        ,NULL AS FMA_FMAEFDATEFROM
        ,AC01.ACPROCESSTATUS AS AC01_ACPROCESSTATUS
        ,AC01.ACSUBACNO AS AC01_ACSUBACNO
        ,AC01.ACACNTNO AS AC01_ACACNTNO
        ,PAYE_CURR.PAYEREGFREQCODE AS PAYE_PAYEREGFREQCODE
        ,PAYE_CURR.PAYENEXTDUEDATE AS PAYE_PAYENEXTDUEDATE
        ,PAYE_CURR.PAYEFIRSTAMOUNT AS PAYE_PAYEFIRSTAMOUNT
        ,PAYE_CURR.PAYEREGAMOUNT AS PAYE_PAYEREGAMOUNT
        ,PAYE_CURR.PAYEFIRSTDATE AS PAYE_PAYEFIRSTDATE
        ,PAYO.POSUBACNO AS PAYO_POSUBACNO
        ,PAYO.POAMOUNT AS PAYO_POAMOUNT
        ,PAYO.POENDDATE AS PAYO_POENDDATE
        ,PAYO.POSTARTDATE AS PAYO_POSTARTDATE
        ,PAYO.POOVERIDETYPE AS PAYO_POOVERIDETYPE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_PAYOVERIDES AS PAYO
      ON AC01_MAIN.ACACNTNO = PAYO.POACNTNO
   INNER JOIN VW_FILTER_PAYMENTELEMENTS_CURRENTATMIGR AS PAYE_CURR
      ON PAYO.POACNTNO = PAYE_CURR.PAYEACNTNO
   INNER JOIN TB_SRC_AC01 AS AC01
      ON PAYE_CURR.PAYEACNTNO = AC01.ACACNTNO
     AND PAYE_CURR.PAYESUBACNO = AC01.ACSUBACNO
   CROSS JOIN TB_UDMH_CTL AS CTL
   WHERE ( PAYO.POENDDATE IS NULL
      OR PAYO.POENDDATE >= CTL.WS_MIGR_DATE )
     AND PAYO.POOVERIDEPURPOSE = 'O'
     AND PAYO.POSCHEDULED = 'Y'
     AND PAYO.POSUBACNO = '0'
     AND PAYE_CURR.PAYEALOWOVERPAY = 'Y'
     AND AC01.ACPROCESSTATUS = 2
     AND AC01.ACGACTTYPE = 'M'
),
FILTER_RED_SUBACNT AS (
  SELECT AC01_MAIN.ACACNTNO
        ,AC01_MAIN.ACACTCODE
        ,NULL AS FMA_FMAOVERUNDERIND
        ,NULL AS FMA_FMAOVERUNDERAMOUNT
        ,NULL AS FMA_FMAEFDATETO
        ,NULL AS FMA_FMAEFDATEFROM
        ,AC01.ACPROCESSTATUS AS AC01_ACPROCESSTATUS
        ,AC01.ACSUBACNO AS AC01_ACSUBACNO
        ,AC01.ACACNTNO AS AC01_ACACNTNO
        ,PAYE_CURR.PAYEREGFREQCODE AS PAYE_PAYEREGFREQCODE
        ,PAYE_CURR.PAYENEXTDUEDATE AS PAYE_PAYENEXTDUEDATE
        ,PAYE_CURR.PAYEFIRSTAMOUNT AS PAYE_PAYEFIRSTAMOUNT
        ,PAYE_CURR.PAYEREGAMOUNT AS PAYE_PAYEREGAMOUNT
        ,PAYE_CURR.PAYEFIRSTDATE AS PAYE_PAYEFIRSTDATE
        ,PAYO.POSUBACNO AS PAYO_POSUBACNO
        ,PAYO.POAMOUNT AS PAYO_POAMOUNT
        ,PAYO.POENDDATE AS PAYO_POENDDATE
        ,PAYO.POSTARTDATE AS PAYO_POSTARTDATE
        ,PAYO.POOVERIDETYPE AS PAYO_POOVERIDETYPE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_PAYOVERIDES AS PAYO
      ON AC01_MAIN.ACACNTNO = PAYO.POACNTNO
   INNER JOIN VW_FILTER_PAYMENTELEMENTS_CURRENTATMIGR AS PAYE_CURR
      ON PAYO.POACNTNO = PAYE_CURR.PAYEACNTNO
     AND PAYO.POSUBACNO = PAYE_CURR.PAYESUBACNO
   INNER JOIN TB_SRC_AC01 AS AC01
      ON PAYE_CURR.PAYEACNTNO = AC01.ACACNTNO
     AND PAYE_CURR.PAYESUBACNO = AC01.ACSUBACNO
   CROSS JOIN TB_UDMH_CTL AS CTL
   WHERE ( PAYO.POENDDATE IS NULL
      OR PAYO.POENDDATE >= CTL.WS_MIGR_DATE )
     AND PAYO.POOVERIDEPURPOSE = 'O'
     AND PAYO.POSCHEDULED = 'Y'
     AND PAYO.POSUBACNO >= 1
     AND PAYE_CURR.PAYEALOWOVERPAY = 'Y'
     AND AC01.ACPROCESSTATUS = 2
     AND AC01.ACGACTTYPE = 'M'
),
JOIN_WRITECRITERIA AS (
  SELECT *
    FROM FILTER_BLUE
   UNION ALL
  SELECT *
    FROM FILTER_RED_UNITARY
   UNION ALL
  SELECT *
    FROM FILTER_RED_SUBACNT
),
JOIN_EXTRA AS (  
  SELECT J_WC.*
        ,CTL.SOURCE
        ,CTL.WS_MIGR_DATE
        ,J_WC.FMA_FMAOVERUNDERIND AS FMA_FMAOVERUNDERINDD
        ,ACNTYPES.ACTPAYTYPE AS ACNTYPES_ACTPAYTYPE       
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT OUTER JOIN TB_SRC_ACNTYPES AS ACNTYPES
      ON J_WC.ACACTCODE = ACNTYPES.ACTCODE   
   CROSS JOIN TB_UDMH_CTL AS CTL
),
MAP_FROMSRC AS (
  SELECT J_EX.*
        ,J_EX.AC01_ACSUBACNO AS F01_SUB_ACC
        ,CASE J_EX.SOURCE
           WHEN 'BLUE' THEN J_EX.FMA_FMAEFDATETO
           WHEN 'RED' THEN J_EX.PAYO_POENDDATE
         END AS F01_END_DT
        ,CASE J_EX.SOURCE
           WHEN 'BLUE' THEN 'FLX01'
           WHEN 'RED' THEN
             CASE
               WHEN J_EX.PAYO_POSUBACNO = 0 THEN 'FLX01'
               WHEN J_EX.PAYO_POSUBACNO >= 1 THEN 'FLX10'
             END
         END AS FLX98_F01_SOURCE_ID
        ,CASE J_EX.SOURCE
           WHEN 'BLUE' THEN J_EX.FMA_FMAEFDATEFROM
           WHEN 'RED' THEN J_EX.PAYO_POSTARTDATE
         END AS F01_START_DT
        ,CASE J_EX.SOURCE
           WHEN 'RED' THEN
             CASE J_EX.PAYO_POOVERIDETYPE
               WHEN 'FX' THEN 'F'
               WHEN 'OP' THEN 'A'
             END
          WHEN 'BLUE' THEN 'A'
         END AS FLX98_F01_PYM_TYPE
    FROM JOIN_EXTRA AS J_EX
),
FILTER_MAP_DEPENDENT_02 AS (
  SELECT SUM ( A01.MAR02_A01_CMS )
           OVER (
          PARTITION BY
            A01.X02KEY
         ) AS UNITARY_CMS
        ,A01.X02KEY
        ,A01.A01_SEQNO
        ,A01.MAR02_A01_CMS
    FROM TB_X02_A01 AS A01
   GROUP BY  X02KEY, MAR02_A01_CMS,A01_SEQNO
),
JOIN_DEPENDENT_02 AS (
  SELECT MS.*
        ,MD_02.UNITARY_CMS
        ,MD_02.MAR02_A01_CMS
    FROM MAP_FROMSRC AS MS
   INNER JOIN FILTER_MAP_DEPENDENT_02 AS MD_02
      ON MS.AC01_ACACNTNO = MD_02.X02KEY
     AND MS.AC01_ACSUBACNO = MD_02.A01_SEQNO
),
MAP_DEPENDENT_03 AS (
  SELECT MD_02.*
        ,CASE MD_02.SOURCE
           WHEN 'BLUE' THEN MD_02.FMA_FMAOVERUNDERAMOUNT * ( MD_02.MAR02_A01_CMS / MD_02.UNITARY_CMS )
           WHEN 'RED' THEN
             CASE
               WHEN MD_02.PAYO_POSUBACNO = 0 THEN MD_02.PAYO_POAMOUNT * ( MD_02.MAR02_A01_CMS / MD_02.UNITARY_CMS )
               WHEN MD_02.PAYO_POSUBACNO >= 1 THEN MD_02.PAYO_POAMOUNT
             END
         END AS FLX98_F01_AMT_ARR
    FROM JOIN_DEPENDENT_02 AS MD_02
),
MAP_SIGN AS (
  SELECT MD.* 
        ,CASE MD.SOURCE
           WHEN 'BLUE' THEN
             CASE MD.FMA_FMAOVERUNDERINDD
               WHEN 'O' THEN '+'
               WHEN 'U' THEN '-'
               ELSE ' '
             END
           WHEN 'RED' THEN '+'
           ELSE ' '
         END AS F01_SIGN
    FROM MAP_DEPENDENT_03 AS MD
),
MAP_DEPENDENT_04 AS (
  SELECT MD.*
        ,CASE MD.SOURCE
           WHEN 'BLUE' THEN
             CASE MD.F01_SIGN
               WHEN '-' THEN 'U'
               WHEN '+' THEN 'O'
             END
           WHEN 'RED' THEN
             CASE MD.PAYO_POOVERIDETYPE
               WHEN 'OP' THEN '+'
               WHEN 'FX' THEN
                 CASE
                   WHEN PAYO_POSUBACNO = 0
                    AND MD.UNITARY_CMS <= MD.FLX98_F01_AMT_ARR THEN 'O'
                   WHEN PAYO_POSUBACNO = 0
                    AND MD.UNITARY_CMS > MD.FLX98_F01_AMT_ARR THEN 'U'
                   WHEN PAYO_POSUBACNO > 0
                    AND MD.MAR02_A01_CMS <= MD.FLX98_F01_AMT_ARR THEN 'O'
                   WHEN PAYO_POSUBACNO > 0
                    AND MD.MAR02_A01_CMS > MD.FLX98_F01_AMT_ARR THEN 'U'
                 END
              END             
         END AS FLX98_F01_ARR_TYPE
    FROM MAP_SIGN AS MD
),
MAP_DEFALUTS AS (
  SELECT MD_03.*
        ,'F01' AS F01_CODE
        ,NULL AS F01_EXH_SENT_DT
        ,NULL AS F01_EXP_SENT_DT
        ,NULL AS FLX98_F01_PAYAMT_PCT        
        ,NULL AS FLX98_F01_REQ_LETTER
        ,NULL AS F01_TARG_DT
    FROM MAP_DEPENDENT_04 AS MD_03
),    
OUT_FIELDS AS (
  SELECT ACACNTNO AS X02KEY
        ,F01_CODE
        ,F01_SUB_ACC
        ,F01_SIGN
        ,FLX98_F01_AMT_ARR
        ,FLX98_F01_ARR_TYPE
        ,F01_END_DT
        ,F01_EXH_SENT_DT
        ,F01_EXP_SENT_DT
        ,FLX98_F01_PAYAMT_PCT
        ,FLX98_F01_PYM_TYPE
        ,FLX98_F01_REQ_LETTER
        ,FLX98_F01_SOURCE_ID
        ,F01_START_DT
        ,F01_TARG_DT
    FROM MAP_DEFALUTS 
)
  SELECT *
    FROM OUT_FIELDS         

GO
/*
 * Author: Akila kesavan
 * Creation Date: 29/09/2015 
 * Description: This SQL code applies business transformation for X02_F03 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version        Date           Developer                     Description
 *-----------------------------------------------------------------------------------------------------
    1.0        29/09/2015    AKILA KESAVAN           Based on Mapping Spec version v1.0
    2.0        10/01/2015    AKILA KESAVAN           Updated Review Comments
    3.0        30/10/2015    AKILA KESAVAN           Based on Mapping Spec version v1.2
 *-----------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_F03]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_F03]
GO

CREATE VIEW [dbo].[VW_X02_F03]
AS
WITH
FILTER_PAYMENTELEMENTS_CURR AS (
  SELECT AC01_MAIN.ACACNTNO
        ,PAY.PAYEFIRSTDATE
        ,PAY.PAYEFIRSTREGDATE
        ,PAY.PAYELASTCHNGBY
        ,PAY.PAYESUBACNO
        ,PAY.PAYELASTCHNGDATE
        ,PAY.PAYELASTDATE
        ,PAY.PAYEREGAMOUNT
        ,PAY.PAYEACNTNO
        ,LAG( PAY.PAYEFIRSTDATE,1 ) OVER (
           PARTITION BY
             PAY.PAYEACNTNO
            ,PAY.PAYESUBACNO
           ORDER BY
             PAY.PAYEFIRSTDATE
         ) AS PREV_PAYEFIRSTDATE
        ,LAG( PAY.PAYEFIRSTREGDATE,1 ) OVER (
           PARTITION BY
             PAY.PAYEACNTNO
            ,PAY.PAYESUBACNO
           ORDER BY
             PAY.PAYEFIRSTDATE
         ) AS PREV_PAYEFIRSTREGDATE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_PAYMENTELEMENTS AS PAY
      ON AC01_MAIN.ACACNTNO = PAY.PAYEACNTNO
   WHERE PAY.PAYESCHEDULED = 'Y'
     AND PAY.PAYENEXTDUEDATE IS NOT NULL
),
FILTER_PAYMENTELEMENTS_DTE AS (
  SELECT C.*
        ,DATEDIFF( DAY,C.PAYEFIRSTDATE,C.PAYEFIRSTREGDATE ) AS UDMH_DAYS_WITHIN
        ,DATEDIFF( DAY,(SELECT MAX(PREV) FROM (VALUES (C.PREV_PAYEFIRSTDATE), (C.PREV_PAYEFIRSTREGDATE)) AS V(PREV)),(SELECT MIN(CURR) FROM (VALUES (C.PAYEFIRSTDATE), (C.PAYEFIRSTREGDATE)) AS V(CURR))) AS UDMH_DAYS_BETWEEN
    FROM FILTER_PAYMENTELEMENTS_CURR AS C
),
FILTER_PAYMENTELEMENTS_HOLS AS (
  SELECT P_DTE.*
    FROM FILTER_PAYMENTELEMENTS_DTE AS P_DTE
   WHERE P_DTE.UDMH_DAYS_WITHIN > 31
      OR P_DTE.UDMH_DAYS_BETWEEN > 31
),
JOIN_WRITECRITERIA AS (
  SELECT PAY_HOLS.*
    FROM FILTER_PAYMENTELEMENTS_HOLS AS PAY_HOLS
),
JOIN_EXTRA AS (
  SELECT J_WC.*
    FROM JOIN_WRITECRITERIA AS J_WC
),
JOIN_LUTS AS (
  SELECT J_EX.*
        ,USERCODE.TGT_USERCODE AS TGT_USERCODE
    FROM JOIN_EXTRA AS J_EX
    LEFT OUTER JOIN TB_XFM_LUT_USERCODE AS USERCODE
      ON J_EX.PAYELASTCHNGBY = USERCODE.SRC_SUMMIT_USERCODE
),
MAP_FROMSRC AS (
  SELECT J_LT.*
        ,J_LT.PAYESUBACNO AS F03_SUB_ACC_1
        ,J_LT.PAYELASTCHNGDATE AS F03_AMEND_DT
        ,CASE
           WHEN J_LT.UDMH_DAYS_BETWEEN > 31 THEN CONVERT(VARCHAR(6),dbo.FN_DATE_PREV_MONTH ( J_LT.PAYEFIRSTDATE ),112)
           WHEN J_LT.UDMH_DAYS_WITHIN > 31 THEN CONVERT(VARCHAR(6), dbo.FN_DATE_PREV_MONTH ( J_LT.PAYEFIRSTREGDATE ),112)
         END AS MAR45_F03_END_MTH_YR
        ,CASE 
           WHEN J_LT.UDMH_DAYS_BETWEEN > 31 THEN
             CONVERT ( VARCHAR(6)
                    , dbo.FN_DATE_NEXT_MONTH ( 
                        LAG(J_LT.PAYELASTDATE, 1) OVER(
                           PARTITION BY
                             J_LT.PAYEACNTNO
                            ,J_LT.PAYESUBACNO
                           ORDER BY 
                             J_LT.PAYEFIRSTDATE) ),112)
           WHEN J_LT.UDMH_DAYS_WITHIN > 31 THEN
             CONVERT ( VARCHAR(6),dbo.FN_DATE_NEXT_MONTH ( J_LT.PAYEFIRSTDATE ),112)
         END AS MAR45_F03_ST_MTH_YR        
        ,J_LT.TGT_USERCODE AS MAR45_F03_USERCODE    
    FROM JOIN_LUTS AS J_LT
),
MAP_DEPENDENT AS (
  SELECT MS.*
        ,(DATEDIFF(MONTH,CAST(MS.MAR45_F03_ST_MTH_YR + '01' AS DATE),CAST(MS.MAR45_F03_END_MTH_YR + '01' AS DATE))+1) * MS.PAYEREGAMOUNT AS MAR45_F03_HOL_AMOUNT
    FROM MAP_FROMSRC AS MS
),
MAP_DEFAULTS AS (
  SELECT MD.*
        ,'F03' AS F03_CODE
        ,'N' AS MAR45_F03_REPEAT        
        ,NULL AS F03_BAND_END_DT
        ,NULL AS F03_CEASE_DT
        ,'D' AS MAR45_F03_HOL_TYPE
        ,'N' AS MAR45_F03_REQ_LETTER
        ,NULL AS MAR45_F03_REAS_HOL
    FROM MAP_DEPENDENT AS MD
),
MAP_EXCEPTION AS (
  SELECT MDF.*
        ,CASE  WHEN LEN(MDF.F03_SUB_ACC_1) > 2 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_F03','W:LENGTH-OVERRUN',MDF.ACACNTNO,'F03_SUB_ACC',F03_SUB_ACC_1))
          END AS EXCEPTION_1
        ,CASE WHEN LEN(MDF.F03_SUB_ACC_1) > 2 THEN LEFT(MDF.F03_SUB_ACC_1,2) ELSE F03_SUB_ACC_1
		  END AS F03_SUB_ACC
    FROM MAP_DEFAULTS AS MDF
),
OUT_FIELDS AS (
  SELECT ACACNTNO AS X02KEY
        ,F03_CODE
        ,F03_SUB_ACC
        ,MAR45_F03_REPEAT
        ,F03_AMEND_DT
        ,F03_BAND_END_DT
        ,F03_CEASE_DT
        ,MAR45_F03_END_MTH_YR
        ,MAR45_F03_HOL_AMOUNT
        ,MAR45_F03_ST_MTH_YR
        ,MAR45_F03_HOL_TYPE
        ,MAR45_F03_REQ_LETTER
        ,MAR45_F03_REAS_HOL
        ,MAR45_F03_USERCODE
        ,CASE 
           WHEN CAST((CAST(EXCEPTION_1 AS VARCHAR(MAX)))AS NVARCHAR(MAX)) = ' ' THEN NULL 
           ELSE CAST(CAST(EXCEPTION_1 AS VARCHAR(MAX))AS XML) 
         END AS X02_UDMH_EXCEPTION
    FROM MAP_EXCEPTION
)
SELECT *
 FROM OUT_FIELDS
GO
/*
 * Author: Sowmya S V
 * Creation Date: 01/10/2015
 * Description: This SQL code applies business transformation for X02_M07 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0        01/10/2015       Sowmya S V              Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_M07]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_M07]
GO 
CREATE VIEW [dbo].[VW_X02_M07]
AS

WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
       ,'M07' AS M07_CODE
       ,NULL AS M07_CREATE_DT
       ,NULL AS PAD02_M07_NOTE_TYPE
       ,0 AS PAD02_M07_PAGE_NO
       ,'A' AS PAD02_M07_STATUS
       ,NULL AS PAD02_M07_TEXT_L1
       ,NULL AS PAD02_M07_TEXT_L2
       ,NULL AS PAD02_M07_TEXT_L3
       ,NULL AS PAD02_M07_TEXT_L4
       ,NULL AS PAD02_M07_TEXT_L5
       ,NULL AS PAD02_M07_TEXT_L6
       ,NULL AS PAD02_M07_TEXT_L7
       ,NULL AS PAD02_M07_TEXT_L8
       ,NULL AS PAD02_M07_TEXT_L9
       ,NULL AS PAD02_M07_TEXT_L10
       ,NULL AS PAD02_M07_TEXT_L11
       ,NULL AS PAD02_M07_TEXT_L12
       ,NULL AS PAD02_M07_USER
       ,'X02' AS PAD02_M07_SOURCE
       ,'Y' AS PAD02_M07_TYPE
       ,'S' AS PAD02_M07_SECIND
       ,NULL AS UDMH_NOTE_SRC
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,M07_CODE
        ,M07_CREATE_DT
        ,PAD02_M07_NOTE_TYPE
        ,PAD02_M07_PAGE_NO
        ,PAD02_M07_STATUS
        ,PAD02_M07_TEXT_L1
        ,PAD02_M07_TEXT_L2
        ,PAD02_M07_TEXT_L3
        ,PAD02_M07_TEXT_L4
        ,PAD02_M07_TEXT_L5
        ,PAD02_M07_TEXT_L6
        ,PAD02_M07_TEXT_L7
        ,PAD02_M07_TEXT_L8
        ,PAD02_M07_TEXT_L9
        ,PAD02_M07_TEXT_L10
        ,PAD02_M07_TEXT_L11
        ,PAD02_M07_TEXT_L12
        ,PAD02_M07_USER
        ,PAD02_M07_SOURCE
        ,PAD02_M07_TYPE
        ,PAD02_M07_SECIND
        ,UDMH_NOTE_SRC
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
/*
* Author: Gireesh G
* Creation Date: 22/09/2015
* Description: This SQL code applies business transformation for X02_F05 target type.
* Revision History:
*-----------------------------------------------------------------------------------------------------
* Version         Date           Developer                     Description
*-----------------------------------------------------------------------------------------------------
    1.0         22/09/2015        Gireesh                 Based on Mapping Spec version v1.0
    2.0         13/10/2015        Gireesh                 to fix bugs #77747 &  #77748
*-----------------------------------------------------------------------------------------------------
*/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_F05]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_F05]
GO 
 
CREATE VIEW [dbo].[VW_X02_F05]
AS 
WITH
FILTER_HLDLNKS_MAP_OR_MISSING AS (
  SELECT HLDLNKS.HLDLTODATE AS HLDLTODATE
        ,WRNCDE_LUT.TGT_MAP  AS TGT_MAP
        ,WRNCDE_LUT.TGT_WRNCDE AS TGT_WRNCDE
        ,CTRL.WS_MIGR_DATE AS WS_MIGR_DATE
        ,HLDLNKS.HLDLFROMDATE
        ,HLDLNKS.HLDLACNTNO AS X02KEY
    FROM TB_SRC_HLDLNKS AS HLDLNKS
   CROSS JOIN TB_UDMH_CTL AS CTRL
    LEFT OUTER JOIN TB_XFM_LUT_WRNCDE AS WRNCDE_LUT
      ON HLDLNKS.HLDLCODE = WRNCDE_LUT.SRC_HLDLCODE
   WHERE ( HLDLNKS.HLDLTODATE >= CTRL.WS_MIGR_DATE
      OR HLDLNKS.HLDLTODATE IS NULL)
     AND ( WRNCDE_LUT.TGT_MAP = 'Y'
      OR WRNCDE_LUT.TGT_MAP IS NULL)
),
FILTER_HLDLNKS_MISSING AS (
  SELECT X02KEY 
         ,(SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_F05','MISSING',X02KEY,'TGT_MAP',TGT_MAP)) AS EXCEPTION_1
    FROM FILTER_HLDLNKS_MAP_OR_MISSING
   WHERE TGT_MAP IS NULL
),
FILTER_HLDLNKS_MAP AS (
  SELECT *
    FROM FILTER_HLDLNKS_MAP_OR_MISSING
   WHERE TGT_MAP IS NOT NULL
),
FILTER_PAYHOLIDAY_ALL AS (
  SELECT WRNCDE_LUT.TGT_WRNCDE AS TGT_WRNCDE
        ,F03.MAR45_F03_END_MTH_YR AS MAR45_F03_END_MTH_YR
        ,F03.MAR45_F03_ST_MTH_YR AS MAR45_F03_ST_MTH_YR
        ,WRNCDE_LUT.TGT_MAP  AS TGT_MAP
        ,CTRL.WS_MIGR_DATE AS WS_MIGR_DATE
        ,ROW_NUMBER() OVER (
           PARTITION BY
             F03.X02KEY
           ORDER BY
             MAR45_F03_END_MTH_YR DESC
          ) AS RN
        ,F03.X02KEY
    FROM VW_X02_F03 AS F03
   CROSS JOIN TB_UDMH_CTL AS CTRL
    LEFT OUTER JOIN TB_XFM_LUT_WRNCDE AS WRNCDE_LUT
      ON WRNCDE_LUT.SRC_OTHER = 'PAYHOL'
   WHERE dbo.FN_END_OF_MONTH(CAST(CAST(F03.MAR45_F03_END_MTH_YR AS VARCHAR(6))+'01' AS DATE) ) >= CTRL.WS_MIGR_DATE
),
FILTER_PAYHOLIDAY_LOWESTSUB AS (
  SELECT *
    FROM FILTER_PAYHOLIDAY_ALL
   WHERE RN = 1
),
FILTER_LIVINGACNT_ADDR_ALL AS (
  SELECT WRNCDE_LUT.TGT_WRNCDE AS TGT_WRNCDE
        ,ROW_NUMBER() OVER (
           PARTITION BY
             M07.X02KEY
           ORDER BY
             (SELECT 1) 
         ) AS RN
        ,M07.X02KEY AS X02KEY
    FROM VW_X02_M07 AS M07
    LEFT OUTER JOIN TB_XFM_LUT_WRNCDE AS WRNCDE_LUT
      ON WRNCDE_LUT.SRC_OTHER = 'LIVACNTADDR'
   WHERE M07.UDMH_NOTE_SRC IN ('CLIENTWISE-POSTALADDRESS-LIVING','SUMMIT-CLIENTSLIVADDRESS','SUMMIT-AC01-ADDRESS')
),
FILTER_LIVINGACNT_ADDR_ONE AS (
  SELECT *
    FROM FILTER_LIVINGACNT_ADDR_ALL
   WHERE RN = 1
),
FILTER_UPPERBORROW AS (
  SELECT WRNCDE_LUT.TGT_WRNCDE AS TGT_WRNCDE
        ,M07.X02KEY AS X02KEY
    FROM VW_X02_M07 AS M07
    LEFT OUTER JOIN TB_XFM_LUT_WRNCDE AS WRNCDE_LUT
      ON WRNCDE_LUT.SRC_OTHER = 'UPPERBORROW'
   WHERE M07.UDMH_NOTE_SRC = 'SUMMIT-UPPER-BRW'
),
FILTER_AA31D_TIERS AS (
  SELECT AA31D.CANCELDATE
        ,AA32P.INSTLDATE
        ,AA32P.TIER_STATUS
        ,AA31D.ARNGSTATUS
        ,AA31D.ARNGNO
        ,AA31D.ACNTNO
        ,AC01_MAIN.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
    INNER JOIN TB_SRC_AA31D AS AA31D
      ON AC01_MAIN.ACACNTNO = AA31D.ACNTNO
    INNER JOIN VW_FILTER_AA32P_TIERCHANGE AS AA32P
      ON AA31D.ARNGNO = AA32P.ARNGNO
    INNER JOIN TB_SRC_AC01 AS AC01
      ON AA31D.ACNTNO = AC01.ACACNTNO
   WHERE ( AA31D.CANCELDATE IS NULL
      OR AA31D.CANCELDATE > AA31D.LASTCHECKDATE )
     AND ( AC01.ACCLRDATE IS NULL
      OR AC01.ACCLRDATE >= AA32P.INSTLDATE )
),
FILTER_MAX_D AS (
  SELECT AA31D.CANCELDATE
        ,AA31D.ENDDATE
        ,TIERCHANGE.TIER_INSTLDATE_END
        ,TIERCHANGE.ARNGNO
    FROM TB_SRC_AA31D AS AA31D
    LEFT OUTER JOIN VW_FILTER_AA32P_TIERCHANGE AS TIERCHANGE
      ON AA31D.ARNGNO = TIERCHANGE.ARNGNO 
),     
FILTER_MAX_D_ALL AS (
  SELECT ARNGNO,( 
         SELECT MAX(D)
           FROM (VALUES (MAX_D.CANCELDATE), ( MAX_D.ENDDATE ), (
                  MAX_D.TIER_INSTLDATE_END  )) AS VAL(D)) AS MAX_D
    FROM FILTER_MAX_D AS MAX_D
),
FILTER_FUTRBROKENARRANGE_ALL AS (
  SELECT AA31D.*
        ,MAX_D.MAX_D
        ,ROW_NUMBER () OVER(
            PARTITION BY
              AA31D.ACNTNO
             ,AA31D.ARNGNO
            ORDER BY
             ( MAX_D.MAX_D)
             ) AS RN
        ,CTRL.WS_MIGR_DATE AS WS_MIGR_DATE
        ,NULL AS TGT_WRNCDE
    FROM FILTER_AA31D_TIERS AS AA31D
   CROSS JOIN TB_UDMH_CTL AS CTRL
    LEFT OUTER JOIN TB_XFM_LUT_WRNCDE AS WRNCDE_LUT
      ON WRNCDE_LUT.SRC_OTHER = 'FUTRBROKENARRANGE'
    LEFT OUTER JOIN VW_FILTER_AA32P_TIERCHANGE AS AA32P_TIERCHANGE
      ON AA31D.ARNGNO = AA32P_TIERCHANGE.ARNGNO
    LEFT OUTER JOIN FILTER_MAX_D_ALL AS MAX_D
      ON AA31D.ARNGNO = MAX_D.ARNGNO
   WHERE AA31D.TIER_STATUS IN ('CURRENT','FUTURE')
     AND AA31D.ARNGSTATUS = 'D'
     AND AA32P_TIERCHANGE.INSTLDATE > CTRL.WS_MIGR_DATE
),
FILTER_FUTRBROKENARRANGE_ONE AS (
  SELECT FF_ALL.*
    FROM FILTER_FUTRBROKENARRANGE_ALL AS FF_ALL
   WHERE RN = 1
),
FILTER_MAYBEDECD_ALL AS (
  SELECT CWCUSTOMER.*
        ,ROW_NUMBER() OVER (
           PARTITION BY
             AC01_MAIN.ACACNTNO
           ORDER BY
             CLIENTS.CLSEQNO) AS RN
             ,AC01_MAIN.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_ACNTLNKS AS ACNTLNKS
      ON AC01_MAIN.ACACNTNO = ACNTLNKS.ACLACNTNO
   INNER JOIN TB_SRC_CLIENTS AS CLIENTS
      ON ACNTLNKS.ACLCLSEQNO = CLIENTS.CLSEQNO
    JOIN TB_SRC_CWCUSTOMER AS CWCUSTOMER
      ON CLIENTS.CLALTCLNO = CWCUSTOMER.CUSTOMERNO
   WHERE CWCUSTOMER.ISDECEASED = 1
     AND CWCUSTOMER.DATEOFDEATH IS NULL
),
FILTER_MAYBEDECD_ONE AS (
  SELECT *
    FROM FILTER_MAYBEDECD_ALL
   WHERE RN = 1
),
JOIN_WRITECRITERIA AS (
  SELECT 'HLDLNKS' AS UDMH_WRN_SOURCE
        ,HLDLTODATE
        ,TGT_MAP
        ,TGT_WRNCDE
        ,WS_MIGR_DATE
        ,NULL AS ARNGNO
        ,HLDLFROMDATE
        ,X02KEY
        ,NULL AS MAR45_F03_END_MTH_YR
        ,NULL AS MAR45_F03_ST_MTH_YR
        ,NULL AS MAX_D
    FROM FILTER_HLDLNKS_MAP
   UNION ALL
  SELECT 'PAYHOL' AS UDMH_WRN_SOURCE
        ,NULL AS HLDLTODATE
        ,TGT_MAP
        ,TGT_WRNCDE
        ,WS_MIGR_DATE
        ,NULL AS ARNGNO
        ,NULL AS HLDLFROMDATE
        ,X02KEY
        ,MAR45_F03_END_MTH_YR
        ,MAR45_F03_ST_MTH_YR
        ,NULL AS MAX_D
    FROM FILTER_PAYHOLIDAY_LOWESTSUB
   UNION ALL
  SELECT 'LIVACNTADDR' AS UDMH_WRN_SOURCE
        ,NULL AS HLDLTODATE
        ,NULL AS TGT_MAP
        ,TGT_WRNCDE
        ,NULL AS WS_MIGR_DATE
        ,NULL AS ARNGNO
        ,NULL AS HLDLFROMDATE
        ,X02KEY
        ,NULL AS MAR45_F03_END_MTH_YR
        ,NULL AS MAR45_F03_ST_MTH_YR
        ,NULL AS MAX_D
    FROM FILTER_LIVINGACNT_ADDR_ONE
   UNION ALL
  SELECT 'UPPERBORROW' AS UDMH_WRN_SOURCE
        ,NULL AS HLDLTODATE
        ,NULL AS TGT_MAP
        ,TGT_WRNCDE
        ,NULL AS WS_MIGR_DATE
        ,NULL AS ARNGNO
        ,NULL AS HLDLFROMDATE
        ,X02KEY
        ,NULL AS MAR45_F03_END_MTH_YR
        ,NULL AS MAR45_F03_ST_MTH_YR
        ,NULL AS MAX_D
    FROM FILTER_UPPERBORROW
  UNION ALL
 SELECT 'FUTRBROKENARRANGE' AS UDMH_WRN_SOURCE
       ,NULL AS HLDLTODATE
       ,NULL AS TGT_MAP
       ,TGT_WRNCDE
       ,NULL AS WS_MIGR_DATE
       ,ARNGNO
       ,NULL AS HLDLFROMDATE
       ,X02KEY
       ,NULL AS MAR45_F03_END_MTH_YR
       ,NULL AS MAR45_F03_ST_MTH_YR
       ,MAX_D
   FROM FILTER_FUTRBROKENARRANGE_ONE
  UNION ALL
 SELECT 'MAYBEDECD' AS UDMH_WRN_SOURCE
       ,NULL AS HLDLTODATE
       ,NULL AS TGT_MAP
       ,NULL AS TGT_WRNCDE
       ,NULL AS WS_MIGR_DATE
       ,NULL AS ARNGNO
       ,NULL AS HLDLFROMDATE
       ,X02KEY
       ,NULL AS MAR45_F03_END_MTH_YR
       ,NULL AS MAR45_F03_ST_MTH_YR
       ,NULL AS MAX_D
   FROM FILTER_MAYBEDECD_ONE
),
JOIN_EXTRA AS (
  SELECT J_WC.*
    FROM JOIN_WRITECRITERIA AS J_WC
),
JOIN_LUTS AS (
  SELECT J_E.*
    FROM JOIN_EXTRA AS J_E 
),
MAP_FROMSRC AS (
  SELECT J_LUTS.TGT_WRNCDE AS WRN03_F05_WRN_CDE 
        ,CASE  J_LUTS.UDMH_WRN_SOURCE
           WHEN 'HLDLNKS' THEN HLDLTODATE
           WHEN 'PAYHOL' THEN dbo.FN_END_OF_MONTH(CAST(CAST(J_LUTS.MAR45_F03_END_MTH_YR AS VARCHAR(6))+'01' AS DATE)  )
           WHEN 'LIVACNTADDR' THEN NULL
           WHEN 'UPPERBORROW' THEN NULL
           WHEN 'FUTRBROKENARRANGE' THEN  MAX_D
           WHEN 'MAYBEDECD' THEN NULL
         END AS F05_CEASE_DT
        ,CASE J_LUTS.UDMH_WRN_SOURCE
           WHEN 'HLDLNKS' THEN J_LUTS.HLDLFROMDATE
           WHEN 'PAYHOL' THEN dbo.FN_FIRST_OF_MONTH(CAST(CAST(J_LUTS.MAR45_F03_ST_MTH_YR AS VARCHAR(6))+'01' AS DATE) )
           WHEN 'LIVACNTADDR' THEN J_LUTS.WS_MIGR_DATE
           WHEN 'UPPERBORROW' THEN J_LUTS.WS_MIGR_DATE
           WHEN 'FUTRBROKENARRANGE' THEN J_LUTS.WS_MIGR_DATE
           WHEN 'MAYBEDECD' THEN J_LUTS.WS_MIGR_DATE
         END AS F05_EFF_DT
        ,J_LUTS.*
    FROM JOIN_LUTS AS J_LUTS
),
MAP_DEFAULTS AS (
  SELECT M_S.*
        ,'F05' AS F05_CODE
        ,NULL AS WRN03_F05_SUBACC
        ,NULL AS F05_CUST_NO
    FROM MAP_FROMSRC AS M_S
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,F05_CODE
        ,WRN03_F05_SUBACC
        ,WRN03_F05_WRN_CDE
        ,F05_CEASE_DT
        ,F05_CUST_NO
        ,F05_EFF_DT
        ,NULL AS X02_UDMH_EXCEPTION
    FROM MAP_DEFAULTS
UNION ALL
  SELECT X02KEY
        ,'F05' AS F05_CODE
        ,NULL AS WRN03_F05_SUBACC
        ,NULL AS WRN03_F05_WRN_CDE
        ,NULL AS F05_CEASE_DT
        ,NULL AS F05_CUST_NO
        ,NULL AS F05_EFF_DT
        ,CASE 
           WHEN CAST((CAST(EXCEPTION_1 AS VARCHAR(MAX)))AS NVARCHAR(MAX)) = ' ' THEN NULL 
           ELSE CAST(CAST(EXCEPTION_1 AS VARCHAR(MAX))AS XML) 
         END AS X02_UDMH_EXCEPTION
    FROM FILTER_HLDLNKS_MISSING
)
  SELECT *
    FROM OUT_FIELDS
GO
/*
 * Author: Kavana, GC
 * Creation Date: 07/07/2015
 * Description: This SQL code applies business transformation for X02_FH1 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0         07/07/2015      KAVANA GC               Based on Mapping Spec version v0.6
    2.0         05/11/2015      KAVANA GC               Based on Mapping Spec version v1.3
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_FH1]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_FH1]
GO 
CREATE VIEW [dbo].[VW_X02_FH1]
AS
WITH
MAP_FROMSRC AS (
  SELECT LEFT(CTL.SOURCE,3) AS FH1_SCODE
        ,CONVERT(VARCHAR(8),DATEADD(DAY,-1,[WS_MIGR_DATE]),112) AS FH1_DATE
        ,'SRC:'+RTRIM(CTL.SOURCE)+' TAG:'+CTL.ALL_RUNTAG+' ACT:'+CONVERT(VARCHAR(8),GETDATE(),112)+' LGC:'+CONVERT(VARCHAR(8),CTL.WS_MIGR_DATE,112) AS FH1_TITLE
        ,CTL.SOURCE AS FH1_SOURCE
        ,0 AS FH1_BATCH
    FROM TB_UDMH_CTL AS CTL
),
MAP_DEFAULTS AS (
  SELECT *
        ,'FH1' AS FH1_CODE
        ,'UFSS' AS FH1_DEST
    FROM MAP_FROMSRC
),
OUT_FIELDS AS (
  SELECT 0 AS X02KEY
        ,FH1_CODE
        ,FH1_SCODE
        ,FH1_DATE
        ,FH1_TITLE
        ,FH1_SOURCE
        ,FH1_DEST
        ,FH1_BATCH
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
/*
 * Author: KAVANA GC
 * Creation Date: 2/07/2015 
 * Description: This SQL code applies business transformation for X02_FT1 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version        Date         Developer            Description
 *-----------------------------------------------------------------------------------------------------
    1.0           2/07/2015   KAVANA GC            Based on Mapping Spec version v0.5
    2.0          28/08/2015   KAVANA GC            Based on Mapping Spec version v1.0
    3.0          18/11/2015   KAVANA GC            Changed X02Key value
 *-----------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_FT1]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_FT1]
GO 
 
CREATE VIEW [dbo].[VW_X02_FT1]
AS
WITH
MAP_FROMSRC AS (
  SELECT SUM(GT1.GT1_TOTREC) + 2 AS FT1_TOTREC
        ,SUM(GT1.GT1_TOTADV)     AS FT1_TOTADV
        ,SUM(GT1.GT1_TOTIBB)     AS FT1_TOTIBB
        ,SUM(GT1.GT1_TOTCUR)     AS FT1_TOTCUR
        ,SUM( GT1.GT1_TOTCOV)    AS FT1_TOTCOV
    FROM TB_X02_GT1 AS GT1
),
MAP_DEFAULTS AS (
  SELECT M_SRC.*
        ,'FT1' AS FT1_CODE
    FROM MAP_FROMSRC AS M_SRC
),
MAP_SIGN AS (
  SELECT M_DEF.*
       ,CASE 
          WHEN FT1_TOTIBB > 0 THEN '+'
          WHEN FT1_TOTIBB < 0 THEN '-'
          ELSE ' '
        END AS FT1_SIGN1
       ,CASE 
          WHEN FT1_TOTCUR  > 0 THEN '+'
          WHEN FT1_TOTCUR < 0 THEN '-'
          ELSE ' '
        END AS FT1_SIGN2
    FROM MAP_DEFAULTS AS M_DEF
),
OUT_FIELDS AS (
  SELECT 'A' AS X02KEY
        ,FT1_CODE
        ,FT1_TOTREC
        ,FT1_TOTADV
        ,FT1_SIGN1
        ,FT1_TOTIBB
        ,FT1_SIGN2
        ,FT1_TOTCUR
        ,FT1_TOTCOV
    FROM MAP_SIGN 
)
  SELECT * 
    FROM OUT_FIELDS

GO
/*
 * Author: Akila Kesavan
 * Creation Date: 16/6/2015 
 * Description: This SQL code applies business transformation for X02_GH1 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version         Date          Developer                 Description
 *-----------------------------------------------------------------------------------------------------
    1.0         16/06/2015    Akila Kesavan           Based on Mapping Spec version v0.4_19062015
    2.0         03/07/2015    Akila Kesavan           Updated Base Query based on Review Comments
    3.0         13/07/2015    Akila Kesavan           Updated Base Query based on Review Comments
    4.0         25/08/2015    Akila Kesavan           Updated Base Query based on Review Comments
    5.0         22/09/2015    Akila Kesavan           Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[dbo].[VW_X02_GH1]') AND type IN (N'V'))
DROP VIEW [dbo].[VW_X02_GH1]
GO
CREATE VIEW [dbo].[VW_X02_GH1]
AS
WITH
FILTER_C01_CUST_NO1 AS (
  SELECT C01.C01_CUST_NO
        ,X02KEY
    FROM TB_X02_C01 AS C01
  WHERE C01.C01_SEQNO = 1
),
FILTER_C01_CUST_NO2 AS (
  SELECT C01.C01_CUST_NO
        ,X02KEY
    FROM TB_X02_C01 AS C01
  WHERE C01.C01_SEQNO = 2
),
FILTER_C01_CUST_NO3 AS (
  SELECT C01.C01_CUST_NO
        ,X02KEY
    FROM TB_X02_C01 AS C01
  WHERE C01.C01_SEQNO = 3
),
FILTER_C01_CUST_NO4 AS (
  SELECT C01.C01_CUST_NO
        ,X02KEY
    FROM TB_X02_C01 AS C01
  WHERE C01.C01_SEQNO = 4
),
FILTER_C01_GUA_CUS1 AS (
  SELECT C01.C01_CUST_NO
        ,X02KEY
    FROM TB_X02_C01 AS C01
  WHERE C01.C01_SEQNO = 5
),
FILTER_C01_GUA_CUS2 AS (
  SELECT C01.C01_CUST_NO
        ,X02KEY
    FROM TB_X02_C01 AS C01
  WHERE C01.C01_SEQNO = 6
),
FILTER_C01_GUA_CUS3 AS (
  SELECT C01.C01_CUST_NO
        ,X02KEY
    FROM TB_X02_C01 AS C01
  WHERE C01.C01_SEQNO = 7
),
FILTER_C01_GUA_CUS4 AS (
  SELECT C01.C01_CUST_NO
        ,X02KEY
    FROM TB_X02_C01 AS C01
  WHERE C01.C01_SEQNO = 8
),
FILTER_I01 AS(
  SELECT COUNT(1) AS I01_COUNT
        ,I01.X02KEY
    FROM TB_X02_I01 AS I01
   GROUP BY X02KEY
),
FILTER_GH1_BOOK_FUNDER AS(
  SELECT BOOK_FUNDER.TGT_FUNDER
        ,CBM.POOL_ACCOUNT_NO
    FROM TB_XFM_LUT_BOOK_FUNDER AS BOOK_FUNDER
   CROSS JOIN TB_UDMH_CTL AS CTRL
    LEFT OUTER JOIN TB_SRC_CBM_POOL_CONTROL AS CBM
      ON CAST(CAST(CBM.POOL_YEAR_MONTH AS VARCHAR(8)) AS DATE) = dbo.FN_END_OF_PREV_MONTH(CTRL.WS_MIGR_DATE)
      AND CBM.POOL_ACCOUNT_SOURCE = CASE CTRL.SOURCE
                                      WHEN 'RED' THEN 1
                                      WHEN 'BLUE' THEN 2
                                    END    
     AND COALESCE(CBM.POOL_BOND_ID,'N/A') = COALESCE(BOOK_FUNDER.SRC_BONDID,'N/A')
),
FILTER_GH1_BOOK AS(
  SELECT BOOK.TGT_BOOK
        ,CBM.POOL_ACCOUNT_NO
    FROM TB_XFM_LUT_BOOK_FUNDER AS BOOK
   CROSS JOIN TB_UDMH_CTL AS CTRL
    LEFT OUTER JOIN TB_SRC_CBM_POOL_CONTROL AS CBM
      ON CAST(CAST(CBM.POOL_YEAR_MONTH AS VARCHAR(8)) AS DATE) = dbo.FN_END_OF_PREV_MONTH(CTRL.WS_MIGR_DATE)
      AND CBM.POOL_ACCOUNT_SOURCE = CASE CTRL.SOURCE
                                      WHEN 'RED' THEN 1
                                      WHEN 'BLUE' THEN 2
                                    END    
     AND COALESCE(CBM.POOL_BOND_ID,'N/A') = COALESCE(BOOK.SRC_BONDID,'N/A')
   WHERE BOOK.XFM_SOURCE = CTRL.SOURCE
),
JOIN_WRITECRITERIA AS (
  SELECT AC01_MAIN.ACACNTNO AS AC01MAIN_ACACNTNO
        ,AC01_MAIN.ACSUBACNO AS AC01MAIN_ACSUBACNO 
        ,AC01_1STL_LSTR.ACCLRDATE AS ACC_ACCLRDATE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_1STL_LSTR 
      ON AC01_MAIN.ACACNTNO = AC01_1STL_LSTR.ACACNTNO
),
JOIN_EXTRA AS (
  SELECT J_WC.*       
        ,CTR.SOURCE AS SOURCE
        ,CTR.WS_MIGR_DATE AS MIGR_DATE
        ,CUS1.C01_CUST_NO AS CUS1
        ,CUS2.C01_CUST_NO AS CUS2
        ,CUS3.C01_CUST_NO AS CUS3
        ,CUS4.C01_CUST_NO AS CUS4
        ,GUA1.C01_CUST_NO AS GUA1
        ,GUA2.C01_CUST_NO AS GUA2
        ,GUA3.C01_CUST_NO AS GUA3
        ,GUA4.C01_CUST_NO AS GUA4
        ,I01.I01_COUNT AS I01_COUNT
    FROM JOIN_WRITECRITERIA AS J_WC
   CROSS JOIN TB_UDMH_CTL AS CTR   
    LEFT OUTER JOIN FILTER_C01_CUST_NO1 AS CUS1 
      ON J_WC.AC01MAIN_ACACNTNO  = CUS1.X02KEY
    LEFT OUTER JOIN FILTER_C01_CUST_NO2 AS CUS2
      ON J_WC.AC01MAIN_ACACNTNO  = CUS2.X02KEY
    LEFT OUTER JOIN FILTER_C01_CUST_NO3 AS CUS3
      ON J_WC.AC01MAIN_ACACNTNO  = CUS3.X02KEY
    LEFT OUTER JOIN FILTER_C01_CUST_NO4 AS CUS4
      ON J_WC.AC01MAIN_ACACNTNO  = CUS4.X02KEY
    LEFT OUTER JOIN FILTER_C01_GUA_CUS1 AS GUA1
      ON J_WC.AC01MAIN_ACACNTNO  = GUA1.X02KEY
    LEFT OUTER JOIN FILTER_C01_GUA_CUS2 AS GUA2
      ON J_WC.AC01MAIN_ACACNTNO  = GUA2.X02KEY
    LEFT OUTER JOIN FILTER_C01_GUA_CUS3 AS GUA3
      ON J_WC.AC01MAIN_ACACNTNO  = GUA3.X02KEY
    LEFT OUTER JOIN FILTER_C01_GUA_CUS4 AS GUA4
      ON J_WC.AC01MAIN_ACACNTNO = GUA4.X02KEY
    LEFT OUTER JOIN  FILTER_I01 AS I01
      ON J_WC.AC01MAIN_ACACNTNO = I01.X02KEY
),
JOIN_LUTS AS (
  SELECT J_EX.*
        ,HAL.TGT_HIST_ACNO1
        ,HAL.TGT_HIST_ACNO2
        ,FILTER_BOOK_FUNDER.TGT_FUNDER
        ,FILTER_BOOK.TGT_BOOK
    FROM JOIN_EXTRA AS J_EX
    LEFT OUTER JOIN FILTER_GH1_BOOK_FUNDER AS FILTER_BOOK_FUNDER
      ON J_EX.AC01MAIN_ACACNTNO = FILTER_BOOK_FUNDER.POOL_ACCOUNT_NO
    LEFT OUTER JOIN FILTER_GH1_BOOK AS FILTER_BOOK
      ON J_EX.AC01MAIN_ACACNTNO = FILTER_BOOK.POOL_ACCOUNT_NO   
    LEFT OUTER JOIN TB_XFM_LUT_HISTORIC_ACNO AS HAL
      ON HAL.SRC_ACNO = J_EX.AC01MAIN_ACACNTNO
),
MAP_FROMSRC AS (
  SELECT JL.AC01MAIN_ACACNTNO AS GH1_ACCNO
        ,JL.CUS1 AS GH1_CUSNO1 
        ,JL.CUS2 AS GH1_CUSNO2
        ,JL.CUS3 AS GH1_CUSNO3
        ,JL.CUS4 AS GH1_CUSNO4
        ,CASE WHEN JL.ACC_ACCLRDATE IS NULL THEN 'L'ELSE 'R' END AS GH1_STATUS
        ,JL.TGT_FUNDER AS GH1_FUNDER
        ,JL.TGT_BOOK AS GH1_BOOK
        ,JL.GUA1 AS GH1_GUA_CUS1
        ,JL.GUA2 AS GH1_GUA_CUS2
        ,JL.GUA3 AS GH1_GUA_CUS3
        ,JL.GUA4 AS GH1_GUA_CUS4
        --,JL.I01_COUNT AS GH1_NUMINS
        ,JL.TGT_HIST_ACNO1 AS GH1_ACCNO1
        ,JL.TGT_HIST_ACNO2 AS GH1_ACCNO2
        ,JL.AC01MAIN_ACACNTNO AS AC01MAIN_ACACNTNO
    FROM JOIN_LUTS AS JL

),
MAP_DEFAULTS AS (
  SELECT MS.*
        ,'GH1' AS GH1_CODE
        ,NULL AS GH1_GROUP
        ,'RES'AS GH1_LONCAT
        ,NULL AS GH1_LONSUB
        ,1    AS GH1_NUMSEC
        ,NULL AS GH1_UFSSACC
        ,NULL AS GH1_ACCNO3
        ,NULL AS GH1_ACCNO4
        ,NULL AS GH1_NUMINS
    FROM MAP_FROMSRC AS MS
),
OUT_FIELDS AS (
  SELECT AC01MAIN_ACACNTNO AS X02KEY
        ,GH1_CODE
        ,GH1_ACCNO
        ,GH1_CUSNO1
        ,GH1_CUSNO2
        ,GH1_CUSNO3
        ,GH1_CUSNO4
        ,GH1_STATUS
        ,GH1_FUNDER
        ,GH1_BOOK
        ,GH1_GROUP
        ,GH1_LONCAT
        ,GH1_LONSUB
        ,GH1_NUMSEC
        ,GH1_GUA_CUS1
        ,GH1_GUA_CUS2
        ,GH1_GUA_CUS3
        ,GH1_GUA_CUS4
        ,GH1_NUMINS
        ,GH1_UFSSACC
        ,GH1_ACCNO1
        ,GH1_ACCNO2
        ,GH1_ACCNO3
        ,GH1_ACCNO4
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS
GO
/*
 * Author: KAVANA GC
 * Creation Date: 2/07/2015 
 * Description: This SQL code applies business transformation for X02_GT1 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version        Date         Developer            Description
 *-----------------------------------------------------------------------------------------------------
    1.0           2/07/2015   KAVANA GC            Based on Mapping Spec version v0.5
    2.0          28/08/2015   KAVANA GC            Based on Mapping Spec version v1.0
    3.0          19/11/2015   KAVANA GC            Changed X02Key Value
 *-----------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_GT1]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_GT1]
GO 
 
CREATE VIEW [dbo].[VW_X02_GT1]
AS
WITH 
JOIN_WRITECRITERIA AS (
  SELECT AC01_MAIN.ACACNTNO 
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_1STL_LSTR 
      ON AC01_MAIN.ACACNTNO = AC01_1STL_LSTR.ACACNTNO
),
JOIN_EXTRA AS (
  SELECT MAR02_A01_ADVANCE
        ,MAR02_A01_INTBEARBAL
        ,MAR02_A01_CURRENTBAL
        ,INS01_I01_INS_COVER
        ,J_W.ACACNTNO AS X02KEY
    FROM JOIN_WRITECRITERIA AS J_W
    LEFT OUTER JOIN TB_X02_A01 AS A01
     ON J_W.ACACNTNO=A01.X02KEY
    LEFT OUTER JOIN TB_X02_GH1 AS GH1
      ON A01.X02KEY = GH1.X02KEY
    LEFT OUTER JOIN TB_X02_I01 AS I01
      ON I01.X02KEY = GH1.X02KEY
),
MAP_FROMSRC AS (
  SELECT J_E.X02KEY
        ,COUNT(1) AS GT1_TOTREC
        ,SUM(J_E.MAR02_A01_ADVANCE)    AS GT1_TOTADV
        ,SUM(J_E.MAR02_A01_INTBEARBAL) AS GT1_TOTIBB
        ,SUM(J_E.MAR02_A01_CURRENTBAL) AS GT1_TOTCUR
        ,SUM(J_E.INS01_I01_INS_COVER)  AS GT1_TOTCOV
    FROM JOIN_EXTRA AS J_E
   GROUP BY J_E.X02KEY
),
MAP_DEFAULTS AS (
  SELECT M_SRC.* 
        ,'GT1' AS GT1_CODE
    FROM  MAP_FROMSRC AS M_SRC
),
MAP_SIGN AS (
  SELECT M_DEP.*
        ,CASE 
           WHEN GT1_TOTIBB > 0 THEN '+'
           WHEN GT1_TOTIBB < 0 THEN '-'
           ELSE ' '
         END AS GT1_SIGN1
        ,CASE 
           WHEN GT1_TOTCUR > 0 THEN '+'
           WHEN GT1_TOTCUR < 0 THEN '-'
           ELSE ' '
         END AS GT1_SIGN2
    FROM MAP_DEFAULTS AS M_DEP
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,GT1_CODE
        ,GT1_TOTREC
        ,GT1_TOTADV
        ,GT1_SIGN1
        ,GT1_TOTIBB
        ,GT1_SIGN2
        ,GT1_TOTCUR
        ,GT1_TOTCOV
    FROM MAP_SIGN
)
  SELECT *
    FROM OUT_FIELDS
GO
/*
 * Author: Kavana GC
 * Creation Date: 06/07/2015
 * Description: This SQL code applies business transformation for X02_I01 target type.
 * Revision History:
 *------------------------------------------------------------------------------------------------------------------------
 * Version      Date            Developer                   Description
 *------------------------------------------------------------------------------------------------------------------------
    1.0        06/07/2015       Kavana GC                   Based on Mapping Spec version v0.6
    2.0        15/07/2015       Kavana GC                   Based on Mapping Spec version v0.7
    3.0        18/08/2015       Kavana GC                   Based on Mapping Spec version v0.8
    4.0        21/08/2015       Kavana GC                   Based on Mapping Spec version v0.9
    5.0        03/11/2015       Kavana GC                   Based on Mapping Spec version v1.2
    6.0        08/12/2015       Aishwarya Rao               Amended the code for eliminating NULLs in X02KEY;
                                                            modified the join condition for TB_XFM_LUT_INSURANCE_PRODUCT
    7.0        10/12/2015       Kavana GC                   modified the filters
 *------------------------------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_I01]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_I01]
GO 
 
CREATE VIEW [dbo].[VW_X02_I01]
AS
WITH 
FILTER_M01 AS (
  SELECT AC01_FIRSTLIVE_LASTREDEEM.ACPROCESSTATUS
        ,AC01MAIN.ACACNTNO
    FROM TB_SRC_AC01_MAIN AS AC01MAIN
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVE_LASTREDEEM
      ON AC01MAIN.ACACNTNO = AC01_FIRSTLIVE_LASTREDEEM.ACACNTNO
),
FILTER_INSURANCEPOLICIES_FIRST_ALL AS (--TODO TO RIVIST ONEC IT IS AVAILABLE
  SELECT INSPACNTNO
        ,INSPSUBACNO
        ,INSPCOVERFROM
        ,INSPPOLICYDATE
        ,INSPLASTCHNGDATE
        ,INSPINSTSEQNO
        ,ROW_NUMBER() OVER (
           PARTITION BY
             INSPSUBACNO
           ORDER BY
             INSPPOLICYDATE DESC
            ,INSPSEQNO DESC
           ) AS L_RN
    FROM TB_SRC_INSURANCEPOLICIES
),
FILTER_INSURANCEPOLICIES_FIRST AS (
  SELECT *
    FROM FILTER_INSURANCEPOLICIES_FIRST_ALL
   WHERE L_RN = 1
),
FILTER_FUTUREINSURANCEPOLICIES AS (
  SELECT AC01.ACACNTNO
        ,INSPPOLICYDATE
        ,INSPLASTCHNGDATE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_AC01 AS AC01
      ON AC01_MAIN.ACACNTNO = AC01.ACACNTNO
   INNER JOIN FILTER_INSURANCEPOLICIES_FIRST AS INS_FIRST
      ON AC01.ACACNTNO = INS_FIRST.INSPACNTNO
     AND AC01.ACSUBACNO = INS_FIRST.INSPSUBACNO
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE INS_FIRST.INSPCOVERFROM >= CTRL.WS_MIGR_DATE
   ----TODO Log: UDMH_ WARN.CODE
),
FILTER_INSURANCEPOLICYRISKS_FIRST_ALL AS (--Todo to Revisit once this filter is availabe
  SELECT INSPRINSPSEQNO 
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPRINSPSEQNO
           ORDER BY 
             INSPRSEQNO 
           ) AS FIRST_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
),
FILTER_INSURANCEPOLICYRISKS_FIRST AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_FIRST_ALL
   WHERE FIRST_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_BUILDINGS_ALL AS (--Todo to Revisit once this filter is availabe
  SELECT INSPRINSPSEQNO
        ,INSPRSEQNO
        ,INSPRSUMINSURED
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPRINSPSEQNO
           ORDER BY 
             INSPRSEQNO
           ) AS BUILDINGS_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
),
FILTER_INSURANCEPOLICYRISKS_BUILDINGS AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_BUILDINGS_ALL
   WHERE BUILDINGS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_CONTENTS_ALL AS (   --Todo to Revisit once this filter is availabe
  SELECT INSPRINSPSEQNO
        ,INSPRSEQNO
        ,INSPRSUMINSURED
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPRINSPSEQNO
           ORDER BY 
             INSPRSEQNO
           ) AS CONTENTS_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
),
FILTER_INSURANCEPOLICYRISKS_CONTENTS AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_CONTENTS_ALL
   WHERE CONTENTS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_SICKNESS_ALL AS (      --Todo to Revisit once this filter is availabe
  SELECT INSPRINSPSEQNO
        ,INSPRSEQNO
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPRINSPSEQNO
           ORDER BY 
             INSPRSEQNO
           ) AS SICKNESS_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
),
FILTER_INSURANCEPOLICYRISKS_SICKNESS AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_SICKNESS_ALL
   WHERE SICKNESS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_UNEMPLOYMENT_ALL AS (     --Todo to Revisit once this filter is availabe
  SELECT INSPRSEQNO
        ,INSPRINSPSEQNO
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPRINSPSEQNO
           ORDER BY 
             INSPRSEQNO
           ) AS UNEMPLOYMENT_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
),
FILTER_INSURANCEPOLICYRISKS_UNEMPLOYMENT AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_UNEMPLOYMENT_ALL
   WHERE UNEMPLOYMENT_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV1BUILDINGS_ALL AS (          --Todo to Revisit once this filter is availabe
  SELECT INSPRSUMINSURED
        ,INSPRINSPSEQNO
        ,ROW_NUMBER() OVER (
           PARTITION BY
             INSPAINSPACODE
           ORDER BY 
             INSPRFREPERIODENDDATE DESC 
            ,INSPRINSPSEQNO DESC
           ) AS PREV1BUILDINGS_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
    WHERE INSPRINSPSEQNO = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV1BUILDINGS AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_PREV1BUILDINGS_ALL
   WHERE PREV1BUILDINGS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV1CONTENTS_ALL AS (       --Todo to Revisit once this filter is availabe
  SELECT INSPRINSPSEQNO 
        ,ROW_NUMBER() OVER (
           PARTITION BY
             INSPAINSPACODE
           ORDER BY 
             INSPRFREPERIODENDDATE DESC 
            ,INSPRINSPSEQNO DESC
           ) AS PREV1CONTENTS_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
   WHERE INSPRINSPSEQNO = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV1CONTENTS AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_PREV1CONTENTS_ALL
   WHERE PREV1CONTENTS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV1FIRSTASU_ALL AS (         --Todo to Revisit once this filter is availabe
  SELECT INSPRINSPSEQNO
        ,INSPRSUMINSURED
        ,ROW_NUMBER() OVER (
           PARTITION BY
             INSPAINSPACODE
           ORDER BY 
             INSPRFREPERIODENDDATE DESC 
            ,INSPRINSPSEQNO DESC
           ) AS PREV1FIRSTASU_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
   WHERE INSPRINSPSEQNO = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV1FIRSTASU AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_PREV1FIRSTASU_ALL
   WHERE PREV1FIRSTASU_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV2BUILDINGS_ALL AS (          --Todo to Revisit once this filter is availabe
  SELECT  INSPRSUMINSURED
         ,INSPRINSPSEQNO
         ,ROW_NUMBER() OVER (
            PARTITION BY
              INSPAINSPACODE
            ORDER BY 
              INSPRFREPERIODENDDATE DESC 
              ,INSPRINSPSEQNO DESC
            ) AS PREV2BUILDINGS_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
   WHERE INSPRINSPSEQNO = 2
),
FILTER_INSURANCEPOLICYRISKS_PREV2BUILDINGS AS (         
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_PREV2BUILDINGS_ALL
   WHERE PREV2BUILDINGS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV2CONTENTS_ALL AS (
  SELECT INSPRINSPSEQNO 
        ,ROW_NUMBER() OVER (
           PARTITION BY
             INSPAINSPACODE
           ORDER BY
             INSPRFREPERIODENDDATE DESC 
            ,INSPRINSPSEQNO DESC
           ) AS PREV2CONTENTS_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
   WHERE INSPRINSPSEQNO = 2
),
FILTER_INSURANCEPOLICYRISKS_PREV2CONTENTS AS (          --Todo to Revisit once this filter is availabe
 SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_PREV2CONTENTS_ALL
  WHERE PREV2CONTENTS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV2FIRSTASU_ALL AS (
  SELECT INSPRINSPSEQNO 
        ,INSPRSUMINSURED 
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPAINSPACODE 
           ORDER BY 
             INSPRFREPERIODENDDATE DESC 
            ,INSPRINSPSEQNO DESC
           ) AS PREV2FIRSTASU_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
   WHERE INSPRINSPSEQNO = 2
),
FILTER_INSURANCEPOLICYRISKS_PREV2FIRSTASU AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_PREV2FIRSTASU_ALL
   WHERE PREV2FIRSTASU_RN = 1
),

FILTER_INSURANCEPOLICYRISKS_PREV3BUILDINGS_ALL AS (    --Todo to Revisit once this filter is availabe
  SELECT INSPRSUMINSURED 
        ,INSPRINSPSEQNO
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPAINSPACODE 
           ORDER BY 
             INSPRFREPERIODENDDATE DESC 
            ,INSPRINSPSEQNO DESC
           ) AS PREV3BUILDINGS_RN 
    FROM TB_SRC_INSURANCEPOLICYRISKS
   WHERE INSPRINSPSEQNO = 3
),
FILTER_INSURANCEPOLICYRISKS_PREV3BUILDINGS AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_PREV3BUILDINGS_ALL
   WHERE PREV3BUILDINGS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV3CONTENTS_ALL AS (      --Todo to Revisit once this filter is availabe
  SELECT INSPRINSPSEQNO 
        ,ROW_NUMBER() OVER (
           PARTITION BY
             INSPAINSPACODE
           ORDER BY 
             INSPRFREPERIODENDDATE DESC
            ,INSPRINSPSEQNO DESC
           ) AS PREV3CONTENTS_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
   WHERE INSPRINSPSEQNO = 3
),
FILTER_INSURANCEPOLICYRISKS_PREV3CONTENTS AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_PREV3CONTENTS_ALL
   WHERE PREV3CONTENTS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_PREV3FIRSTASU_ALL AS (         --Todo to Revisit once this filter is availabe
  SELECT INSPRINSPSEQNO
        ,INSPRSUMINSURED
        ,ROW_NUMBER() OVER (
           PARTITION BY
             INSPAINSPACODE
           ORDER BY 
             INSPRFREPERIODENDDATE DESC 
            ,INSPRINSPSEQNO DESC
           ) AS PREV3FIRSTASU_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
   WHERE INSPRINSPSEQNO = 3
),
FILTER_INSURANCEPOLICYRISKS_PREV3FIRSTASU AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_PREV3FIRSTASU_ALL
   WHERE PREV3FIRSTASU_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_FUTR1BUILDINGS_ALL AS (          --Todo to Revisit once this filter is availabe
  SELECT INSPRSUMINSURED
        ,INSPRINSPSEQNO
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPRINSPSEQNO
           ORDER BY 
             INSPRSEQNO
           ) AS FUTR1BUILDINGS_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
),
FILTER_INSURANCEPOLICYRISKS_FUTR1BUILDINGS AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_FUTR1BUILDINGS_ALL
   WHERE FUTR1BUILDINGS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_FUTR1CONTENTS_ALL AS (     --Todo to Revisit once this filter is availabe
  SELECT INSPRSUMINSURED
        ,INSPRINSPSEQNO
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPRINSPSEQNO
           ORDER BY 
             INSPRSEQNO
           ) AS FUTR1CONTENTS_RN 
    FROM TB_SRC_INSURANCEPOLICYRISKS
),
FILTER_INSURANCEPOLICYRISKS_FUTR1CONTENTS AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_FUTR1CONTENTS_ALL
   WHERE FUTR1CONTENTS_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_FUTR1FIRSTASU_ALL AS (         --Todo to Revisit once this filter is availabe
  SELECT INSPRINSPSEQNO
        ,INSPRSUMINSURED
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPRINSPSEQNO
           ORDER BY 
             INSPRSEQNO
           ) AS FUTR1FIRSTASU_RN
    FROM TB_SRC_INSURANCEPOLICYRISKS
),
FILTER_INSURANCEPOLICYRISKS_FUTR1FIRSTASU AS (
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_FUTR1FIRSTASU_ALL
   WHERE FUTR1FIRSTASU_RN = 1
),
FILTER_INSURANCEPOLICYRISKS_INDEMNITY_ALL AS (         --Todo to Revisit once this filter is availabe
  SELECT INSPRINSPSEQNO 
        ,INSPRSUMINSURED
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPRINSPSEQNO
           ORDER BY 
             INSPRSEQNO
           ) AS INDEMNITY_RN  
    FROM TB_SRC_INSURANCEPOLICYRISKS
),
FILTER_INSURANCEPOLICYRISKS_INDEMNITY AS (       --Todo to Revisit once this filter is availabe
  SELECT * 
    FROM FILTER_INSURANCEPOLICYRISKS_INDEMNITY_ALL
   WHERE INDEMNITY_RN = 1
),
FILTER_INSPINSPALNKS_LATEST_ALL AS (       --Todo to Revisit once this filter is availabe
  SELECT INSPALPOLICYSEQNO
        ,INSPALINSPACODE
        ,INSPALEFDATEFROM
        ,INSPALEFDATETO
        ,ROW_NUMBER() OVER (
           PARTITION BY
             INSPALINSPACODE
          ORDER BY 
            INSPALEFDATEFROM DESC
          ) AS INSPINSPALNKS_LATEST_RN
   FROM TB_SRC_INSPINSPALNKS
),
FILTER_INSPINSPALNKS_LATEST AS (
  SELECT * 
    FROM FILTER_INSPINSPALNKS_LATEST_ALL
   WHERE INSPINSPALNKS_LATEST_RN = 1
),
FILTER_INSPINSPALNKS_FUTR1_ALL AS (
  SELECT INSPALPOLICYSEQNO
        ,INSPALINSPACODE
        ,INSPALEFDATEFROM
        ,INSPALEFDATETO
        ,ROW_NUMBER() OVER (
           PARTITION BY
             INSPALINSPACODE
          ORDER BY 
            INSPALEFDATEFROM DESC
          ) AS FUTR1_RN
    FROM TB_SRC_INSPINSPALNKS
),
FILTER_INSPINSPALNKS_FUTR1 AS (
 SELECT * 
    FROM FILTER_INSPINSPALNKS_FUTR1_ALL
   WHERE FUTR1_RN = 1
),
FILTER_INSPSPECIFIEDITEMS_FIRST9SCHEDULED AS (
  SELECT INSPSIPOLICYSEQNO
        ,INSPSIINSPRRISKNO
    FROM TB_SRC_INSPSPECIFIEDITEMS AS INSPSPECIFIEDITEMS
   WHERE INSPSPECIFIEDITEMS.INSPSISCHEDULED = 'Y'
),
FILTER_DATEADD AS (
  SELECT DATEADD(DAY,1,MAX( INSURANCEPOLICIES.INSPCOVERTO )) AS DATE_ADD
    FROM TB_SRC_INSURANCEPOLICIES AS INSURANCEPOLICIES
   CROSS JOIN TB_UDMH_CTL AS CRTL
   INNER JOIN TB_SRC_INSURANCETYPES AS INSURANCETYPES
      ON INSURANCEPOLICIES.INSPINSTSEQNO = INSURANCETYPES.INSTSEQNO
     AND INSURANCEPOLICIES.INSPPOLICYDATE >= INSURANCETYPES.INSTPEFDATENEWFROM
     AND INSURANCEPOLICIES.INSPPOLICYDATE <= COALESCE(INSURANCETYPES.INSTPEFDATENEWTO, CAST('9999-12-31' AS DATE))
   INNER JOIN TB_SRC_AC01_MAIN AS ACO1_MAIN
      ON INSURANCEPOLICIES.INSPACNTNO = ACO1_MAIN.ACACNTNO
     AND INSURANCEPOLICIES.INSPCOVERTO <= CRTL.WS_MIGR_DATE
     AND INSURANCETYPES.INSTTYPE IN ('BC','B')
),
FILTER_CONDITIONS_ALL AS (
  SELECT ROW_NUMBER() OVER (
         PARTITION BY 
            INSPPOLICYSEQNO
         ORDER BY COALESCE( INSPSCINSCONCODE,INSPALINSPACODE)
         ) AS CONDITION_NO
       ,CONDITIONS.*
    FROM ( SELECT INSPSPECIFICONDITIONS.INSPSCINSCONCODE
                 ,NULL AS INSPALINSPACODE
                 ,LUT_INSURANCE_CONDITION.TGT_INS_OPT
                 ,INS_LATEST.INSPPOLICYSEQNO
             FROM VW_FILTER_INSURANCEPOLICIES_LATEST AS INS_LATEST
            INNER JOIN TB_SRC_INSPSPECIFICONDITIONS AS INSPSPECIFICONDITIONS
               ON INS_LATEST.INSPPOLICYSEQNO = INSPSPECIFICONDITIONS.INSPSCPOLICYSEQNO
             LEFT OUTER JOIN TB_XFM_LUT_INSURANCE_CONDITION AS LUT_INSURANCE_CONDITION
               ON INSPSPECIFICONDITIONS.INSPSCINSCONCODE = LUT_INSURANCE_CONDITION.SRC_INSPSCINSCONCODE
            WHERE INS_LATEST.INSPCOVERFROM >= INSPSPECIFICONDITIONS.INSPSCEFDATEFROM
              AND INS_LATEST.INSPCOVERFROM <= INSPSPECIFICONDITIONS.INSPSCEFDATETO
           UNION ALL
           SELECT NULL AS INSPSCINSCONCODE
                 ,INSPINSPALNKS_LATEST.INSPALINSPACODE
                 ,LUT_INSURANCE_CONDITION.TGT_INS_OPT
                 ,INS_LATEST.INSPPOLICYSEQNO
             FROM VW_FILTER_INSURANCEPOLICIES_LATEST AS INS_LATEST
            INNER JOIN FILTER_INSPINSPALNKS_LATEST AS INSPINSPALNKS_LATEST
               ON INS_LATEST.INSPPOLICYSEQNO = INSPINSPALNKS_LATEST.INSPALPOLICYSEQNO
             LEFT OUTER JOIN TB_XFM_LUT_INSURANCE_CONDITION AS LUT_INSURANCE_CONDITION
               ON LUT_INSURANCE_CONDITION.SRC_INSPALINSPACODE = INSPINSPALNKS_LATEST.INSPALINSPACODE
            WHERE INS_LATEST.INSPCOVERFROM >= INSPINSPALNKS_LATEST.INSPALEFDATEFROM
              AND INS_LATEST.INSPCOVERFROM <= INSPINSPALNKS_LATEST.INSPALEFDATETO 
           ) AS CONDITIONS --TODO Log: UDMH_WARN.CODE
),
FILTER_CONDITIONS_FUTR_ALL AS (
  SELECT  CONDITIONS.*
    FROM (SELECT INS_FUTR1.INSPPOLICYSEQNO
                ,INSPSPECIFICONDITIONS.INSPSCINSCONCODE
                ,LUT_INS_CON.TGT_INS_OPT
                ,NULL AS INSPALINSPACODE
            FROM VW_FILTER_INSURANCEPOLICIES_FUTR1 AS INS_FUTR1
           INNER JOIN TB_SRC_INSPSPECIFICONDITIONS AS INSPSPECIFICONDITIONS
              ON INS_FUTR1.INSPPOLICYSEQNO = INSPSPECIFICONDITIONS.INSPSCPOLICYSEQNO
            LEFT OUTER JOIN TB_XFM_LUT_INSURANCE_CONDITION AS LUT_INS_CON
              ON INSPSPECIFICONDITIONS.INSPSCINSCONCODE = LUT_INS_CON.SRC_INSPSCINSCONCODE
           WHERE INS_FUTR1.INSPCOVERFROM >= INSPSPECIFICONDITIONS.INSPSCEFDATEFROM
             AND INS_FUTR1.INSPCOVERFROM <= INSPSPECIFICONDITIONS.INSPSCEFDATETO
          UNION ALL
          SELECT INS_FUTR1.INSPPOLICYSEQNO
                ,NULL AS INSPSCINSCONCODE
                ,LUT_INS_CON.TGT_INS_OPT
                ,INSPINSPALNKS_FUTR1.INSPALINSPACODE
            FROM VW_FILTER_INSURANCEPOLICIES_FUTR1 AS INS_FUTR1
            INNER JOIN FILTER_INSPINSPALNKS_FUTR1 AS INSPINSPALNKS_FUTR1
              ON INS_FUTR1.INSPPOLICYSEQNO = INSPINSPALNKS_FUTR1.INSPALPOLICYSEQNO
            LEFT OUTER JOIN TB_XFM_LUT_INSURANCE_CONDITION AS LUT_INS_CON
              ON LUT_INS_CON.SRC_INSPALINSPACODE = INSPINSPALNKS_FUTR1.INSPALINSPACODE
           WHERE INS_FUTR1.INSPCOVERFROM >= INSPINSPALNKS_FUTR1.INSPALEFDATEFROM
             AND INS_FUTR1.INSPCOVERFROM <= INSPINSPALNKS_FUTR1.INSPALEFDATETO
          ) AS CONDITIONS  --TODO Log: UDMH_WARN.CODE
),
FILTER_CONDITIONS_ADD AS (
  SELECT F_ALL.*
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INSPPOLICYSEQNO
           ORDER BY COALESCE( INSPSCINSCONCODE, INSPALINSPACODE )
           ) AS CONDITION_ADD_NO
    FROM FILTER_CONDITIONS_FUTR_ALL AS F_ALL
   WHERE NOT EXISTS (SELECT 1
                       FROM FILTER_CONDITIONS_ALL AS CON_ALL
                      WHERE CON_ALL.TGT_INS_OPT = F_ALL.TGT_INS_OPT)
),
FILTER_CONDITIONS_DEL AS (
  SELECT CON_ALL.*
         ,ROW_NUMBER() OVER (
            PARTITION BY 
              INSPPOLICYSEQNO
            ORDER BY COALESCE(INSPSCINSCONCODE,INSPALINSPACODE)
            ) AS CONDITION_DEL_NO
    FROM FILTER_CONDITIONS_ALL AS CON_ALL
   WHERE NOT EXISTS (SELECT 1
                       FROM FILTER_CONDITIONS_FUTR_ALL AS  F_ALL
                      WHERE F_ALL.TGT_INS_OPT = CON_ALL.TGT_INS_OPT)
),
FILTER_CONDITIONS_ADD_01 AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_OPT1
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO = 1
),
FILTER_CONDITIONS_ADD_02 AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_OPT2
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO = 2
),
FILTER_CONDITIONS_ADD_03 AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_OPT3
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO = 3
),
FILTER_CONDITIONS_ADD_04 AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_OPT4
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO = 4
),
FILTER_CONDITIONS_ADD_05 AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_OPT5
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO = 5
),
FILTER_CONDITIONS_ADD_06 AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_OPT6
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO = 6
),
FILTER_CONDITIONS_ADD_07 AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_OPT7
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO = 7
),
FILTER_CONDITIONS_ADD_08 AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_OPT8
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO = 8
),
FILTER_CONDITIONS_ADD_09 AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_OPT9
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO = 9
), 
FILTER_CONDITIONS_ADD_10 AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_OPT10
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO = 10
),
FILTER_CONDITIONS_ADD_11PLUS AS (
  SELECT TGT_INS_OPT AS ADD_TGT_INS_11PLUS
        ,INSPPOLICYSEQNO
  --      ,dbo.FN_EXCEPTION(GETDATE(),INSPACNTNO,'','I01-INSOPT-11+','INSPSCINSCONCODE,','INSPALINSPACODE','','','','',INSPSCINSCONCODE,INSPALINSPACODE,'','','','','W','X02_I01','N') AS EXCEPTION_4
    FROM FILTER_CONDITIONS_ADD
   WHERE CONDITION_ADD_NO >= 11 -- TODO Log: UDMH_WARN.CODE
),
FILTER_CONDITIONS_DEL_01 AS (
  SELECT TGT_INS_OPT AS DEL_TGT_INS_OPT1
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_DEL 
   WHERE CONDITION_DEL_NO = 1
),
FILTER_CONDITIONS_DEL_02 AS (
  SELECT TGT_INS_OPT AS DEL_TGT_INS_OPT2
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_DEL
   WHERE CONDITION_DEL_NO = 2
),
FILTER_CONDITIONS_DEL_03 AS (
  SELECT TGT_INS_OPT AS DEL_TGT_INS_OPT3
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_DEL
   WHERE CONDITION_DEL_NO = 3
),
FILTER_CONDITIONS_DEL_04 AS (
  SELECT TGT_INS_OPT AS DEL_TGT_INS_OPT4
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_DEL
   WHERE CONDITION_DEL_NO = 4
),
FILTER_CONDITIONS_DEL_05 AS (
  SELECT TGT_INS_OPT AS DEL_TGT_INS_OPT5
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_DEL
   WHERE CONDITION_DEL_NO = 5
),
FILTER_CONDITIONS_DEL_06 AS (
  SELECT TGT_INS_OPT AS DEL_TGT_INS_OPT6
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_DEL
   WHERE CONDITION_DEL_NO = 6
),
FILTER_CONDITIONS_DEL_07 AS (
  SELECT TGT_INS_OPT AS DEL_TGT_INS_OPT7
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_DEL
   WHERE CONDITION_DEL_NO = 7
),
FILTER_CONDITIONS_DEL_08 AS (
  SELECT TGT_INS_OPT AS DEL_TGT_INS_OPT8
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_DEL
   WHERE CONDITION_DEL_NO = 8
),
FILTER_CONDITIONS_DEL_09 AS (
  SELECT TGT_INS_OPT AS DEL_TGT_INS_OPT9
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_DEL
   WHERE CONDITION_DEL_NO = 9
),
FILTER_CONDITIONS_DEL_10 AS (
  SELECT TGT_INS_OPT AS DEL_TGT_INS_OPT10
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_DEL
   WHERE CONDITION_DEL_NO = 10
),
FILTER_CONDITIONS_01 AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT1
        ,INSPPOLICYSEQNO
    FROM  FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO = 1
),
FILTER_CONDITIONS_02 AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT2
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO = 2
),
FILTER_CONDITIONS_03 AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT3
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO = 3
),
FILTER_CONDITIONS_04 AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT4
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO = 4
),
FILTER_CONDITIONS_05 AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT5
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO = 5
),
FILTER_CONDITIONS_06 AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT6
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO = 6
),
FILTER_CONDITIONS_07 AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT7
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO = 7
),
FILTER_CONDITIONS_08 AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT8
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO = 8
),
FILTER_CONDITIONS_09 AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT9
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO = 9
),
FILTER_CONDITIONS_10 AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT10
        ,INSPPOLICYSEQNO
    FROM FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO = 10
),
FILTER_CONDITIONS_11PLUS AS (
  SELECT TGT_INS_OPT AS TGT_INS_OPT11
        ,INSPPOLICYSEQNO
       -- ,dbo.FN_EXCEPTION(GETDATE(),INSPACNTNO,'','I01-INSOPT-11+','INSPSCINSCONCODE,','INSPALINSPACODE','','','','',INSPSPECIFICONDITIONS_INSPSCINSCONCODE,INSPINSPALNKS_INSPALINSPACODE,'','','','','W','X02_I01','N') AS EXCEPTION_5
    FROM FILTER_CONDITIONS_ALL
   WHERE CONDITION_NO >= 11 --TODO Log: UDMH_WARN.CODE
),
FILTER_INSURANCEPOLICIES AS (
  SELECT INS_LATEST.*
        ,AC01.ACACNTNO AS AC01_ACACNTNO
        ,AC01.ACSUBACNO AS AC01_ACSUBACNO
        ,INS_EARLIEST.INSPCOVERFROM AS E_INSPCOVERFROM
        ,INS_EARLIEST.INSPPOLICYDATE AS E_INSPPOLICYDATE
        ,CASE INSURANCETYPES.INSTTYPE
             WHEN 'B' THEN 'HOUSEHOLD'
             WHEN 'BC' THEN 'HOUSEHOLD'
             WHEN 'PP' THEN 'ASU'
             WHEN 'G' THEN 'INDEMNITY'
             END AS UDMH_INS_TYPE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_AC01 AS AC01 
      ON AC01_MAIN.ACACNTNO = AC01.ACACNTNO
   INNER JOIN VW_FILTER_INSURANCEPOLICIES_LATEST AS INS_LATEST
      ON  AC01.ACACNTNO = INS_LATEST.INSPACNTNO
     AND AC01.ACSUBACNO = INS_LATEST.INSPSUBACNO
   INNER JOIN VW_FILTER_INSURANCEPOLICIES_EARLIEST AS INS_EARLIEST
      ON AC01.ACACNTNO = INS_EARLIEST.INSPACNTNO
     AND AC01.ACSUBACNO = INS_EARLIEST.INSPSUBACNO
   INNER JOIN FILTER_INSURANCEPOLICYRISKS_FIRST AS INSURANCEPOLICYRISKS_FIRST
      ON INS_LATEST.INSPSEQNO = INSURANCEPOLICYRISKS_FIRST.INSPRINSPSEQNO
   INNER JOIN TB_SRC_INSURANCETYPES AS INSURANCETYPES 
      ON INS_LATEST.INSPINSTSEQNO = INSURANCETYPES.INSTSEQNO
     AND INS_LATEST.INSPPOLICYDATE >= INSURANCETYPES.INSTPEFDATENEWFROM
     AND INS_LATEST.INSPPOLICYDATE <= COALESCE(INSURANCETYPES.INSTPEFDATENEWTO, CAST('9999-12-31' AS DATE))
   WHERE AC01.ACGACTTYPE = 'I'
     AND INSURANCETYPES.INSTTYPE IN ('PP','BC','B','G')
),
FILTER_NSI_INSURANCE AS (
  SELECT F_INS.*
       ,AC01_MAIN_2.ACACNTNO AS AC01_MAIN_2_ACACNTNO
        ,AC01_MAIN_2.ACINCEPDATE AS AC01_MAIN_ACINCEPDATE
        ,AC01_MAIN_2.ACPROCESSTATUS  AS AC01_MAIN_ACPROCESSTATUS
        ,AC01_MAIN_2.ACCLRDATE AS ACO1_MAIN_ACCLRDATE
        ,AC01_MAIN_2.ACHLATESTVALUATION AS AC01_MAIN_ACHLATESTVALUATION
        ,'NSI' AS UDMH_INSTYPE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN_2
   CROSS JOIN TB_UDMH_CTL AS CTRL
    LEFT OUTER JOIN FILTER_INSURANCEPOLICIES AS F_INS
      ON AC01_MAIN_2.ACACNTNO = F_INS.AC01_ACACNTNO
     AND F_INS.INSPCANCELIND IS NULL
     AND F_INS.INSPCOVERTO >= CTRL.WS_MIGR_DATE
     AND F_INS.UDMH_INS_TYPE = 'HOUSEHOLD'
   WHERE F_INS.AC01_ACACNTNO IS NULL
),
FILTER_SUBSEQUENTCHARGES_CNT AS (
  SELECT COUNT(1) AS SECOND_CHG_CNT
        ,INSPPOLICYSEQNO
     FROM VW_FILTER_INSURANCEPOLICIES_LATEST AS INS_LATEST
    INNER JOIN TB_SRC_AC01_MAIN AS AC01_MAIN
       ON AC01_MAIN.ACACNTNO = INS_LATEST.INSPACNTNO
    INNER JOIN TB_SRC_SUBSEQUENTCHARGES AS SUBSEQUENTCHARGES
       ON AC01_MAIN.ACHPURCHPROPSEQNO = SUBSEQUENTCHARGES.SUBCHGPROPSEQNO
    WHERE INS_LATEST.INSPPOLICYDATE >= SUBSEQUENTCHARGES.SUBCHGDATEREGISTERED
      AND INS_LATEST.INSPPOLICYDATE <= SUBSEQUENTCHARGES.SUBCHGDATEREMOVED
 GROUP BY INS_LATEST.INSPPOLICYSEQNO
),
FILTER_3PTY_ENDORSEMENTY_CNT AS (
  SELECT COUNT(1) AS THIRD_PTY_END_CNT
        ,INSPPOLICYSEQNO
    FROM VW_FILTER_INSURANCEPOLICIES_LATEST AS INS_LATEST
   INNER JOIN TB_SRC_INSPSPECIFICONDITIONS AS INSPSPECIFICONDITIONS
      ON INS_LATEST.INSPPOLICYSEQNO = INSPSPECIFICONDITIONS.INSPSCPOLICYSEQNO
   WHERE INS_LATEST.INSPPOLICYDATE >= INSPSPECIFICONDITIONS.INSPSCEFDATEFROM
     AND INS_LATEST.INSPPOLICYDATE <= INSPSPECIFICONDITIONS.INSPSCEFDATETO
     AND INSPSPECIFICONDITIONS.INSPSCINSCONCODE = 'LENDER'
GROUP BY INS_LATEST.INSPPOLICYSEQNO
),
FILTER_INS01_I01_ADD_PREM AS (
  SELECT SUM(INSURANCEPOLICYRISKS.INSPRPREMIUM)/12 AS SUM1
    FROM TB_SRC_INSURANCEPOLICIES AS INSURANCEPOLICIES
   INNER JOIN FILTER_INSPSPECIFIEDITEMS_FIRST9SCHEDULED AS INSPSPECIFIEDITEMS_FIRST9SCHEDULED 
      ON INSURANCEPOLICIES.INSPSEQNO = INSPSPECIFIEDITEMS_FIRST9SCHEDULED.INSPSIPOLICYSEQNO
   INNER JOIN TB_SRC_INSURANCEPOLICYRISKS AS INSURANCEPOLICYRISKS
      ON INSPSPECIFIEDITEMS_FIRST9SCHEDULED.INSPSIPOLICYSEQNO = INSURANCEPOLICYRISKS.INSPRINSPSEQNO
     AND INSPSPECIFIEDITEMS_FIRST9SCHEDULED.INSPSIINSPRRISKNO = INSURANCEPOLICYRISKS.INSPRRISKNO
),
FILTER_MISC_INS01_I01_INS_PROD AS (
  SELECT LUT_MISC.TGT_VAL  
    FROM TB_XFM_LUT_MISC AS LUT_MISC
  WHERE LUT_MISC.SRC_KEY = 'NSI-INS-PROD'
),
JOIN_WRITECRITERIA AS (
  SELECT F_INS.*
        ,AC01_ACACNTNO AS AC01_MAIN_2_ACACNTNO
        ,NULL AS AC01_MAIN_ACINCEPDATE
        ,NULL AS AC01_MAIN_ACPROCESSTATUS
        ,NULL AS ACO1_MAIN_ACCLRDATE
        ,NULL AS AC01_MAIN_ACHLATESTVALUATION
        ,NULL AS UDMH_INSTYPE
    FROM FILTER_INSURANCEPOLICIES AS F_INS
  UNION ALL
  SELECT F_NSI_INS.*
    FROM FILTER_NSI_INSURANCE AS F_NSI_INS
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,THIRD_PTY_END_CNT
        ,SECOND_CHG_CNT
        ,CTRL.WS_MIGR_DATE AS MIGR_DATE
        ,CASE M01.ACPROCESSTATUS
          WHEN 3 THEN 'R'
          WHEN 4 THEN 'R'
          ELSE 'L'
         END AS MAR01_M01_STATUS
        ,INS_PREV1.INSPCOVERFROM  AS INS_PREV1_INSPCOVERFROM
        ,INS_PREV2.INSPCOVERFROM AS INS_PREV2_INSPCOVERFROM
        ,INS_PREV3.INSPCOVERFROM AS INS_PREV3_INSPCOVERFROM  
        ,INS_FUTR1.INSPCOVERFROM AS INS_FUTR1_INSPCOVERFROM
        ,INS_FUTR1.INSPPREMIUM AS INS_FUTR1_INSPPREMIUM
        ,INS_FUTR1.INSPPREMIUMTAX AS INS_FUTR1_INSPPREMIUMTAX
        ,INS_FUTR1.INSPACNTNO AS INS_FUTR1_INSPACNTNO
        ,INS_FUTR1.INSPDEBITFREQ AS INS_FUTR1_INSPDEBITFREQ
        ,INS_BUILDINGS.INSPRSUMINSURED AS INS_RISKS_BUILDINGS_INSPRSUMINSURED
        ,INS_CONTENTS.INSPRSUMINSURED AS INS_RISKS_CONTENTS_INSPRSUMINSURED
        ,INS_FIRSTASU.INSPRCLSEQNO1 AS INS_RISKS_FIRSTASU_INSPRCLSEQNO1
        ,INS_FIRSTASU.INSPRCLSEQNO2 AS INS_RISKS_FIRSTASU_INSPRCLSEQNO2
        ,INS_FIRSTASU.INSPRMPICL1MULT AS INS_RISKS_FIRSTASU_INSPRMPICL1MULT
        ,INS_FIRSTASU.INSPRMPICL1DIV AS INS_RISKS_FIRSTASU_INSPRMPICL1DIV
        ,INS_FIRSTASU.INSPRSUMINSURED AS INS_RISKS_FIRSTASU_INSPRSUMINSURED
        ,INS_PREV1BUILDINGS.INSPRSUMINSURED AS INS_RISKS_PREV1BUILDINGS_INSPRSUMINSURED
        ,INS_PREV1FIRSTASU.INSPRSUMINSURED AS INS_RISKS_PREV1FIRSTASU_INSPRSUMINSURED
        ,INS_PREV2BUILDINGS.INSPRSUMINSURED AS INS_RISKS_PREV2BUILDINGS_INSPRSUMINSURED
        ,INS_PREV2FIRSTASU.INSPRSUMINSURED AS INS_RISKS_PREV2FIRSTASU_INSPRSUMINSURED 
        ,INS_PREV3BUILDINGS.INSPRSUMINSURED AS INS_RISKS_PREV3BUILDINGS_INSPRSUMINSURED
        ,INS_PREV3FIRSTASU.INSPRSUMINSURED AS INS_RISKS_PREV3FIRSTASU_INSPRSUMINSURED
        ,INS_FUTR1BUILDINGS.INSPRSUMINSURED AS INS_RISKS_FUTR1BUILDINGS_INSPRSUMINSURED
        ,INS_FUTR1CONTENTS.INSPRSUMINSURED AS INS_RISKS_FUTR1CONTENTS_INSPRSUMINSURED 
        ,INS_FUTR1FIRSTASU.INSPRSUMINSURED AS INS_RISKS_FUTR1FIRSTASU_INSPRSUMINSURED
        ,INS_INDEMNITY.INSPRSUMINSURED AS INS_RISKS_INDEMNITY_INSPRSUMINSURED 
        ,F_FIRST.INSPLASTCHNGDATE AS F_INSPLASTCHNGDATE
        ,F_FIRST.INSPPOLICYDATE AS F_INSPPOLICYDATE
        ,TGT_INS_OPT1 
        ,TGT_INS_OPT2
        ,TGT_INS_OPT3
        ,TGT_INS_OPT4
        ,TGT_INS_OPT5
        ,TGT_INS_OPT6
        ,TGT_INS_OPT7
        ,TGT_INS_OPT8
        ,TGT_INS_OPT9
        ,TGT_INS_OPT10
        ,DEL_TGT_INS_OPT1
        ,DEL_TGT_INS_OPT2
        ,DEL_TGT_INS_OPT3
        ,DEL_TGT_INS_OPT4
        ,DEL_TGT_INS_OPT5
        ,DEL_TGT_INS_OPT6
        ,DEL_TGT_INS_OPT7
        ,DEL_TGT_INS_OPT8
        ,DEL_TGT_INS_OPT9
        ,DEL_TGT_INS_OPT10
        ,ADD_TGT_INS_OPT1
        ,ADD_TGT_INS_OPT2
        ,ADD_TGT_INS_OPT3
        ,ADD_TGT_INS_OPT4
        ,ADD_TGT_INS_OPT5
        ,ADD_TGT_INS_OPT6
        ,ADD_TGT_INS_OPT7
        ,ADD_TGT_INS_OPT8
        ,ADD_TGT_INS_OPT9
        ,ADD_TGT_INS_OPT10
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT OUTER JOIN FILTER_M01 AS M01
      ON J_WC.AC01_ACACNTNO = M01.ACACNTNO

    LEFT OUTER JOIN VW_FILTER_INSURANCEPOLICIES_PREV1 AS INS_PREV1
      ON J_WC.AC01_ACACNTNO = INS_PREV1.INSPACNTNO
     AND J_WC.AC01_ACSUBACNO = INS_PREV1.INSPSUBACNO
    LEFT OUTER JOIN VW_FILTER_INSURANCEPOLICIES_PREV2 AS INS_PREV2
      ON J_WC.AC01_ACACNTNO = INS_PREV2.INSPACNTNO
     AND J_WC.AC01_ACSUBACNO = INS_PREV2.INSPSUBACNO
    LEFT OUTER JOIN VW_FILTER_INSURANCEPOLICIES_PREV3 AS INS_PREV3
      ON J_WC.AC01_ACACNTNO = INS_PREV3.INSPACNTNO
     AND J_WC.AC01_ACSUBACNO = INS_PREV3.INSPSUBACNO
    LEFT OUTER JOIN VW_FILTER_INSURANCEPOLICIES_FUTR1 AS INS_FUTR1
      ON J_WC.AC01_ACACNTNO = INS_FUTR1.INSPACNTNO
     AND J_WC.AC01_ACSUBACNO = INS_FUTR1.INSPSUBACNO

    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_BUILDINGS AS INS_BUILDINGS
      ON J_WC.INSPSEQNO =INS_BUILDINGS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_CONTENTS AS INS_CONTENTS
      ON J_WC.INSPSEQNO = INS_CONTENTS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_SICKNESS AS INS_SICKNESS
      ON J_WC.INSPSEQNO = INS_SICKNESS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_UNEMPLOYMENT AS INS_UNEMPLOYMENT
      ON J_WC.INSPSEQNO = INS_UNEMPLOYMENT.INSPRINSPSEQNO
    LEFT OUTER JOIN VW_FILTER_INSURANCEPOLICYRISKS_FIRSTASU AS INS_FIRSTASU
      ON J_WC.INSPSEQNO = INS_FIRSTASU.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_INDEMNITY AS INS_INDEMNITY
     ON J_WC.INSPSEQNO = INS_INDEMNITY.INSPRINSPSEQNO

    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_PREV1BUILDINGS AS INS_PREV1BUILDINGS
      ON J_WC.INSPSEQNO = INS_PREV1BUILDINGS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_PREV1CONTENTS AS INS_PREV1CONTENTS
      ON J_WC.INSPSEQNO = INS_PREV1CONTENTS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_PREV1FIRSTASU AS INS_PREV1FIRSTASU 
      ON J_WC.INSPSEQNO = INS_PREV1FIRSTASU.INSPRINSPSEQNO

    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_PREV2BUILDINGS AS INS_PREV2BUILDINGS
      ON J_WC.INSPSEQNO = INS_PREV2BUILDINGS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_PREV2CONTENTS AS INS_PREV2CONTENTS
      ON J_WC.INSPSEQNO = INS_PREV2CONTENTS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_PREV2FIRSTASU AS INS_PREV2FIRSTASU 
      ON J_WC.INSPSEQNO = INS_PREV2FIRSTASU.INSPRINSPSEQNO

    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_PREV3BUILDINGS AS INS_PREV3BUILDINGS
      ON J_WC.INSPSEQNO = INS_PREV3BUILDINGS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_PREV3CONTENTS AS INS_PREV3CONTENTS
      ON J_WC.INSPSEQNO = INS_PREV3CONTENTS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_PREV3FIRSTASU AS INS_PREV3FIRSTASU 
      ON J_WC.INSPSEQNO = INS_PREV3FIRSTASU.INSPRINSPSEQNO
    
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_FUTR1BUILDINGS AS INS_FUTR1BUILDINGS
      ON J_WC.INSPSEQNO = INS_FUTR1BUILDINGS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_FUTR1CONTENTS AS INS_FUTR1CONTENTS
      ON J_WC.INSPSEQNO = INS_FUTR1CONTENTS.INSPRINSPSEQNO
    LEFT OUTER JOIN FILTER_INSURANCEPOLICYRISKS_FUTR1FIRSTASU AS INS_FUTR1FIRSTASU
      ON J_WC.INSPSEQNO = INS_FUTR1FIRSTASU.INSPRINSPSEQNO
      
    LEFT OUTER JOIN FILTER_SUBSEQUENTCHARGES_CNT AS SUBSEQUENTCHARGES_CNT
      ON J_WC.INSPPOLICYSEQNO = SUBSEQUENTCHARGES_CNT.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_3PTY_ENDORSEMENTY_CNT AS ENDORSEMENTY_CNT
      ON J_WC.INSPPOLICYSEQNO = ENDORSEMENTY_CNT.INSPPOLICYSEQNO
    
    LEFT OUTER JOIN FILTER_CONDITIONS_01 AS CONDITIONS_01
      ON CONDITIONS_01.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_02 AS CONDITIONS_02
      ON CONDITIONS_02.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_03 AS CONDITIONS_03
      ON CONDITIONS_03.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_04 AS CONDITIONS_04
      ON CONDITIONS_04.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_05 AS CONDITIONS_05
      ON CONDITIONS_05.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_06 AS CONDITIONS_06
      ON CONDITIONS_06.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_07 AS CONDITIONS_07
      ON CONDITIONS_07.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_08 AS CONDITIONS_08
     ON CONDITIONS_08.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_09 AS CONDITIONS_09
      ON CONDITIONS_09.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_10 AS CONDITIONS_10
      ON CONDITIONS_10.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    
    LEFT OUTER JOIN FILTER_CONDITIONS_ADD_01 AS CON_ADD_01
      ON CON_ADD_01.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_ADD_02 AS CON_ADD_02
      ON CON_ADD_02.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_ADD_03 AS CON_ADD_03
      ON CON_ADD_03.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_ADD_04 AS CON_ADD_04
      ON CON_ADD_04.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_ADD_05 AS CON_ADD_05
      ON CON_ADD_05.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_ADD_06 AS CON_ADD_06
      ON CON_ADD_06.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_ADD_07 AS CON_ADD_07
      ON CON_ADD_07.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_ADD_08 AS CON_ADD_08
      ON CON_ADD_08.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_ADD_09 AS CON_ADD_09
      ON CON_ADD_09.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_ADD_10 AS CON_ADD_10
      ON CON_ADD_10.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO

    LEFT OUTER JOIN FILTER_CONDITIONS_DEL_01 AS CON_DEL_01
      ON CON_DEL_01.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_DEL_02 AS CON_DEL_02
      ON CON_DEL_02.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_DEL_03 AS CON_DEL_03
      ON CON_DEL_03.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_DEL_04 AS CON_DEL_04
      ON CON_DEL_04.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_DEL_05 AS CON_DEL_05
      ON CON_DEL_05.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_DEL_06 AS CON_DEL_06
      ON CON_DEL_06.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_DEL_07 AS CON_DEL_07
      ON CON_DEL_07.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_DEL_08 AS CON_DEL_08
      ON CON_DEL_08.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_DEL_09 AS CON_DEL_09
      ON CON_DEL_09.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
    LEFT OUTER JOIN FILTER_CONDITIONS_DEL_10 AS CON_DEL_10
      ON CON_DEL_10.INSPPOLICYSEQNO = J_WC.INSPPOLICYSEQNO
      --TODO REVISIT
    LEFT OUTER JOIN  FILTER_INSURANCEPOLICIES_FIRST AS F_FIRST
      ON J_WC.AC01_ACACNTNO = F_FIRST.INSPACNTNO
   CROSS JOIN TB_UDMH_CTL AS CTRL
   --CROSS APPLY FILTER_CONDITIONS_11PLUS              --Exception joins todo revisit once it is confirmed
   --CROSS APPLY FILTER_CONDITIONS_ADD_11PLUS
),
JOIN_LUTS AS (
  SELECT J_E.* 
        ,TGT_VAL 
        ,PROD.TGT_INS_PROD
    FROM JOIN_EXTRA AS J_E
    LEFT OUTER JOIN TB_XFM_LUT_INSURANCE_PRODUCT AS PROD
      ON  PROD.SRC_INSPINSTSEQNO = J_E.INSPINSTSEQNO--------------TODO--
   CROSS JOIN FILTER_MISC_INS01_I01_INS_PROD 
),
MAP_FROMSRC AS (
  SELECT J_L.* 
        ,INSPSUBACNO AS I01_SUB_ACC
        ,CASE  UDMH_INS_TYPE WHEN 'INDEMNITY' THEN 'N' ELSE NULL 
         END AS INS01_I01_HLC_OVERR
        ,CASE 
           WHEN MAR01_M01_STATUS = 'R'
            AND UDMH_INS_TYPE = 'HOUSEHOLD'
            AND INSPCANCELIND IS NULL
            AND INSPCOVERTO >= MIGR_DATE THEN 'Y'
           ELSE 'N'
         END AS INS01_I01_CONT_INS
        ,CASE UDMH_INS_TYPE WHEN 'INDEMNITY' THEN 'N' ELSE NULL
         END AS INS01_I01_FREE_HLC
        ,CASE UDMH_INS_TYPE WHEN 'NSI' THEN J_L.TGT_VAL ELSE J_L.TGT_INS_PROD  --NEED TO REVISIT 
         END AS INS01_I01_INS_PROD
        ,CASE 
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN 
             CASE 
               WHEN INSPCANCELIND = 'C' THEN 'C'
               WHEN INSPCOVERTO <= MIGR_DATE THEN 'C'
               ELSE 'L'
             END
           WHEN UDMH_INS_TYPE = 'INDEMNITY' THEN
             CASE 
               WHEN AC01_MAIN_ACPROCESSTATUS = 2 THEN 'L'
               WHEN AC01_MAIN_ACPROCESSTATUS IN (3,4) THEN 'C' 
             END
           WHEN UDMH_INS_TYPE = 'NSI' THEN 'L'
         END AS INS01_I01_INS_STATUS
        ,CASE 
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN
             CASE INSPDEBITFREQ
               WHEN 'A' THEN 'N'
               ELSE 'Y'
             END
           ELSE 'N'
         END AS INS01_I01_INSINREPAY
        ,CASE UDMH_INS_TYPE WHEN 'NSI' THEN 'N' ELSE NULL
         END AS INS01_I01_INT_NOTED       
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN TGT_INS_OPT1
           WHEN UDMH_INS_TYPE IN ('INDEMNITY','NSI') THEN NULL
         END AS INS01_I01_OPT1
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN TGT_INS_OPT2
           WHEN UDMH_INS_TYPE IN ('INDEMNITY','NSI') THEN NULL
         END AS INS01_I01_OPT2
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN TGT_INS_OPT3
           WHEN UDMH_INS_TYPE IN ('INDEMNITY','NSI') THEN NULL
         END AS INS01_I01_OPT3
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN TGT_INS_OPT4
           WHEN UDMH_INS_TYPE IN ('INDEMNITY','NSI') THEN NULL
         END AS INS01_I01_OPT4
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN TGT_INS_OPT5
           WHEN UDMH_INS_TYPE IN ('INDEMNITY','NSI') THEN NULL
         END AS INS01_I01_OPT5
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN TGT_INS_OPT6
           WHEN UDMH_INS_TYPE IN ('INDEMNITY','NSI') THEN NULL
         END AS INS01_I01_OPT6
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN TGT_INS_OPT7
           WHEN UDMH_INS_TYPE IN ('INDEMNITY','NSI') THEN NULL
         END AS INS01_I01_OPT7
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN TGT_INS_OPT8
           WHEN UDMH_INS_TYPE IN ('INDEMNITY','NSI') THEN NULL
         END AS INS01_I01_OPT8
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN TGT_INS_OPT9
           WHEN UDMH_INS_TYPE IN ('INDEMNITY','NSI') THEN NULL
         END AS INS01_I01_OPT9
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN TGT_INS_OPT10
           WHEN UDMH_INS_TYPE IN ('INDEMNITY','NSI') THEN NULL
         END AS INS01_I01_OPT10
        ,CASE 
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU','INDEMNITY') THEN INSPPOLICYNO
           WHEN UDMH_INS_TYPE  = 'NSI' THEN AC01_ACACNTNO + '/NSI'
         END AS INS01_I01_POLICY--TODO Log: UDMH_WARN.CODE
        --,dbo.FN_EXCEPTION(GETDATE(),INSPACNTNO,'','I01-DUPE-POLICYNO','L_INSPPOLICYNO,','','','','','',INSPPOLICYNO,'','','','','','W','X02_I01','N') AS EXCEPTION_6
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN 'Y' ELSE 'N'
         END AS INS01_I01_RENEW
        ,CASE UDMH_INS_TYPE WHEN 'ASU' THEN 'N' ELSE NULL
         END AS INS01_I01_RES_FLG
        ,CASE WHEN (SECOND_CHG_CNT > 0 OR THIRD_PTY_END_CNT > 0) THEN 'Y' ELSE 'N'
         END AS INS01_I01_THRD_INT
        ,CASE UDMH_INS_TYPE
           WHEN 'HOUSEHOLD' THEN (SELECT SUM1 FROM  FILTER_INS01_I01_ADD_PREM)
           ELSE 0
         END AS INS01_I01_ADD_PREM
        ,CASE UDMH_INS_TYPE WHEN 'ASU' THEN INS_RISKS_FIRSTASU_INSPRCLSEQNO1 ELSE NULL
         END AS I01_CUST_NO1
        ,CASE UDMH_INS_TYPE WHEN 'ASU' THEN INS_RISKS_FIRSTASU_INSPRCLSEQNO2 ELSE NULL
         END  AS I01_CUST_NO2
        ,CASE UDMH_INS_TYPE 
           WHEN 'ASU' THEN ROUND(( INS_RISKS_FIRSTASU_INSPRMPICL1MULT /INS_RISKS_FIRSTASU_INSPRMPICL1DIV )* INS_RISKS_FIRSTASU_INSPRSUMINSURED, 2)
           ELSE NULL
         END AS INS01_I01_CUST_PER1
        ,CASE 
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN  INSPCANCELDATE
           WHEN (UDMH_INS_TYPE = 'INDEMNITY' AND AC01_MAIN_ACPROCESSTATUS IN (3,4)) THEN ACO1_MAIN_ACCLRDATE
           WHEN UDMH_INS_TYPE = 'NSI' THEN NULL
         END AS I01_CANC_DT
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN INS_PREV1_INSPCOVERFROM ELSE NULL
         END AS I01_HIS_1_DT
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN INS_PREV2_INSPCOVERFROM ELSE NULL
         END AS I01_HIS_2_DT
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN INS_PREV3_INSPCOVERFROM ELSE NULL
         END AS I01_HIS_3_DT
        ,CASE UDMH_INS_TYPE 
           WHEN 'HOUSEHOLD'  THEN INS_RISKS_PREV1BUILDINGS_INSPRSUMINSURED
           WHEN 'ASU'        THEN INS_RISKS_PREV1FIRSTASU_INSPRSUMINSURED
           WHEN 'INDEMNITY'  THEN NULL
           WHEN 'NSI'        THEN NULL
         END AS INS01_I01_HIS_COVER1
        ,CASE UDMH_INS_TYPE 
           WHEN 'HOUSEHOLD' THEN INS_RISKS_PREV2BUILDINGS_INSPRSUMINSURED
           WHEN 'ASU'       THEN INS_RISKS_PREV2FIRSTASU_INSPRSUMINSURED
           WHEN 'INDEMNITY' THEN NULL
           WHEN 'NSI'       THEN NULL
         END AS INS01_I01_HIS_COVER2
        ,CASE UDMH_INS_TYPE 
           WHEN 'HOUSEHOLD' THEN INS_RISKS_PREV3BUILDINGS_INSPRSUMINSURED
           WHEN 'ASU'       THEN INS_RISKS_PREV3FIRSTASU_INSPRSUMINSURED
           WHEN 'INDEMNITY' THEN NULL
           WHEN 'NSI'       THEN NULL
         END AS INS01_I01_HIS_COVER3
        ,CASE UDMH_INS_TYPE
           WHEN 'HOUSEHOLD' THEN INS_RISKS_BUILDINGS_INSPRSUMINSURED
           WHEN 'ASU'       THEN INS_RISKS_FIRSTASU_INSPRSUMINSURED
           WHEN 'INDEMNITY' THEN INS_RISKS_INDEMNITY_INSPRSUMINSURED
           WHEN 'NSI'       THEN COALESCE( AC01_MAIN_ACHLATESTVALUATION, 1)
         END AS INS01_I01_INS_COVER 
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU')
            AND INSPDEBITFREQ = 'A' THEN INSPPREMIUM
           ELSE NULL
         END AS INS01_I01_INS_DEBIT
        ,CASE 
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU','INDEMNITY') THEN  INSPPREMIUMTAX
           WHEN UDMH_INS_TYPE = 'NSI' THEN NULL
         END AS INS01_I01_IPT_AMT
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN  INSPPREMIUM ELSE NULL
         END AS INS01_I01_MTH_PREM
        ,CASE
          WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU')
           AND INS_FUTR1_INSPACNTNO IS NOT NULL THEN INS_FUTR1_INSPCOVERFROM
          ELSE NULL
         END AS I01_NEW_DT
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU')
            AND INS_FUTR1_INSPDEBITFREQ = 'A'
            AND INS_FUTR1_INSPACNTNO IS NOT NULL THEN INS_FUTR1_INSPPREMIUM
           ELSE 0
         END AS INS01_I01_NEW_DEBIT
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU')
            AND INS_FUTR1_INSPACNTNO IS NOT NULL THEN INS_FUTR1_INSPPREMIUMTAX
           ELSE NULL
         END AS INS01_I01_NEW_IPT
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU')
            AND INS_FUTR1_INSPACNTNO IS NOT NULL THEN INS_FUTR1_INSPPREMIUM
           ELSE NULL
         END AS INS01_I01_NEW_MTH
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU')
            AND INS_FUTR1_INSPDEBITFREQ= 'A'
            AND INS_FUTR1_INSPACNTNO IS NOT NULL THEN (INS_FUTR1_INSPPREMIUM - INS_FUTR1_INSPPREMIUMTAX)
           ELSE 0
         END AS INS01_I01_NEW_NET
        ,CASE UDMH_INS_TYPE WHEN 'NSI' THEN 20561231 ELSE NULL
         END AS I01_NSIREN_DT
        ,CASE UDMH_INS_TYPE WHEN 'INDEMNITY' THEN INSPPREMIUM
         END AS INS01_I01_PRSNL_COV
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN 
             CASE
               WHEN MONTH( E_INSPCOVERFROM ) = MONTH(INSPPOLICYDATE )
                AND DAY( E_INSPCOVERFROM ) = DAY(INSPPOLICYDATE ) THEN E_INSPCOVERFROM
               ELSE INSPPOLICYDATE
             END
           WHEN UDMH_INS_TYPE = 'INDEMNITY' THEN E_INSPPOLICYDATE
           WHEN UDMH_INS_TYPE = 'NSI' THEN COALESCE((SELECT DATE_ADD FROM FILTER_DATEADD),AC01_MAIN_ACINCEPDATE )
         END AS I01_START_DT
        ,CASE UDMH_INS_TYPE WHEN 'HOUSEHOLD' THEN INS_RISKS_CONTENTS_INSPRSUMINSURED ELSE NULL
         END AS INS01_I01_CON_COVER
        ,CASE UDMH_INS_TYPE WHEN 'NSI' THEN 'Y' ELSE NULL
         END AS I01_NONBIN
        ,CASE UDMH_INS_TYPE 
           WHEN 'HOUSEHOLD' THEN INS_RISKS_FUTR1BUILDINGS_INSPRSUMINSURED
           WHEN 'ASU' THEN INS_RISKS_FUTR1FIRSTASU_INSPRSUMINSURED
           ELSE 0
         END AS INS01_I01_NEW_COVER
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU','INDEMNITY') THEN  INSPCOMISION
           WHEN UDMH_INS_TYPE = 'NSI' THEN 0
         END AS INS01_I01_COMM_PREM
        ,CASE UDMH_INS_TYPE WHEN 'HOUSEHOLD' THEN INS_RISKS_FUTR1CONTENTS_INSPRSUMINSURED ELSE NULL
         END AS INS01_I01_REN_CONCOV
        ,CASE UDMH_INS_TYPE WHEN 'HOUSEHOLD' THEN INS_RISKS_FUTR1BUILDINGS_INSPRSUMINSURED ELSE NULL
         END AS INS01_I01_REN_INSCOV
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN DEL_TGT_INS_OPT1 ELSE NULL
         END AS INS01_I01_REN_DEL1
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN DEL_TGT_INS_OPT2 ELSE NULL
         END AS INS01_I01_REN_DEL2
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN DEL_TGT_INS_OPT3 ELSE NULL
         END AS INS01_I01_REN_DEL3
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN DEL_TGT_INS_OPT4 ELSE NULL
         END AS INS01_I01_REN_DEL4
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN DEL_TGT_INS_OPT5 ELSE NULL
         END AS INS01_I01_REN_DEL5
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN DEL_TGT_INS_OPT6 ELSE NULL
         END AS INS01_I01_REN_DEL6
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN DEL_TGT_INS_OPT7 ELSE NULL
         END AS INS01_I01_REN_DEL7
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN DEL_TGT_INS_OPT8 ELSE NULL
         END AS INS01_I01_REN_DEL8
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN DEL_TGT_INS_OPT9 ELSE NULL
         END AS INS01_I01_REN_DEL9
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN DEL_TGT_INS_OPT10 ELSE NULL
         END AS INS01_I01_REN_DEL10
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN ADD_TGT_INS_OPT1 ELSE NULL
         END AS INS01_I01_REN_OPT1
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN ADD_TGT_INS_OPT2 ELSE NULL
         END AS INS01_I01_REN_OPT2
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN ADD_TGT_INS_OPT3 ELSE NULL
         END AS INS01_I01_REN_OPT3
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN ADD_TGT_INS_OPT4 ELSE NULL
         END AS INS01_I01_REN_OPT4
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN ADD_TGT_INS_OPT5 ELSE NULL
         END AS INS01_I01_REN_OPT5
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN ADD_TGT_INS_OPT6 ELSE NULL
         END AS INS01_I01_REN_OPT6
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN ADD_TGT_INS_OPT7 ELSE NULL
         END AS INS01_I01_REN_OPT7
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN ADD_TGT_INS_OPT8 ELSE NULL
         END AS INS01_I01_REN_OPT8
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN ADD_TGT_INS_OPT9 ELSE NULL
         END AS INS01_I01_REN_OPT9
        ,CASE WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU') THEN ADD_TGT_INS_OPT10 ELSE NULL
         END AS INS01_I01_REN_OPT10
    FROM JOIN_LUTS AS J_L
),
MAP_DEPENDANT AS (
  SELECT M_SRC.*
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU')
            AND INS01_I01_INSINREPAY = 'Y'  THEN INSPPREMIUM
           ELSE 0
         END AS INS01_I01_CMS_PREM
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU','INDEMNITY') THEN INSPCOVERFROM
           WHEN UDMH_INS_TYPE = 'NSI' THEN I01_START_DT
         END AS I01_COVER_DT
        ,CASE UDMH_INS_TYPE WHEN 'ASU' THEN (INS_RISKS_FIRSTASU_INSPRSUMINSURED - INS01_I01_CUST_PER1) ELSE NULL
         END AS INS01_I01_CUST_PER2
        ,(INS01_I01_MTH_PREM-INS01_I01_IPT_AMT) AS INS01_I01_NET_NPREM
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU')
            AND INS01_I01_INSINREPAY = 'Y'
            AND INS_FUTR1_INSPACNTNO IS NOT NULL THEN INS_FUTR1_INSPPREMIUM
           ELSE NULL
         END AS INS01_I01_NEW_CMSI
        ,CASE
           WHEN UDMH_INS_TYPE IN ('HOUSEHOLD','ASU','INDEMNITY') THEN 
             CASE
               WHEN (F_INSPPOLICYDATE < F_INSPLASTCHNGDATE) THEN F_INSPPOLICYDATE
               ELSE F_INSPLASTCHNGDATE
             END
           WHEN UDMH_INS_TYPE = 'NSI' THEN I01_START_DT
         END AS I01_ST_POL_DT
        ,CASE WHEN INS01_I01_CONT_INS = 'Y' THEN INSPCOVERTO ELSE NULL
         END AS INS01_I01_EXPIRY_DT
    FROM MAP_FROMSRC AS M_SRC
),
MAP_DEPENDANT1 AS (
  SELECT M_DEP.*
        ,I01_COVER_DT AS I01_CUR_DT
    FROM MAP_DEPENDANT AS M_DEP
),
MAP_DEFAULTS AS (  
  SELECT M_DEP1.*
        ,'I01' AS I01_CODE
        ,'N' AS INS01_I01_CLAIM_PEND
        ,'N' AS INS01_I01_CLAIM_PROG
        ,'N' AS INS01_I01_EXC_DEL
        ,'UNKNOWN' AS INS01_I01_NMEPLCHLD
        ,NULL AS INS01_I01_PAY_BY_DD
        ,NULL AS INS01_I01_PROD_CAT
        ,'N' AS INS01_I01_TRP_OUT
        ,0 AS INS01_I01_COMM_RATE
        ,NULL AS I01_CUST_NO3
        ,NULL AS I01_CUST_NO4
        ,NULL AS INS01_I01_CUST_PER3
        ,NULL AS INS01_I01_CUST_PER4
        ,NULL AS INS01_I01_ENDOW_COV
        ,NULL AS INS01_I01_PERS_COV
        ,0 AS INS01_I01_PREM_ADJU
        ,NULL AS I01_FRINSEXP_DT
        ,'N' AS INS01_I01_FEE_CHG
        ,NULL AS I01_CLMOCC_DT
        ,NULL AS I01_CLMSET_DT
        ,NULL AS INS01_I01_E_NCD_YRS
        ,NULL AS INS01_I01_E_STAFF
        ,NULL AS INS01_I01_EOM_ADDPRM
        ,NULL AS INS01_I01_EOM_CMSPRM
        ,NULL AS I01_EOM_COV_DT
        ,NULL AS I01_EOM_CUR_DT
        ,NULL AS I01_EOM_DT_CAN
        ,NULL AS I01_EOM_DT_HS1
        ,NULL AS I01_EOM_DT_HS2
        ,NULL AS I01_EOM_DT_HS3
        ,NULL AS INS01_I01_EOM_INSCOV
        ,NULL AS INS01_I01_EOM_INSDBT
        ,NULL AS INS01_I01_EOM_INSSTA
        ,NULL AS INS01_I01_EOM_MTHPRM
        ,NULL AS INS01_I01_EOM_NCDYRS
        ,NULL AS I01_EOM_NEW_DT
        ,NULL AS INS01_I01_EOM_NEWMTH
        ,NULL AS INS01_I01_EOM_RSK_AR
        ,NULL AS I01_EOM_STR_DT
        ,NULL AS I01_NCD_DT
        ,NULL AS INS01_I01_NCD_YRS
        ,NULL AS INS01_I01_NX_NX_RENW
        ,NULL AS I01_STAFF_DT
        ,NULL AS INS01_I01_STAFFDISID
        ,NULL AS INS01_I01_BACK_DATE
        ,NULL AS INS01_I01_FUT_START
        ,NULL AS INS01_I01_GROSS_PREM
        ,NULL AS INS01_I01_GROSS_RATE
        ,'N' AS INS15_I01_MCRI_REG
        ,'N' AS INS01_I01_MTG_MAN
        ,NULL AS INS01_I01_NEW_COMM
        ,0 AS INS15_I01_NSI_AMT
        ,NULL AS INS01_I01_OBLTERM_MM
        ,NULL AS INS01_I01_OBLTERM_YY
        ,'E' AS INS01_I01_POLICY_TYP
        ,NULL AS INS01_I01_REAS_CODE
        ,NULL AS INS01_I01_REASON_CD
        ,'N' AS INS15_I01_REN_FREQ
        ,NULL AS INS01_I01_TEXT1
        ,'N' AS INS01_I01_UNWRIT_REQ
        ,'N' AS INS15_I01_BY_FST_CHG
        ,NULL AS INS67_I01_ENDOR_TEXT
        ,NULL AS INS15_I01_FSA_REF
        ,NULL AS INS01_I01_FA_PREM
        ,NULL AS INS01_I01_FA_APPNO
        ,NULL AS INS01_I01_FA_COVINC
        ,NULL AS INS01_I01_FA_NEWINS
        ,NULL AS I01_NCD_LETDTE
        ,NULL AS INS01_I01_PRV_NCD
        ,NULL AS INS01_I01_ASUEXCUSTS
        ,NULL AS I01_EXT_RENDTE
        ,NULL AS INS01_I01_OTH_CLASS
    FROM MAP_DEPENDANT1 AS M_DEP1
 ),
MAP_SIGN AS (
  SELECT M_DEF.*
        ,CASE
           WHEN INS01_I01_IPT_AMT > 0 THEN '+'
           WHEN INS01_I01_IPT_AMT < 0 THEN '-'
           ELSE ' '
         END AS I01_IPT_AMT_SIGN
        ,CASE
           WHEN INS01_I01_PREM_ADJU > 0 THEN '+'
           WHEN INS01_I01_PREM_ADJU < 0 THEN '-'
           ELSE ' '
         END AS I01_PREM_ADJU_SIGN
    FROM MAP_DEFAULTS AS M_DEF
),
OUT_FIELDS AS (
  SELECT AC01_MAIN_2_ACACNTNO  AS X02KEY
        ,I01_CODE
        ,I01_SUB_ACC
        ,INS01_I01_HLC_OVERR
        ,INS01_I01_CLAIM_PEND
        ,INS01_I01_CLAIM_PROG
        ,INS01_I01_CONT_INS
        ,INS01_I01_EXC_DEL
        ,INS01_I01_FREE_HLC
        ,INS01_I01_INS_PROD
        ,INS01_I01_INS_STATUS
        ,INS01_I01_INSINREPAY
        ,INS01_I01_INT_NOTED
        ,INS01_I01_NMEPLCHLD
        ,INS01_I01_OPT1
        ,INS01_I01_OPT2
        ,INS01_I01_OPT3
        ,INS01_I01_OPT4
        ,INS01_I01_OPT5
        ,INS01_I01_OPT6
        ,INS01_I01_OPT7
        ,INS01_I01_OPT8
        ,INS01_I01_OPT9
        ,INS01_I01_OPT10
        ,INS01_I01_PAY_BY_DD
        ,INS01_I01_POLICY
        ,INS01_I01_PROD_CAT
        ,INS01_I01_RENEW
        ,INS01_I01_RES_FLG
        ,INS01_I01_THRD_INT
        ,INS01_I01_TRP_OUT
        ,INS01_I01_ADD_PREM
        ,INS01_I01_CMS_PREM
        ,INS01_I01_COMM_RATE
        ,I01_COVER_DT
        ,I01_CUR_DT
        ,I01_CUST_NO1
        ,I01_CUST_NO2
        ,I01_CUST_NO3
        ,I01_CUST_NO4 
        ,INS01_I01_CUST_PER1
        ,INS01_I01_CUST_PER2
        ,INS01_I01_CUST_PER3
        ,INS01_I01_CUST_PER4
        ,I01_CANC_DT
        ,I01_HIS_1_DT
        ,I01_HIS_2_DT
        ,I01_HIS_3_DT
        ,INS01_I01_ENDOW_COV
        ,INS01_I01_HIS_COVER1
        ,INS01_I01_HIS_COVER2
        ,INS01_I01_HIS_COVER3
        ,INS01_I01_INS_COVER
        ,INS01_I01_INS_DEBIT
        ,I01_IPT_AMT_SIGN
        ,INS01_I01_IPT_AMT
        ,INS01_I01_MTH_PREM
        ,INS01_I01_NET_NPREM
        ,INS01_I01_NEW_CMSI
        ,I01_NEW_DT
        ,INS01_I01_NEW_DEBIT
        ,INS01_I01_NEW_IPT
        ,INS01_I01_NEW_MTH
        ,INS01_I01_NEW_NET
        ,I01_NSIREN_DT
        ,INS01_I01_PERS_COV
        ,I01_PREM_ADJU_SIGN
        ,INS01_I01_PREM_ADJU
        ,INS01_I01_PRSNL_COV
        ,I01_START_DT
        ,I01_ST_POL_DT
        ,INS01_I01_CON_COVER
        ,I01_FRINSEXP_DT
        ,INS01_I01_FEE_CHG
        ,I01_NONBIN
        ,I01_CLMOCC_DT
        ,I01_CLMSET_DT
        ,INS01_I01_E_NCD_YRS
        ,INS01_I01_E_STAFF
        ,INS01_I01_EOM_ADDPRM
        ,INS01_I01_EOM_CMSPRM
        ,I01_EOM_COV_DT
        ,I01_EOM_CUR_DT
        ,I01_EOM_DT_CAN
        ,I01_EOM_DT_HS1
        ,I01_EOM_DT_HS2
        ,I01_EOM_DT_HS3
        ,INS01_I01_EOM_INSCOV
        ,INS01_I01_EOM_INSDBT
        ,INS01_I01_EOM_INSSTA
        ,INS01_I01_EOM_MTHPRM
        ,INS01_I01_EOM_NCDYRS
        ,I01_EOM_NEW_DT
        ,INS01_I01_EOM_NEWMTH
        ,INS01_I01_EOM_RSK_AR
        ,I01_EOM_STR_DT
        ,I01_NCD_DT
        ,INS01_I01_NCD_YRS
        ,INS01_I01_NEW_COVER
        ,INS01_I01_NX_NX_RENW
        ,I01_STAFF_DT
        ,INS01_I01_STAFFDISID
        ,INS01_I01_BACK_DATE
        ,INS01_I01_COMM_PREM
        ,INS01_I01_FUT_START
        ,INS01_I01_GROSS_PREM
        ,INS01_I01_GROSS_RATE
        ,INS15_I01_MCRI_REG
        ,INS01_I01_MTG_MAN
        ,INS01_I01_NEW_COMM
        ,INS15_I01_NSI_AMT
        ,INS01_I01_OBLTERM_MM
        ,INS01_I01_OBLTERM_YY
        ,INS01_I01_POLICY_TYP
        ,INS01_I01_REAS_CODE
        ,INS01_I01_REASON_CD
        ,INS15_I01_REN_FREQ
        ,INS01_I01_TEXT1
        ,INS01_I01_UNWRIT_REQ
        ,INS15_I01_BY_FST_CHG
        ,INS67_I01_ENDOR_TEXT
        ,INS15_I01_FSA_REF
        ,INS01_I01_FA_PREM
        ,INS01_I01_FA_APPNO
        ,INS01_I01_FA_COVINC
        ,INS01_I01_FA_NEWINS
        ,INS01_I01_REN_CONCOV
        ,INS01_I01_REN_INSCOV
        ,INS01_I01_REN_DEL1
        ,INS01_I01_REN_DEL2
        ,INS01_I01_REN_DEL3
        ,INS01_I01_REN_DEL4
        ,INS01_I01_REN_DEL5
        ,INS01_I01_REN_DEL6
        ,INS01_I01_REN_DEL7
        ,INS01_I01_REN_DEL8
        ,INS01_I01_REN_DEL9
        ,INS01_I01_REN_DEL10
        ,INS01_I01_REN_OPT1
        ,INS01_I01_REN_OPT2
        ,INS01_I01_REN_OPT3
        ,INS01_I01_REN_OPT4
        ,INS01_I01_REN_OPT5
        ,INS01_I01_REN_OPT6
        ,INS01_I01_REN_OPT7
        ,INS01_I01_REN_OPT8
        ,INS01_I01_REN_OPT9
        ,INS01_I01_REN_OPT10
        ,INS01_I01_EXPIRY_DT
        ,I01_NCD_LETDTE
        ,INS01_I01_PRV_NCD
        ,INS01_I01_ASUEXCUSTS
        ,I01_EXT_RENDTE
        ,INS01_I01_OTH_CLASS
        ,UDMH_INS_TYPE
        ,UDMH_INSTYPE
    FROM MAP_SIGN AS M_SIGN
 )
  SELECT *
    FROM OUT_FIELDS
    
GO
/*
 * Author: Aishwarya Rao
 * Creation Date: 06/07/2015
 * Description: This SQL code applies business transformation for X02_I02 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0         06/07/2015      Aishwarya Rao           Based on Mapping Spec version v0.7
    2.0         11/08/2015      Aishwarya Rao           Added Exception Handling
    3.0         21/08/2015      Aishwarya Rao           Based on Mapping Spec Version V0.9
    4.0         24/11/2015      Aishwarya Rao           Based on Mapping Spec Version v1.3
    5.0         08/12/2015      Aishwarya Rao           Refined the code
 *-----------------------------------------------------------------------------------------------------
 */

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.VW_X02_I02') AND type in (N'V'))
DROP VIEW dbo.VW_X02_I02
GO 
 
CREATE VIEW dbo.VW_X02_I02
AS
WITH 
FILTER_INSPSPECIFIEDITEMS_SCHEDULED AS (
  SELECT INSPSIPOLICYSEQNO
        ,INSPSIINSPRRISKNO
        ,INSPSIEFDATETO
        ,INSPSIITEMTYPE
        ,INSPSIEFDATEFROM
        ,INSPSISHORTDSCR
    FROM TB_SRC_INSPSPECIFIEDITEMS AS INSPSPECIFIEDITEMS
   WHERE INSPSPECIFIEDITEMS.INSPSISCHEDULED = 'Y'
),
FILTER_INSURANCEPOLICIES_HOUSEHOLD AS (
  SELECT I01_SUB_ACC
        ,INS01_I01_INS_PROD 
        ,INS01_I01_POLICY
        ,INSPSEQNO
        ,INSPCOVERTO
        ,INSPPOLICYNO
        ,INSPACNTNO
    FROM VW_X02_I01
   INNER JOIN VW_FILTER_INSURANCEPOLICIES_LATEST 
      ON X02KEY = INSPACNTNO
   WHERE UDMH_INS_TYPE='HOUSEHOLD' --Need to check on the join condition with VW_FILTER_INSURANCEPOLICIES_LATEST
),
FILTER_MISC_LUT_FOR_RA_NO AS (
  SELECT TGT_VAL AS TGT_VAL_RA_NO
    FROM TB_XFM_LUT_MISC
   WHERE SRC_KEY = 'INS-RA-TABLE'
),
FILTER_MISC_LUT_FOR_RATE_CODE AS (
  SELECT TGT_VAL AS TGT_VAL_RATE_CODE
    FROM TB_XFM_LUT_MISC 
   WHERE SRC_KEY = 'INS-RA-CODE'
),
FILTER_COUNT_SPECIFIEDITEMS AS (
  SELECT COUNT(*) AS CNT_SPECIFIEDITEMS
         ,INSPSEQNO
    FROM FILTER_INSURANCEPOLICIES_HOUSEHOLD AS FLT_INSURANCEPOLICIES_HOUSEHOLD
    INNER JOIN FILTER_INSPSPECIFIEDITEMS_SCHEDULED AS FLT_INSPSPECIFIEDITEMS 
      ON FLT_INSURANCEPOLICIES_HOUSEHOLD.INSPSEQNO = FLT_INSPSPECIFIEDITEMS.INSPSIPOLICYSEQNO
    INNER JOIN TB_SRC_INSURANCEPOLICYRISKS AS INSURANCEPOLICYRISKS
      ON FLT_INSPSPECIFIEDITEMS.INSPSIPOLICYSEQNO = INSURANCEPOLICYRISKS.INSPRINSPSEQNO
     AND FLT_INSPSPECIFIEDITEMS.INSPSIINSPRRISKNO = INSURANCEPOLICYRISKS.INSPRRISKNO
   GROUP BY INSPSEQNO
),
JOIN_WRITECRITERIA AS (              --TODO : LOG UDMH_WARN.CODE IN CASE THERE ARE MORE THAN 9 SPECIFIED ITEMS FOR EACH POLICY
  SELECT TOP 9 FLT_INSURANCEPOLICIES_HOUSEHOLD.*
        ,FLT_INSPSPECIFIEDITEMS.*
        ,INSPRSUMINSURED
        ,INSPRPREMIUM
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             INS01_I01_POLICY
           ORDER BY 
             INSURANCEPOLICYRISKS.INSPRRISKNO
           ) AS ROW_NUM
        ,(SELECT CNT_SPECIFIEDITEMS 
            FROM FILTER_COUNT_SPECIFIEDITEMS AS FLT_COUNT_SPECIFIEDITEMS
           WHERE FLT_COUNT_SPECIFIEDITEMS.INSPSEQNO = FLT_INSPSPECIFIEDITEMS.INSPSIPOLICYSEQNO) AS CNT_SPECIFIED_ITEMS
    FROM FILTER_INSURANCEPOLICIES_HOUSEHOLD AS FLT_INSURANCEPOLICIES_HOUSEHOLD
    INNER JOIN FILTER_INSPSPECIFIEDITEMS_SCHEDULED AS FLT_INSPSPECIFIEDITEMS 
      ON FLT_INSURANCEPOLICIES_HOUSEHOLD.INSPSEQNO = FLT_INSPSPECIFIEDITEMS.INSPSIPOLICYSEQNO
    INNER JOIN TB_SRC_INSURANCEPOLICYRISKS AS INSURANCEPOLICYRISKS
      ON FLT_INSPSPECIFIEDITEMS.INSPSIPOLICYSEQNO = INSURANCEPOLICYRISKS.INSPRINSPSEQNO
     AND FLT_INSPSPECIFIEDITEMS.INSPSIINSPRRISKNO = INSURANCEPOLICYRISKS.INSPRRISKNO
   ORDER BY INSURANCEPOLICYRISKS.INSPRRISKNO
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,WS_MIGR_DATE
    FROM JOIN_WRITECRITERIA AS J_WC
   CROSS JOIN TB_UDMH_CTL
),
JOIN_LUTS AS (
  SELECT J_EXTRA.*
        ,FLT_MISC_LUT_FOR_RA_NO.TGT_VAL_RA_NO
        ,FLT_MISC_LUT_FOR_RATE_CODE.TGT_VAL_RATE_CODE
        ,INS_ITEM_LUT.TGT_SP_ITM_CD
    FROM JOIN_EXTRA AS J_EXTRA
    LEFT OUTER JOIN TB_XFM_LUT_INSURANCE_ITEM AS INS_ITEM_LUT
      ON INS_ITEM_LUT.SRC_INSPSIITEMTYPE = J_EXTRA.INSPSIITEMTYPE
   CROSS JOIN FILTER_MISC_LUT_FOR_RATE_CODE AS FLT_MISC_LUT_FOR_RATE_CODE
   CROSS JOIN FILTER_MISC_LUT_FOR_RA_NO AS FLT_MISC_LUT_FOR_RA_NO
),
MAP_FROMSRC AS (
  SELECT J_LUTS.*
        ,INSPACNTNO AS X02KEY
        ,J_LUTS.INS01_I01_INS_PROD AS INS09_I02_INS_PROD
        ,CASE 
           WHEN J_LUTS.INSPSIEFDATETO <= J_LUTS.INSPCOVERTO AND J_LUTS.INSPSIEFDATETO <= dbo.FN_FIRST_OF_NEXT_MONTH(J_LUTS.WS_MIGR_DATE) THEN J_LUTS.INSPSIEFDATETO
           WHEN J_LUTS.INSPSIEFDATETO > J_LUTS.INSPCOVERTO AND J_LUTS.INSPSIEFDATETO > dbo.FN_FIRST_OF_NEXT_MONTH(J_LUTS.WS_MIGR_DATE) THEN NULL
           ELSE NULL         
         END AS I02_CANC_DT
        ,J_LUTS.TGT_VAL_RA_NO AS INS09_I02_RA_NO
        ,J_LUTS.TGT_VAL_RATE_CODE AS INS09_I02_RATE_CODE
        ,J_LUTS.INSPRSUMINSURED AS INS09_I02_SP_COVER
        ,J_LUTS.INSPRPREMIUM AS INS09_I02_SP_DEBIT
        ,J_LUTS.TGT_SP_ITM_CD AS INS09_I02_SP_ITM_CD
        ,J_LUTS.ROW_NUM AS INS09_I02_SP_ITM_LN
        ,J_LUTS.INSPSIEFDATEFROM AS I02_START_DT
    FROM JOIN_LUTS AS J_LUTS
),
MAP_DEFAULTS AS (
  SELECT MAP_FROMSRC.*
        ,'I02' AS I02_CODE
        ,NULL AS I02_SUB_ACC 
        ,NULL AS INS09_I02_SP_DESC 
        ,NULL AS INS09_I02_SP_RATE
    FROM MAP_FROMSRC
),
MAP_EXCEPTIONS AS (
  SELECT MAP_DEFAULTS.*
        ,CASE
           WHEN MAP_DEFAULTS.INSPSIEFDATETO > MAP_DEFAULTS.INSPCOVERTO AND MAP_DEFAULTS.INSPSIEFDATETO > dbo.FN_FIRST_OF_NEXT_MONTH(MAP_DEFAULTS.WS_MIGR_DATE) THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION3('X02_M01','M:MANUAL',MAP_DEFAULTS.X02KEY,'I02-FUTR-CANC-DT',NULL,'INSURANCEPOLICIES<Latest>.INSPPOLICYNO',INSPPOLICYNO,'INSPSPECIFIEDITEMS.INSPSIEFDATETO',INSPSIEFDATETO))
         END AS EXCEPTION_1
        ,CASE 
           WHEN MAP_DEFAULTS.CNT_SPECIFIED_ITEMS > 9 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_I02','W:WARNING',MAP_DEFAULTS.X02KEY,'I02-SP-ITEM-10+',CNT_SPECIFIED_ITEMS)) 
         END AS EXCEPTION_2
    FROM MAP_DEFAULTS
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,I02_CODE
        ,I02_SUB_ACC           --TODO : CASE OF EXPLICIT DEFAULT; REVISIT ONCE RULE FOR I01-SUB-ACC COMPLETES
        ,INS09_I02_INS_PROD
        ,INS09_I02_SP_DESC     --TODO : CASE OF EXPLICIT DEFAULT; REVISIT ONCE RULE COMPLETES
        ,I02_CANC_DT           --TODO LOG UDMH_MANUAL.CODE
        ,INS09_I02_RA_NO
        ,INS09_I02_RATE_CODE
        ,INS09_I02_SP_COVER
        ,INS09_I02_SP_DEBIT
        ,INS09_I02_SP_ITM_CD
        ,INS09_I02_SP_ITM_LN
        ,INS09_I02_SP_RATE
        ,I02_START_DT
        ,CASE 
           WHEN CAST(CONCAT(
                            CAST(MAP_EXCEPTIONS.EXCEPTION_1 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_2 AS NVARCHAR(MAX))
                           ) AS NVARCHAR(MAX)) = ' ' THEN NULL 
           ELSE CAST(CONCAT(
                            CAST(MAP_EXCEPTIONS.EXCEPTION_1 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_2 AS NVARCHAR(MAX))
                           ) AS XML)              
         END  AS X02_UDMH_EXCEPTION 
    FROM MAP_EXCEPTIONS
)
SELECT *
  FROM OUT_FIELDS
GO
/*
 * Author: Aishwarya Rao
 * Creation Date: 04/06/2015
 * Description: This SQL code applies business transformation for X02_M01 target type.
 * Revision History:
 *--------------------------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *--------------------------------------------------------------------------------------------------------------------
    1.0         04/06/2015      Aishwarya Rao           Based on Mapping Spec Version v0.1
    2.0         30/06/2015      Aishwarya Rao           Based on Mapping Spec Version v0.5 
    3.0         13/07/2015      Aishwarya Rao           Based on Mapping Spec Version v0.6
    4.0         17/07/2015      Aishwarya Rao           Based on Mapping Spec Version v0.7
    5.0         19/08/2015      Aishwarya Rao           Based on Mapping Spec Version v0.8
    6.0         11/09/2015      Aishwarya Rao           Based on Mapping Spec Version v1.0
    7.0         01/10/2015      Aishwarya Rao           Removed dependencies on C03; modified FN_ADDR_COMPARE
    8.0         12/10/2015      Aishwarya Rao           Based on Mapping Spec Version v1.1
    9.0         28/10/2015      Aishwarya Rao           Further changes as per Spec Version v1.1
   10.0         30/10/2015      Aishwarya Rao           Based on Mapping Spec Version v1.2
   11.0         24/11/2015      Aishwarya Rao           Based on Mapping Spec Version v1.3
   12.0         01/12/2015      Aishwarya Rao           Rework based on review comments
   13.0         04/12/2015      Aishwarya Rao           Modified the logic for the field viz. MAR01_M01_DUE_DATE
   14.0         11/12/2015      Aishwarya Rao           Used TB_SRC_HLDLNKS instead of Tb_SRC_HLDLNKS;
	                                                    Corrected the default value for the field MAR01.M01-PERC-EQT
   15.0         14/12/2015      Aishwarya Rao           Reverted changes to Tb_SRC_HLDLNKS
   16.0         16/12/2015      Aishwarya Rao           Modified filter for MAR01.M01-BRAND-CODE
 *--------------------------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.VW_X02_M01') AND type in (N'V'))
DROP VIEW dbo.VW_X02_M01
GO 
 
CREATE VIEW dbo.VW_X02_M01
AS 
WITH
FILTER_AC01D AS (
  SELECT ACNTNO,PENDINGDELETE
        ,WFLLVL1
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             ACNTNO 
           ORDER BY 
             ACNTSUBNO
           ) AS RN
    FROM TB_SRC_AC01D
   WHERE PENDINGDELETE = 'F'
),
FILTER_AC01D_UNIQUE AS (
  SELECT *
    FROM FILTER_AC01D
   WHERE RN = 1
),
FILTER_ACNTLNKS_MAR01_M01_ALLOW_CORR AS (
  SELECT ACLACNTNO 
        ,ACLSUBACNO
        ,COUNT(1) AS CNT_ACNTLNKS
    FROM TB_SRC_ACNTLNKS
   INNER JOIN TB_SRC_CLUSAGECODES
      ON ACLCLUSAGE = CUCDCLUSAGE
   INNER JOIN TB_SRC_CLIENTS 
      ON ACLCLSEQNO = CLSEQNO 
    LEFT OUTER JOIN TB_SRC_CWCUSTOMER
      ON CLALTCLNO = CUSTOMERNO 
   CROSS JOIN TB_UDMH_CTL
   WHERE CUCDACNTHLDERIND = 'Y'
     AND CASE
           WHEN SOURCE = 'RED' THEN DATEOFDEATH
           WHEN SOURCE = 'BLUE' THEN CLPDATEDECEASED
         END IS NULL 
   GROUP BY 
         ACLACNTNO
        ,ACLSUBACNO
), 
FILTER_HLDLNKS_MAR01_M01_ALLOW_CORR AS ( 
  SELECT HLDLACNTNO
        ,COUNT(1) AS CNT_HLDLNKS_SUS_NOCOR
    FROM TB_SRC_HLDLNKS 
   CROSS JOIN TB_UDMH_CTL
   WHERE HLDLFROMDATE <= WS_MIGR_DATE
     AND (HLDLTODATE IS NULL OR HLDLTODATE >= WS_MIGR_DATE)
     AND HLDLCODE IN ('SUS','NOCOR')
   GROUP BY HLDLACNTNO
),
FILTER_MAR01_M01_CNTRY_CDE AS (
  SELECT TGT_CNTRY_CDE
        ,ADRADRNO
    FROM TB_XFM_LUT_CNTRY_CDE
   INNER JOIN TB_SRC_ADRESES
      ON ADRCOUNTRYCODE = SRC_ADRESES_ADRCOUNTRYCODE
),
FILTER_DSS_COUNT AS (
  SELECT COUNT(1) AS CNT_DSS
        ,ACNTNO
    FROM TB_SRC_AC06C
   WHERE INDBLOCK = 1
     AND INDICATORS = '1'
   GROUP BY ACNTNO
),
FILTER_SUSPENDCASE_COUNT AS (
  SELECT COUNT(1) AS CNT_SUSPENDCASE
        ,ACNTNO
    FROM TB_SRC_AC06C
   WHERE INDBLOCK = 1
     AND INDICATORS = '51'
   GROUP BY ACNTNO
),
FILTER_DECDCASE_COUNT AS (
  SELECT COUNT(1) AS CNT_DECDCASE
        ,ACNTNO
    FROM TB_SRC_AC06C
   WHERE INDBLOCK = 1
     AND INDICATORS = '2'
   GROUP BY ACNTNO
),
FILTER_MANUAL_HOLD_DATE AS (
  SELECT COUNT(1) AS CNT_MANUAL_HLD_DATE
        ,ACNTNO
    FROM TB_SRC_AC05C
   WHERE DATBLOCK = 3
     AND DAT12 IS NOT NULL
   GROUP BY ACNTNO
),
FILTER_C01_MAR01_M01_SEP_CORADD AS (
  SELECT X02KEY
        ,CUS01_C01_BUILD_NAME
        ,CUS01_C01_BUILD_NUM
        ,CUS01_C01_POSTCODE
    FROM TB_X02_C01 
   WHERE C01_SEQNO = 1
),
FILTER_PAYMENTELEMENTS_ARR_RAIS_DT AS (
  SELECT PAYEACNTNO
        ,PAYESUBACNO
        ,MAX(PAYELASTDEBITEDDATE) AS MAX_LASTDEBITEDDATE
    FROM TB_SRC_PAYMENTELEMENTS
   GROUP BY 
         PAYEACNTNO
        ,PAYESUBACNO
),
FILTER_MISC_LUT AS (
  SELECT TGT_VAL
    FROM TB_XFM_LUT_MISC
   WHERE SRC_KEY = 'HO-BAFCDE'
),
FILTER_MAR01_M01_DUE_DATE AS (
  SELECT PAYENEXTDUEDATE
        ,PAYEACNTNO
        ,PAYESUBACNO
    FROM VW_FILTER_PAYMENTELEMENTS_CURRENTATMIGR
   WHERE PAYEPYMNTTYPE = 'P'
),
FILTER_FUNDSMOVEPAYMENTS_CURRENTMIGR AS (
  SELECT FMPFMSEQNO
    FROM TB_SRC_FUNDSMOVEPAYMENTS
   WHERE FMPLASTEXTRACTDATE = FMPNEXTDUEDATE
   UNION ALL
  SELECT FMPFMSEQNO
    FROM TB_SRC_FUNDSMOVEPAYMENTS
   CROSS JOIN TB_UDMH_CTL
   WHERE FMPNEXTDUEDATE <= DATEADD(MONTH,1,WS_MIGR_DATE)
     AND NOT EXISTS (SELECT 1
                       FROM TB_SRC_FUNDSMOVEPAYMENTS AS RAISED
                      WHERE RAISED.FMPFMSEQNO = FMPFMSEQNO
                        AND RAISED.FMPLASTEXTRACTDATE = RAISED.FMPNEXTDUEDATE ) 
),
FILTER_FUNDSMOVEMANDATES_DIRECTDEBIT AS (
  SELECT FMTOACNTNO
        ,FMSEQNO
    FROM TB_SRC_FUNDSMOVEMANDATES
   WHERE FMTYPE = 'DD'
),
FILTER_MAR01_M01_PAY_METHOD AS (
  SELECT COUNT(1) AS CNT_MAR01_M01_PAY_METHOD
        ,FMTOACNTNO
    FROM FILTER_FUNDSMOVEMANDATES_DIRECTDEBIT
   INNER JOIN FILTER_FUNDSMOVEPAYMENTS_CURRENTMIGR
      ON FMSEQNO = FMPFMSEQNO
   GROUP BY FMTOACNTNO
),
FILTER_MAR01_M01_REDEEM_AMT_1 AS (
  SELECT TRACNTNO
        ,TRTRACERNO
        ,ROW_NUMBER() OVER (
           PARTITION BY
             TRACNTNO
           ORDER BY
             TRDATE DESC
            ,TRSEQNO DESC
           ) AS RN  
    FROM VW_FILTER_VTRANSACTIONS_NOTREVERSEDORREVERSING 
   WHERE TRGTRSTYPE = 'RED'
),
FILTER_MAR01_M01_REDEEM_AMT_2 AS (
  SELECT FLT_MAR01_M01_REDEEM_AMT_1.TRACNTNO
        ,FLT_MAR01_M01_REDEEM_AMT_1.TRTRACERNO
    FROM FILTER_MAR01_M01_REDEEM_AMT_1 AS FLT_MAR01_M01_REDEEM_AMT_1
   WHERE FLT_MAR01_M01_REDEEM_AMT_1.RN = 1
),
FILTER_MAR01_M01_REDEEM_AMT_3 AS (
  SELECT TRACNTNO
        ,TRTRACERNO
        ,SUM(TRAMOUNTCR) AS SUM_TRAMOUNTCR_MAR01_M01_REDEEM_AMT
    FROM VW_FILTER_VTRANSACTIONS_NOTREVERSEDORREVERSING
   GROUP BY 
     TRACNTNO
    ,TRTRACERNO
),
FILTER_M01_REDREQ_DT AS (
  SELECT TOP 1 REDSTDATE
        ,REDSTACNTNO 
    FROM TB_SRC_REDEMPTIONSTATEMENTS
),
FILTER_MAR01_M01_REMORT AS (
  SELECT COUNT(1) AS TGT_VAL_CNT_MAR01_M01_REMORT
        ,TGT_VAL
    FROM TB_XFM_LUT_MISC
   WHERE SRC_KEY = 'PC-REMORT'
   GROUP BY TGT_VAL
),
FILTER_MAR01_M01_TOT_VAL AS (
  SELECT TOP 1 X02KEY
        ,VAL05_P04_VAL_AMT
    FROM TB_X02_P04
   ORDER BY P04_VAL_EN_DT
),
FILTER_MAR01_M01_LTV_AMT AS (
  SELECT TOP 1 M63214
        ,A14352
    FROM TB_SRC_APP
   WHERE A1238 IS NOT NULL
     AND A14223 = 1
),
FILTER_MAR01_M01_INC_CUST AS (
  SELECT TOP 1 M63214
        ,A152140
    FROM TB_SRC_APP 
   WHERE A1238 IS NOT NULL
     AND A14223 = 1
),
FILTER_MAR01_M01_PER_OWN AS (
  SELECT TOP 1 M63214
        ,P61437
    FROM TB_SRC_APP
   WHERE A1238 IS NOT NULL
    AND A14223 = 1 
),
FILTER_MAR01_M01_VISUAL_IMP_BLUE_CASE_1 AS (
  SELECT COUNT(1) AS CNT_FILTER_MAR01_M01_VISUAL_IMP_BLUE_CASE_1
        ,HLDLACNTNO 
    FROM TB_SRC_HLDLNKS
   CROSS JOIN TB_UDMH_CTL
   WHERE HLDLFROMDATE <= WS_MIGR_DATE
     AND (HLDLTODATE IS NULL OR HLDLTODATE >= WS_MIGR_DATE )
     AND HLDLCODE IN ('BRAILL')
   GROUP BY HLDLACNTNO
),
FILTER_MAR01_M01_VISUAL_IMP_BLUE_CASE_2 AS (
  SELECT COUNT(1) AS CNT_FILTER_MAR01_M01_VISUAL_IMP_BLUE_CASE_2
        ,HLDLACNTNO 
    FROM TB_SRC_HLDLNKS
   CROSS JOIN TB_UDMH_CTL
   WHERE HLDLFROMDATE <= WS_MIGR_DATE
     AND (HLDLTODATE IS NULL OR HLDLTODATE >= WS_MIGR_DATE )
     AND HLDLCODE IN ('LPRINT')
   GROUP BY HLDLACNTNO
),
FILTER_MAR01_M01_ORIG_BOOK AS (
  SELECT TGT_ORIG_FUNDERBOOK
        ,POOL_ACCOUNT_NO
    FROM TB_XFM_LUT_BOOK_FUNDER
   CROSS JOIN TB_UDMH_CTL 
    LEFT OUTER JOIN TB_SRC_CBM_POOL_CONTROL
      ON POOL_YEAR_MONTH = dbo.FN_ENDOFMONTHBEFORE(WS_MIGR_DATE)
     AND POOL_ACCOUNT_SOURCE = ( CASE 
                                   WHEN SOURCE = 'RED' THEN 1
                                   WHEN SOURCE = 'BLUE' THEN 2
                                 END
                               )
     AND COALESCE(POOL_BOND_ID,'N/A') = COALESCE(SRC_BONDID,'N/A')  
),
FILTER_M01_SEC_DT_1 AS (
  SELECT GH1_ACCNO
        ,SRC_BONDID
    FROM TB_XFM_LUT_BOOK_FUNDER
   INNER JOIN TB_X02_GH1
      ON TGT_BOOK = GH1_BOOK
),
FILTER_M01_SEC_DT_2 AS (
  SELECT POOL_ACCOUNT_NO
        ,POOL_YEAR_MONTH
        ,POOL_BOND_ID
        ,LAG(POOL_BOND_ID,1) OVER (
           PARTITION BY
             POOL_ACCOUNT_NO
           ORDER BY
             POOL_YEAR_MONTH
         ) AS POOL_BOND_ID_PREV
    FROM TB_SRC_CBM_POOL_CONTROL
   CROSS JOIN TB_UDMH_CTL
   WHERE POOL_ACCOUNT_SOURCE = ( CASE 
                                   WHEN SOURCE = 'RED' THEN 1
                                   WHEN SOURCE = 'BLUE' THEN 2
                                 END
                               )
),
FILTER_M01_SEC_DT_3 AS (
  SELECT CHG.POOL_ACCOUNT_NO
        ,MAX(CHG.POOL_BOND_ID_PREV) AS MAX_POOL_BOND_ID_PREV
    FROM FILTER_M01_SEC_DT_2 AS CHG
   WHERE CHG.POOL_BOND_ID <> CHG.POOL_BOND_ID_PREV
   GROUP BY CHG.POOL_ACCOUNT_NO      
),
FILTER_MAR01_M01_SEALFEE_PD_1 AS (
  SELECT TRACNTNO
        ,TRTRACERNO
        ,ROW_NUMBER() OVER (
           PARTITION BY
             TRACNTNO
           ORDER BY
             TRDATE DESC
            ,TRSEQNO DESC
           ) AS RN         
    FROM VW_FILTER_VTRANSACTIONS_NOTREVERSEDORREVERSING
   WHERE TRGTRSTYPE = 'RED'
),
FILTER_MAR01_M01_SEALFEE_PD_2 AS (
  SELECT FLT_MAR01_M01_SEALFEE_PD_1.TRACNTNO
        ,FLT_MAR01_M01_SEALFEE_PD_1.TRTRACERNO
    FROM FILTER_MAR01_M01_SEALFEE_PD_1 AS FLT_MAR01_M01_SEALFEE_PD_1
   WHERE RN = 1
),
FILTER_MAR01_M01_SEALFEE_PD_3 AS (
  SELECT TRACNTNO
        ,TRTRACERNO
        ,SUM(TRAMOUNTCR) AS SUM_TRAMOUNTCR_MAR01_M01_SEALFEE_PD
    FROM VW_FILTER_VTRANSACTIONS_NOTREVERSEDORREVERSING
   GROUP BY 
     TRACNTNO
    ,TRTRACERNO
),
FILTER_M01_FSA_REPDTE_DT_RED AS (
  SELECT MAX(DOCDATE) AS MAX_DOCCDATE_RED
        ,ACNTNO
    FROM TB_SRC_AH40L
   WHERE DOCCODE = 'PRESUM' 
   GROUP BY ACNTNO
),
FILTER_M01_FSA_REPDTE_DT_BLUE AS (
  SELECT MAX(DOCDATE) AS MAX_DOCCDATE_BLUE
        ,ACNTNO
    FROM TB_SRC_AH40L
   WHERE DOCCODE = 'to be decided' -- TODO : REVISIT
   GROUP BY ACNTNO
),
FILTER_M01_RECONT_DT_1 AS (
  SELECT COUNT(1) AS CNT_FILTER_M01_RECONT_DT
        ,ACACNTNO
    FROM TB_SRC_AC01
   WHERE ACCLRDATE IS NULL 
     AND ACGACTTYPE = 'M' 
     AND (ACSOCREGCODE IS NULL OR ACSOCREGCODE <> 'FSAM') 
   GROUP BY ACACNTNO
),
FILTER_M01_RECONT_DT_2 AS (
  SELECT MAX(ACINCEPDATE) AS MAX_ACINCEPDATE
        ,ACACNTNO
    FROM TB_SRC_AC01
   WHERE ACCLRDATE IS NULL 
     AND ACGACTTYPE = 'M'
   GROUP BY ACACNTNO
),
FILTER_MAR01_M01_BRAND_CODE AS (
  SELECT TOP 1 TGT_BRAND
        ,XFM_SOURCE
    FROM TB_XFM_LUT_BOOK_FUNDER
   WHERE SRC_BONDID IS NULL
),
FILTER_MAR01_M01_SHARE_CO_RED_1 AS (
  SELECT COUNT(1) AS CNT_FILTER_MAR01_M01_SHARE_CO_RED_1
        ,HLDLACNTNO 
    FROM TB_SRC_HLDLNKS
   CROSS JOIN TB_UDMH_CTL 
   WHERE HLDLFROMDATE <= WS_MIGR_DATE
     AND (HLDLTODATE IS NULL OR HLDLTODATE >= WS_MIGR_DATE)
     AND HLDLCODE IN ('POLAFF','PHFLAI')
   GROUP BY HLDLACNTNO
),
FILTER_MAR01_M01_SHARE_CO_RED_2 AS (
  SELECT COUNT(1) AS CNT_FILTER_MAR01_M01_SHARE_CO_RED_2
        ,INTCCODE
    FROM TB_SRC_INTERESTCTRLS
   WHERE INTCDESC LIKE '%SHARE%'
   GROUP BY INTCCODE
),
FILTER_MAR01_M01_SHARE_CO_BLUE AS (
   SELECT COUNT(1) AS CNT_FILTER_MAR01_M01_SHARE_CO_BLUE
         ,HLDLACNTNO
     FROM TB_SRC_HLDLNKS
    CROSS JOIN TB_UDMH_CTL 
    WHERE HLDLFROMDATE <= WS_MIGR_DATE
      AND (HLDLTODATE IS NULL OR HLDLTODATE >= WS_MIGR_DATE)
      AND HLDLCODE IN ('PFP')
    GROUP BY HLDLACNTNO
),
FILTER_MAR01_M01_EXC_EXPER_1 AS (
  SELECT ACACNTNO
        ,COUNT(1) AS CNT_FILTER_MAR01_M01_EXC_EXPER_1
    FROM TB_SRC_AC01
   WHERE ACINCEPDATE < CAST('19950101' AS DATE)
   GROUP BY ACACNTNO
),
FILTER_MAR01_M01_EXC_EXPER_2 AS (
  SELECT DIAACNTNO
        ,COUNT(1) AS CNT_FILTER_MAR01_M01_EXC_EXPER_2
    FROM TB_SRC_VDIARIES
   WHERE DIAEVENTSCODE = 'CAIS'
   GROUP BY DIAACNTNO
),
FILTER_MAR01_M01_CUST_SEQ_1 AS (
  SELECT C01.X02KEY
        ,CASE WHEN C01.C01_SEQNO <= 4 AND GH1.GH1_CUSNO2 IS NOT NULL THEN C01.C01_SEQNO ELSE NULL END AS CUS02_C03_ACC_LINK
    FROM TB_X02_C01 AS C01
   INNER JOIN TB_X02_GH1 AS GH1
      ON C01.X02KEY = GH1.X02KEY
),
FILTER_MAR01_M01_CUST_SEQ_2 AS (
  SELECT X02KEY
        ,MAX(CUS02_C03_ACC_LINK) AS MAX_CUS02_C03_ACC_LINK
    FROM FILTER_MAR01_M01_CUST_SEQ_1
   GROUP BY X02KEY
),
JOIN_WRITECRITERIA AS (
  SELECT AC01_MAIN.ACACNTNO AS AC01_MAIN_ACACNTNO
        ,AC01_MAIN.ACHPURCHPROPSEQNO AS AC01_MAIN_ACHPURCHPROPSEQNO
        ,AC01_MAIN.ACHFIRSTBUYER AS AC01_MAIN_ACHFIRSTBUYER
        ,AC01_MAIN.ACHNOTICEINDICATOR AS AC01_MAIN_ACHNOTICEINDICATOR
        ,AC01_MAIN.ACHNOTICEPERIOD AS AC01_MAIN_ACHNOTICEPERIOD
        ,AC01_MAIN.ACHTITLE AS AC01_MAIN_ACHTITLE
        ,AC01_MAIN.ACINCEPDATE AS AC01_MAIN_ACINCEPDATE
        ,AC01_MAIN.ACPURPOSECODE AS AC01_MAIN_ACPURPOSECODE
        ,AC01_MAIN.ACHPORTEDACNTNO AS AC01_MAIN_ACHPORTEDACNTNO
        ,AC01_MAIN.ACHINCMULT AS AC01_MAIN_ACHINCMULT
        ,AC01_MAIN.ACINTCCODE AS AC01_MAIN_ACINTCCODE
        ,FIRSTLIVEORLASTREDEEMSUB.ACACNTNO AS AC01_FIRSTLIVEORLASTREDEEMSUB_ACACNTNO
        ,FIRSTLIVEORLASTREDEEMSUB.ACSUBACNO AS AC01_FIRSTLIVEORLASTREDEEMSUB_ACSUBACNO
        ,FIRSTLIVEORLASTREDEEMSUB.ACPROCESSTATUS AS AC01_FIRSTLIVEORLASTREDEEMSUB_ACPROCESSTATUS
        ,FIRSTLIVEORLASTREDEEMSUB.ACCLRDATE AS AC01_FIRSTLIVEORLASTREDEEMSUB_ACCLRDATE
        ,FIRSTLIVEORLASTREDEEMSUB.ACSMNTLASTDATE AS AC01_FIRSTLIVEORLASTREDEEMSUB_ACSMNTLASTDATE
        ,FIRSTLIVEORLASTREDEEMSUB.ACSMNTDUEDATE AS AC01_FIRSTLIVEORLASTREDEEMSUB_ACSMNTDUEDATE
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS FIRSTLIVEORLASTREDEEMSUB
      ON AC01_MAIN.ACACNTNO = FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,FLT_ACNTLNKS_MAR01_M01_ALLOW_CORR.CNT_ACNTLNKS
        ,FLT_HLDLNKS_MAR01_M01_ALLOW_CORR.CNT_HLDLNKS_SUS_NOCOR 
        ,ADDRESS_OP.COUNTY
        ,S01.SEC01_S01_COMPL_IND
        ,ADDRESS_OP.DISTRICT
        ,FLT_AC01D_UNIQUE.WFLLVL1
        ,FLT_DSS_COUNT.CNT_DSS 
        ,FLT_SUSPENDCASE_COUNT.CNT_SUSPENDCASE 
        ,FLT_DECDCASE_COUNT.CNT_DECDCASE 
        ,FLT_MANUAL_HOLD_DATE.CNT_MANUAL_HLD_DATE 
        ,VPROP.POSTCODE
        ,FLT_C01_MAR01_M01_SEP_CORADD.CUS01_C01_BUILD_NAME 
        ,FLT_C01_MAR01_M01_SEP_CORADD.CUS01_C01_BUILD_NUM 
        ,FLT_C01_MAR01_M01_SEP_CORADD.CUS01_C01_POSTCODE 
        ,ADDRESS_OP.STREET
        ,ADDRESS_OP.TOWN 
        ,FLT_PAYMENTELEMENTS_ARR_RAIS_DT.MAX_LASTDEBITEDDATE
        ,GH1.GH1_CUSNO1 
        ,FLT_MAR01_M01_DUE_DATE.PAYENEXTDUEDATE
        ,FLT_MAR01_M01_PAY_METHOD.CNT_MAR01_M01_PAY_METHOD
        ,FLT_MAR01_M01_REDEEM_AMT_3.SUM_TRAMOUNTCR_MAR01_M01_REDEEM_AMT
        ,FLT_M01_REDREQ_DT.REDSTDATE
        ,FLT_MAR01_M01_TOT_VAL.VAL05_P04_VAL_AMT 
        ,VPROP.PROPCOSTPRICE
        ,FLT_MAR01_M01_LTV_AMT.A14352
        ,FLT_MAR01_M01_INC_CUST.A152140
        ,ADDRESS_OP.PREMISE_NAME 
        ,ADDRESS_OP.PREMISE_NO 
        ,FLT_MAR01_M01_PER_OWN.P61437
        ,FLT_MAR01_M01_VISUAL_IMP_BLUE_CASE_1.CNT_FILTER_MAR01_M01_VISUAL_IMP_BLUE_CASE_1
        ,FLT_MAR01_M01_VISUAL_IMP_BLUE_CASE_2.CNT_FILTER_MAR01_M01_VISUAL_IMP_BLUE_CASE_2
        ,FLT_M01_SEC_DT_1.SRC_BONDID
        ,FLT_M01_SEC_DT_3.MAX_POOL_BOND_ID_PREV
        ,FLT_MAR01_M01_SEALFEE_PD_3.SUM_TRAMOUNTCR_MAR01_M01_SEALFEE_PD
        ,FLT_M01_FSA_REPDTE_DT_RED.MAX_DOCCDATE_RED
        ,FLT_M01_FSA_REPDTE_DT_BLUE.MAX_DOCCDATE_BLUE
        ,AC01.ACACNTNO AS NEWACCNO
        ,FLT_M01_RECONT_DT_1.CNT_FILTER_M01_RECONT_DT
        ,FLT_M01_RECONT_DT_2.MAX_ACINCEPDATE
        ,FLT_MAR01_M01_SHARE_CO_RED_1.CNT_FILTER_MAR01_M01_SHARE_CO_RED_1
        ,FLT_MAR01_M01_SHARE_CO_RED_2.CNT_FILTER_MAR01_M01_SHARE_CO_RED_2
        ,FLT_MAR01_M01_SHARE_CO_BLUE.CNT_FILTER_MAR01_M01_SHARE_CO_BLUE
        ,FLT_MAR01_M01_EXC_EXPER_1.CNT_FILTER_MAR01_M01_EXC_EXPER_1
        ,FLT_MAR01_M01_EXC_EXPER_2.CNT_FILTER_MAR01_M01_EXC_EXPER_2
        ,FLT_MAR01_M01_CUST_SEQ_2.MAX_CUS02_C03_ACC_LINK 
        ,CTRL.SOURCE
        ,CTRL.WS_MIGR_DATE
        ,CTRL.GRACEDAYS 
    FROM JOIN_WRITECRITERIA AS J_WC 
    LEFT OUTER JOIN FILTER_ACNTLNKS_MAR01_M01_ALLOW_CORR AS FLT_ACNTLNKS_MAR01_M01_ALLOW_CORR
      ON J_WC.AC01_FIRSTLIVEORLASTREDEEMSUB_ACACNTNO  = FLT_ACNTLNKS_MAR01_M01_ALLOW_CORR.ACLACNTNO 
     AND J_WC.AC01_FIRSTLIVEORLASTREDEEMSUB_ACSUBACNO = FLT_ACNTLNKS_MAR01_M01_ALLOW_CORR.ACLSUBACNO
    LEFT OUTER JOIN FILTER_HLDLNKS_MAR01_M01_ALLOW_CORR AS FLT_HLDLNKS_MAR01_M01_ALLOW_CORR
      ON FLT_HLDLNKS_MAR01_M01_ALLOW_CORR.HLDLACNTNO = J_WC.AC01_MAIN_ACACNTNO 
    LEFT OUTER JOIN TB_X02_S01 AS S01
      ON S01.X02KEY = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_AC01D_UNIQUE AS FLT_AC01D_UNIQUE 
      ON FLT_AC01D_UNIQUE.ACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_DSS_COUNT AS FLT_DSS_COUNT
      ON FLT_DSS_COUNT.ACNTNO = J_WC.AC01_MAIN_ACACNTNO 
    LEFT OUTER JOIN FILTER_SUSPENDCASE_COUNT AS FLT_SUSPENDCASE_COUNT
      ON FLT_SUSPENDCASE_COUNT.ACNTNO = J_WC.AC01_MAIN_ACACNTNO 
    LEFT OUTER JOIN FILTER_DECDCASE_COUNT AS FLT_DECDCASE_COUNT
      ON FLT_DECDCASE_COUNT.ACNTNO = J_WC.AC01_MAIN_ACACNTNO 
    LEFT OUTER JOIN FILTER_MANUAL_HOLD_DATE AS FLT_MANUAL_HOLD_DATE
      ON FLT_MANUAL_HOLD_DATE.ACNTNO = J_WC.AC01_MAIN_ACACNTNO 
    LEFT OUTER JOIN FILTER_C01_MAR01_M01_SEP_CORADD AS FLT_C01_MAR01_M01_SEP_CORADD 
      ON FLT_C01_MAR01_M01_SEP_CORADD.X02KEY = J_WC.AC01_MAIN_ACACNTNO 
    LEFT OUTER JOIN FILTER_PAYMENTELEMENTS_ARR_RAIS_DT AS FLT_PAYMENTELEMENTS_ARR_RAIS_DT
      ON FLT_PAYMENTELEMENTS_ARR_RAIS_DT.PAYEACNTNO = J_WC.AC01_FIRSTLIVEORLASTREDEEMSUB_ACACNTNO
     AND FLT_PAYMENTELEMENTS_ARR_RAIS_DT.PAYESUBACNO = J_WC.AC01_FIRSTLIVEORLASTREDEEMSUB_ACSUBACNO
    LEFT OUTER JOIN TB_X02_GH1 AS GH1
      ON GH1.X02KEY = J_WC.AC01_MAIN_ACACNTNO 
    LEFT OUTER JOIN FILTER_MAR01_M01_DUE_DATE AS FLT_MAR01_M01_DUE_DATE
      ON FLT_MAR01_M01_DUE_DATE.PAYEACNTNO = J_WC.AC01_FIRSTLIVEORLASTREDEEMSUB_ACACNTNO
     AND FLT_MAR01_M01_DUE_DATE.PAYESUBACNO = J_WC.AC01_FIRSTLIVEORLASTREDEEMSUB_ACSUBACNO
    LEFT OUTER JOIN FILTER_MAR01_M01_PAY_METHOD AS FLT_MAR01_M01_PAY_METHOD 
      ON FLT_MAR01_M01_PAY_METHOD.FMTOACNTNO = J_WC.AC01_MAIN_ACACNTNO 
    LEFT OUTER JOIN FILTER_MAR01_M01_REDEEM_AMT_2 AS FLT_MAR01_M01_REDEEM_AMT_2
      ON FLT_MAR01_M01_REDEEM_AMT_2.TRACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_REDEEM_AMT_3 AS FLT_MAR01_M01_REDEEM_AMT_3
      ON FLT_MAR01_M01_REDEEM_AMT_3.TRACNTNO = J_WC.AC01_MAIN_ACACNTNO
     AND FLT_MAR01_M01_REDEEM_AMT_3.TRTRACERNO = FLT_MAR01_M01_REDEEM_AMT_2.TRTRACERNO
    LEFT OUTER JOIN FILTER_M01_REDREQ_DT AS FLT_M01_REDREQ_DT
      ON FLT_M01_REDREQ_DT.REDSTACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT JOIN FILTER_MAR01_M01_TOT_VAL AS FLT_MAR01_M01_TOT_VAL
      ON FLT_MAR01_M01_TOT_VAL.X02KEY = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN TB_SRC_VPROPERTIES AS VPROP
      ON VPROP.PROPSEQNO = J_WC.AC01_MAIN_ACHPURCHPROPSEQNO
    LEFT OUTER JOIN FILTER_MAR01_M01_LTV_AMT AS FLT_MAR01_M01_LTV_AMT
      ON FLT_MAR01_M01_LTV_AMT.M63214 = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_INC_CUST AS FLT_MAR01_M01_INC_CUST
      ON FLT_MAR01_M01_INC_CUST.M63214 = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_PER_OWN AS FLT_MAR01_M01_PER_OWN
      ON FLT_MAR01_M01_PER_OWN.M63214 = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_VISUAL_IMP_BLUE_CASE_1 AS FLT_MAR01_M01_VISUAL_IMP_BLUE_CASE_1
      ON FLT_MAR01_M01_VISUAL_IMP_BLUE_CASE_1.HLDLACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_VISUAL_IMP_BLUE_CASE_2 AS FLT_MAR01_M01_VISUAL_IMP_BLUE_CASE_2
      ON FLT_MAR01_M01_VISUAL_IMP_BLUE_CASE_2.HLDLACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_M01_SEC_DT_1 AS FLT_M01_SEC_DT_1
      ON FLT_M01_SEC_DT_1.GH1_ACCNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_M01_SEC_DT_3 AS FLT_M01_SEC_DT_3
      ON FLT_M01_SEC_DT_3.POOL_ACCOUNT_NO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_SEALFEE_PD_2 AS FLT_MAR01_M01_SEALFEE_PD_2
      ON FLT_MAR01_M01_SEALFEE_PD_2.TRACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_SEALFEE_PD_3 AS FLT_MAR01_M01_SEALFEE_PD_3
      ON FLT_MAR01_M01_SEALFEE_PD_3.TRACNTNO = J_WC.AC01_MAIN_ACACNTNO
     AND FLT_MAR01_M01_SEALFEE_PD_3.TRTRACERNO = FLT_MAR01_M01_SEALFEE_PD_2.TRTRACERNO
    LEFT OUTER JOIN FILTER_M01_FSA_REPDTE_DT_RED AS FLT_M01_FSA_REPDTE_DT_RED
      ON FLT_M01_FSA_REPDTE_DT_RED.ACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_M01_FSA_REPDTE_DT_BLUE AS FLT_M01_FSA_REPDTE_DT_BLUE
      ON FLT_M01_FSA_REPDTE_DT_BLUE.ACNTNO = J_WC.AC01_MAIN_ACACNTNO 
    LEFT OUTER JOIN TB_SRC_AC01 AS AC01
      ON AC01.ACHPORTEDACNTNO  = J_WC.AC01_MAIN_ACACNTNO 
     AND AC01.ACACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_M01_RECONT_DT_1 AS FLT_M01_RECONT_DT_1
      ON FLT_M01_RECONT_DT_1.ACACNTNO  = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_M01_RECONT_DT_2 AS FLT_M01_RECONT_DT_2
      ON FLT_M01_RECONT_DT_2.ACACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_SHARE_CO_RED_1 AS FLT_MAR01_M01_SHARE_CO_RED_1
      ON FLT_MAR01_M01_SHARE_CO_RED_1.HLDLACNTNO  = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_SHARE_CO_RED_2 AS FLT_MAR01_M01_SHARE_CO_RED_2
      ON FLT_MAR01_M01_SHARE_CO_RED_2.INTCCODE = J_WC.AC01_MAIN_ACINTCCODE
    LEFT OUTER JOIN FILTER_MAR01_M01_SHARE_CO_BLUE AS FLT_MAR01_M01_SHARE_CO_BLUE
      ON FLT_MAR01_M01_SHARE_CO_BLUE.HLDLACNTNO  = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_EXC_EXPER_1 AS FLT_MAR01_M01_EXC_EXPER_1
      ON FLT_MAR01_M01_EXC_EXPER_1.ACACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_EXC_EXPER_2 AS FLT_MAR01_M01_EXC_EXPER_2
      ON FLT_MAR01_M01_EXC_EXPER_2.DIAACNTNO = J_WC.AC01_MAIN_ACACNTNO
    LEFT OUTER JOIN FILTER_MAR01_M01_CUST_SEQ_2 AS FLT_MAR01_M01_CUST_SEQ_2
      ON FLT_MAR01_M01_CUST_SEQ_2.X02KEY = J_WC.AC01_MAIN_ACACNTNO 
   CROSS JOIN TB_UDMH_CTL AS CTRL 
   CROSS APPLY FN_ADDRESS_SPLIT(VPROP.ADDRESS1,VPROP.ADDRESS2,VPROP.ADDRESS3,VPROP.ADDRESS4,VPROP.ADDRESS5,NULL,NULL,J_WC.AC01_MAIN_ACACNTNO,'M01') AS ADDRESS_OP
),
JOIN_LUTS AS (
  SELECT J_EXTRA.*
        ,FLT_MAR01_M01_CNTRY_CDE.TGT_CNTRY_CDE
        ,FLT_MISC_LUT.TGT_VAL AS M01_BACODE
        ,FLT_MAR01_M01_BRAND_CODE.TGT_BRAND 
        ,FLT_MAR01_M01_REMORT.TGT_VAL_CNT_MAR01_M01_REMORT
        ,FLT_MAR01_M01_ORIG_BOOK.TGT_ORIG_FUNDERBOOK
    FROM JOIN_EXTRA AS J_EXTRA  
    LEFT OUTER JOIN FILTER_MAR01_M01_CNTRY_CDE AS FLT_MAR01_M01_CNTRY_CDE
      ON FLT_MAR01_M01_CNTRY_CDE.ADRADRNO = J_EXTRA.AC01_MAIN_ACHPURCHPROPSEQNO
    LEFT OUTER JOIN FILTER_MAR01_M01_REMORT AS FLT_MAR01_M01_REMORT
      ON FLT_MAR01_M01_REMORT.TGT_VAL = J_EXTRA.AC01_MAIN_ACPURPOSECODE
    LEFT OUTER JOIN FILTER_MAR01_M01_ORIG_BOOK AS FLT_MAR01_M01_ORIG_BOOK
      ON FLT_MAR01_M01_ORIG_BOOK.POOL_ACCOUNT_NO = J_EXTRA.AC01_MAIN_ACACNTNO 
    LEFT OUTER JOIN FILTER_MAR01_M01_BRAND_CODE AS FLT_MAR01_M01_BRAND_CODE
      ON FLT_MAR01_M01_BRAND_CODE.XFM_SOURCE = J_EXTRA.SOURCE
   CROSS JOIN FILTER_MISC_LUT AS FLT_MISC_LUT
),  
MAP_FROMSRC AS (
  SELECT J_LUTS.*
        ,J_LUTS.AC01_MAIN_ACACNTNO AS X02KEY
        ,CASE
           WHEN J_LUTS.CNT_ACNTLNKS = 0 THEN 'N'
           WHEN J_LUTS.CNT_HLDLNKS_SUS_NOCOR > 0 THEN 'N'
           ELSE 'Y'
         END AS MAR01_M01_ALLOW_CORR
        ,J_LUTS.COUNTY AS MAR01_M01_COUNTY
        ,J_LUTS.TGT_CNTRY_CDE AS MAR01_M01_CNTRY_CDE
        ,CASE 
           WHEN J_LUTS.SEC01_S01_COMPL_IND = 'Y' THEN 'N'
           WHEN J_LUTS.SEC01_S01_COMPL_IND = 'N' THEN 'Y'
           ELSE NULL
         END AS MAR01_M01_DED_OUT
        ,J_LUTS.DISTRICT AS MAR01_M01_DISTRICT
        ,COALESCE(J_LUTS.AC01_MAIN_ACHFIRSTBUYER,'N') AS MAR01_M01_FRST_TIME
        ,CASE 
           WHEN J_LUTS.SOURCE = 'RED' THEN CASE WHEN J_LUTS.WFLLVL1 = 'CAT4' THEN 'Y' WHEN J_LUTS.WFLLVL1 = 'CAT7' THEN 'Y' ELSE 'N' END
           WHEN J_LUTS.SOURCE = 'BLUE' THEN
             CASE 
               WHEN J_LUTS.CNT_DSS > 0 THEN 'Y'
               WHEN J_LUTS.CNT_SUSPENDCASE > 0 THEN 'Y'
               WHEN J_LUTS.CNT_DECDCASE > 0 THEN 'Y'
               WHEN J_LUTS.CNT_MANUAL_HLD_DATE > 0 THEN 'Y'
               WHEN J_LUTS.WFLLVL1 ='CAT4' THEN 'Y'
               ELSE 'N'
             END
         END AS MAR01_M01_NO_FINES
        ,CASE 
           WHEN J_LUTS.AC01_MAIN_ACHNOTICEINDICATOR = 'M' THEN 
             CASE WHEN J_LUTS.AC01_MAIN_ACHNOTICEPERIOD = 1 THEN 'M' ELSE 'N' END
           WHEN J_LUTS.AC01_MAIN_ACHNOTICEINDICATOR = 'D' THEN 
             CASE WHEN J_LUTS.AC01_MAIN_ACHNOTICEPERIOD = 0 THEN 'N' ELSE 'N' END
           WHEN J_LUTS.AC01_MAIN_ACHNOTICEINDICATOR = 'N' THEN 'N'
           ELSE
             CASE WHEN J_LUTS.AC01_MAIN_ACHNOTICEINDICATOR IS NULL THEN 'N' ELSE 'N' END
         END AS MAR01_M01_NOTICE_PRD
        ,CASE WHEN LEN(J_LUTS.AC01_MAIN_ACHTITLE) > 40 THEN SUBSTRING (J_LUTS.AC01_MAIN_ACHTITLE,1,40) ELSE J_LUTS.AC01_MAIN_ACHTITLE END AS MAR01_M01_POSTALNAME 
        ,J_LUTS.POSTCODE AS MAR01_M01_POSTCODE
        ,CASE WHEN J_LUTS.AC01_FIRSTLIVEORLASTREDEEMSUB_ACPROCESSTATUS IN (3,4) THEN 'R' ELSE 'L' END AS MAR01_M01_STATUS
        ,J_LUTS.STREET AS MAR01_M01_STREET
        ,J_LUTS.TOWN AS MAR01_M01_TOWN
        ,J_LUTS.MAX_LASTDEBITEDDATE AS M01_ARR_RAIS_DT
        ,CASE WHEN LEN(J_LUTS.M01_BACODE) > 4 THEN SUBSTRING(J_LUTS.M01_BACODE,1,4) ELSE J_LUTS.M01_BACODE END AS MAR01_M01_BACODE
        ,J_LUTS.AC01_MAIN_ACINCEPDATE AS M01_COMP_DT
        ,J_LUTS.GH1_CUSNO1 AS M01_CUST_NO
        ,DAY(J_LUTS.PAYENEXTDUEDATE) AS MAR01_M01_DUE_DATE
        ,CASE WHEN J_LUTS.CNT_MAR01_M01_PAY_METHOD > 0 THEN 4 ELSE 1 END AS MAR01_M01_PAY_METHOD
        ,J_LUTS.REDSTDATE AS M01_REDREQ_DT
        ,CASE WHEN J_LUTS.TGT_VAL_CNT_MAR01_M01_REMORT > 0 THEN 1 ELSE 0 END AS MAR01_M01_REMORT
        ,COALESCE(J_LUTS.VAL05_P04_VAL_AMT,1) AS MAR01_M01_TOT_VAL
        ,J_LUTS.PROPCOSTPRICE AS MAR01_M01_TOT_PRC
        ,J_LUTS.AC01_FIRSTLIVEORLASTREDEEMSUB_ACSMNTLASTDATE AS MAR01_M01_LAST_STA_DT
        ,CASE WHEN LEN(J_LUTS.AC01_MAIN_ACHPORTEDACNTNO) > 16 THEN SUBSTRING(J_LUTS.AC01_MAIN_ACHPORTEDACNTNO,1,16) ELSE J_LUTS.AC01_MAIN_ACHPORTEDACNTNO END AS MAR01_M01_OLDACCNO
        ,J_LUTS.A14352 AS MAR01_M01_LTV_AMT
        ,CASE J_LUTS.A152140 WHEN 'S' THEN 1 WHEN 'J' THEN 2 ELSE 0 END AS MAR01_M01_INC_CUST
        ,J_LUTS.AC01_MAIN_ACHINCMULT AS MAR01_M01_INC_MULTI
        ,J_LUTS.AC01_FIRSTLIVEORLASTREDEEMSUB_ACSMNTDUEDATE AS M01_NEXTST_DT
        ,J_LUTS.PREMISE_NAME AS MAR01_M01_BUILD_NAME
        ,J_LUTS.PREMISE_NO AS MAR01_M01_BUILD_NUM
        ,(100 - COALESCE(J_LUTS.P61437,0)) AS MAR01_M01_PER_OWN
        ,CASE 
           WHEN J_LUTS.CNT_FILTER_MAR01_M01_VISUAL_IMP_BLUE_CASE_1 > 0 THEN 4
           WHEN J_LUTS.CNT_FILTER_MAR01_M01_VISUAL_IMP_BLUE_CASE_2 > 0 THEN 3
           ELSE 0
         END AS MAR01_M01_VISUAL_IMP
        ,J_LUTS.TGT_ORIG_FUNDERBOOK AS MAR01_M01_ORIG_BOOK
        ,CASE WHEN J_LUTS.SRC_BONDID IS NOT NULL THEN J_LUTS.MAX_POOL_BOND_ID_PREV ELSE NULL END AS M01_SEC_DT
        ,CASE 
           WHEN J_LUTS.SOURCE = 'RED' THEN J_LUTS.MAX_DOCCDATE_RED
           WHEN J_LUTS.SOURCE = 'BLUE' THEN J_LUTS.MAX_DOCCDATE_BLUE 
         END AS M01_FSA_REPDTE_DT
        ,CASE WHEN LEN(J_LUTS.NEWACCNO) > 16 THEN SUBSTRING(J_LUTS.NEWACCNO,1,16) ELSE J_LUTS.NEWACCNO END AS M01_NEWACCNO
        ,CASE WHEN J_LUTS.CNT_FILTER_M01_RECONT_DT = 0 THEN J_LUTS.MAX_ACINCEPDATE ELSE NULL END AS M01_RECONT_DT
        ,J_LUTS.TGT_BRAND AS MAR01_M01_BRAND_CODE
        ,CASE
           WHEN J_LUTS.SOURCE = 'RED' THEN
             CASE
               WHEN J_LUTS.CNT_FILTER_MAR01_M01_SHARE_CO_RED_1 > 0 THEN 'Police Mutual/Allied Irish'
               WHEN J_LUTS.CNT_FILTER_MAR01_M01_SHARE_CO_RED_2 > 0 THEN 'Shared, Unknown'
             END
           WHEN J_LUTS.SOURCE = 'BLUE' THEN 
             CASE 
               WHEN J_LUTS.CNT_FILTER_MAR01_M01_SHARE_CO_BLUE > 0 THEN 'Places For People'
             END
         END AS MAR01_M01_SHARE_CO
        ,CASE
          WHEN J_LUTS.SOURCE = 'RED' AND J_LUTS.CNT_FILTER_MAR01_M01_EXC_EXPER_1 = 0 AND CNT_FILTER_MAR01_M01_EXC_EXPER_2 = 0 THEN 'Y' ELSE 'N'
         END AS MAR01_M01_EXC_EXPER
        ,J_LUTS.MAX_CUS02_C03_ACC_LINK AS MAR01_M01_CUST_SEQ 
    FROM JOIN_LUTS AS J_LUTS  
),
MAP_DEPENDENTS AS (
  SELECT MAP_SRC.*
        ,CASE WHEN dbo.FN_ADDR_COMPARE(MAP_SRC.MAR01_M01_BUILD_NAME,MAP_SRC.MAR01_M01_BUILD_NUM,MAP_SRC.MAR01_M01_POSTCODE) = dbo.FN_ADDR_COMPARE(MAP_SRC.CUS01_C01_BUILD_NAME,MAP_SRC.CUS01_C01_BUILD_NUM,MAP_SRC.CUS01_C01_POSTCODE) THEN 'Y' ELSE 'N' END AS MAR01_M01_SEP_CORADD
        ,CASE 
           WHEN MAP_SRC.M01_ARR_RAIS_DT IS NULL THEN 0
           WHEN DATEADD(DAY,COALESCE(MAP_SRC.GRACEDAYS,0),MAP_SRC.M01_ARR_RAIS_DT) > MAP_SRC.WS_MIGR_DATE THEN 2
           ELSE 1
         END AS MAR01_M01_ARR_CHECKD
        ,CASE WHEN MAP_SRC.MAR01_M01_STATUS = 'R' THEN MAP_SRC.SUM_TRAMOUNTCR_MAR01_M01_REDEEM_AMT ELSE NULL END AS MAR01_M01_REDEEM_AMT
        ,CASE WHEN MAP_SRC.MAR01_M01_STATUS = 'R' THEN MAP_SRC.AC01_FIRSTLIVEORLASTREDEEMSUB_ACCLRDATE ELSE NULL END AS M01_REDEEM_DT
        ,CASE WHEN MAP_SRC.MAR01_M01_TOT_PRC > MAP_SRC.MAR01_M01_TOT_VAL THEN MAP_SRC.MAR01_M01_TOT_PRC - MAP_SRC.MAR01_M01_TOT_VAL ELSE NULL END AS MAR01_M01_TOT_OVPRC
        ,CASE 
           WHEN MAP_SRC.AC01_FIRSTLIVEORLASTREDEEMSUB_ACPROCESSTATUS IN (3,4) THEN 
             CASE WHEN MAP_SRC.SUM_TRAMOUNTCR_MAR01_M01_SEALFEE_PD > 0 THEN 'Y' ELSE NULL END
           ELSE NULL
         END AS MAR01_M01_SEALFEE_PD
        ,CASE WHEN MAP_SRC.MAR01_M01_STATUS = 'R' THEN 'N' ELSE NULL END AS MAR01_M01_RED_INS   
    FROM MAP_FROMSRC AS MAP_SRC 
),
MAP_DEFAULTS AS (
  SELECT MAP_DEP.*
        ,'M01' AS M01_CODE
        ,'Y' AS MAR01_M01_ACCCAPFLG
        ,'N' AS MAR01_M01_ASU_REQ
        ,'N' AS MAR01_M01_CHECK_PP
        ,'N' AS MAR01_M01_DRAW_REQD
        ,NULL AS MAR01_M01_LASTARRLET
        ,NULL AS MAR01_M01_MANRTELET
        ,NULL AS MAR01_M01_MANUAL_STS
        ,'N' AS MAR01_M01_MIRAS_5
        ,NULL AS MAR01_M01_NEWPYMFRQ
        ,NULL AS MAR01_M01_NOINTPRF
        ,'M' AS MAR01_M01_PYMFRQ
        ,'N' AS MAR01_M01_R185SCH
        ,'N' AS MAR01_M01_REDPENOVER
        ,'N' AS MAR01_M01_RESV_PREM
        ,NULL AS MAR01_M01_RSNCDE
        ,NULL AS MAR01_M01_ACCT_MAN
        ,NULL AS M01_ADHOC_DT
        ,NULL AS M01_DTEPYM_DT  
        ,NULL AS MAR01_M01_LF_SHORTFL      
        ,NULL AS M01_NEW_DT 
        ,NULL AS MAR01_M01_NEWDUEDATE 
        ,NULL AS M01_NOINT_DT
        ,NULL AS M01_REDNOT_DT
        ,NULL AS MAR01_M01_PRNISTIND
        ,NULL AS MAR01_M01_INIRCA_DT
        ,NULL AS MAR01_M01_MAX_LEND
        ,NULL AS MAR01_M01_RCARET_DT
        ,NULL AS MAR01_M01_SIGNRCA_DT
        ,NULL AS MAR01_M01_FREEINS
        ,NULL AS MAR01_M01_FR_ASUPAS
        ,NULL AS M01_SEASN_DT
        ,NULL AS M01_SEASDF_DT
        ,NULL AS M01_SEASLTV_DT
        ,NULL AS MAR01_M01_SHAROWN
        ,NULL AS MAR01_M01_ACC_VOTE
        ,'N' AS MAR01_M01_NOCCAPOS
        ,'N' AS MAR01_M01_IPTLET
        ,NULL AS MAR01_M01_IPTRES
        ,NULL AS MAR01_M01_POSTALNME2
        ,'N' AS MAR01_M01_STAFF
        ,'N' AS MAR01_M01_STF_APPORT
        ,'N' AS MAR01_M01_INT_TO_EOM
        ,NULL AS MAR01_M01_LSTSRF_AMT
        ,NULL AS M01_LSTSRF_DT
        ,NULL AS MAR01_M01_MORT_COND
        ,NULL AS MAR01_M01_O23_ACTPAY
        ,NULL AS MAR01_M01_O23_EXPCMS
        ,NULL AS M01_O23_RUN_DT
        ,NULL AS MAR01_M01_PERC_OCC
        ,NULL AS MAR01_M01_CRDRSK
        ,NULL AS MAR01_M01_POOL_TAG
        ,NULL AS ADM16_M01_B_CON_INS
        ,NULL AS M01_POSTED_DT
        ,NULL AS ADM16_M01_QTE_TO_USE
        ,NULL AS ADM16_M01_RED_TYPE
        ,NULL AS ADM16_M01_REDEEM_RSN
        ,NULL AS M01_REDREQ_DT1
        ,NULL AS ADM16_M01_DEED_RETEN
        ,NULL AS MAR01_M01_DIS_COW
        ,NULL AS MAR01_M01_EXP_REF
        ,NULL AS M01_FSA_LSTQRT_DT
        ,NULL AS MAR01_M01_MAP_APPNBR
        ,NULL AS MAR01_M01_POT_LOSS
        ,NULL AS M01_RMC_ARR_ST
        ,9999 AS MAR01_M01_SSC_CODE
        ,NULL AS MAR01_M01_TITLE_IND
        ,NULL AS MAR69_M01_SIC_1
        ,NULL AS MAR69_M01_SIC_2
        ,NULL AS MAR01_M01_IMP_CRED
        ,NULL AS M01_LTVREV_DT
        ,NULL AS MAR01_M01_RENT_INC
        ,NULL AS M01_FST_COLDT
        ,NULL AS M01_ARR_DTE
        ,NULL AS MAR01_M01_L_QTR_RMC
        ,NULL AS MAR01_M01_ANN_FEEAMT
        ,NULL AS M01_NXT_ANNFEE
        ,NULL AS MAR01_M01_PRIMEBTL
        ,'N' AS MAR01_M01_RM_IND
        ,NULL AS MAR01_M01_WVE_BNK_CHRG
        ,'N' AS MAR01_M01_MAF_ACC
        ,NULL AS M01_LSTBENDT
        ,NULL AS MAR01_M01_CACS_CCI
        ,NULL AS MAR01_M01_CACS_PCI
        ,NULL AS M01_CACS_SNT_DT
        ,'N' AS MAR01_M01_INCSPT_IND
        ,NULL AS M01_LSTEXT_DT
        ,'N' AS MAR01_M01_COMB_LOAN
        ,NULL AS MAR01_M01_PPDADJ
        ,NULL AS MAR01_M01_NOPAYS
        ,NULL AS MAR01_M01_SECHIS
        ,NULL AS MAR01_M01_SECARR
        ,NULL AS MAR01_M01_NODFEE
        ,NULL AS MAR01_M01_SLE
        ,NULL AS MAR01_M01_BUILD_MTG
        ,NULL AS MAR01_M01_SHARE_RENT
        ,0 AS MAR01_M01_PERC_EQT
        ,NULL AS MAR01_M01_VAL_AUTH
        ,NULL AS MAR01_M01_MAF_TYPE
        ,'N' AS MAR01_M01_ACERT_REQD
        ,NULL AS M01_ACERT_LDT
        ,NULL AS MAR01_M01_TMPP_REAS
        ,NULL AS MAR97_M01_LETCODE1
        ,NULL AS MAR97_M01_PAY_AMT
        ,NULL AS MAR97_M01_DESCR1
        ,NULL AS MAR97_M01_DESCR2
        ,NULL AS LAH01_M01_LAH_AUTH
        ,NULL AS LAH01_M01_LAH_GUAR
        ,NULL AS M01_LAH_EXPDT
        ,NULL AS LAH01_M01_LAH_EXTEND
        ,NULL AS M01_LAH_EXTEXP
        ,NULL AS M01_LAH_REMDTE
        ,NULL AS MAR01_M01_BACS_EOM
        ,NULL AS M01_TOMP_CMPDTE
        ,NULL AS MAR01_M01_DOM_FEEAMT 
        ,NULL AS MAR01_M01_DOM_FEEAPP
        ,NULL AS MAR01_M01_TMPREPPER
        ,NULL AS M01_IO_COV_END
        ,NULL AS M01_IO_COV_OTH
        ,NULL AS M01_IO_COV_PEP
        ,NULL AS M01_IO_COV_PEN
        ,NULL AS MAR01_M01_RESREACDE
        ,NULL AS M01_RESREADTE
        ,NULL AS MAR01_M01_CACS_MAS
        ,NULL AS MAR01_M01_FEE_CHOICE
        ,NULL AS MAR01_M01_DEBTMANAMT
        ,NULL AS MAR01_M01_PAR_SET
        ,NULL AS M01_LFRBTRMEXT
        ,'N' AS M01_LOAN_PURCH
        ,NULL AS M01_ORIGPROVRF
        ,NULL AS M01_CPA_ELIG
        ,NULL AS M01_CPA_VIABLE
        ,NULL AS M01_CPA_FOL1
        ,NULL AS M01_CPA_FOL2
        ,NULL AS M01_PPA_ELIG
        ,NULL AS M01_PPA_WAIVED
        ,NULL AS M01_PPA_PERF
        ,NULL AS M01_SECCHKCMP
    FROM MAP_DEPENDENTS AS MAP_DEP
),
MAP_SIGN AS (
  SELECT MAP_DEF.*
        ,CASE
           WHEN MAR01_M01_REDEEM_AMT > 0 THEN '+'
           WHEN MAR01_M01_REDEEM_AMT < 0 THEN '-'
           ELSE ' '
         END AS M01_REDEEM_AMT_SIGN
        ,CASE 
           WHEN MAR01_M01_MAX_LEND > 0 THEN '+'
           WHEN MAR01_M01_MAX_LEND < 0 THEN '-'
           ELSE ' '
         END AS M01_MAX_LEND_SIGN
        ,CASE
           WHEN MAR01_M01_POT_LOSS > 0 THEN '+'
           WHEN MAR01_M01_POT_LOSS < 0 THEN '-'
           ELSE ' '
         END AS M01_POT_LOSS_SIGN
    FROM MAP_DEFAULTS AS MAP_DEF
),
MAP_EXCEPTIONS AS (
  SELECT MAP_SIGN.*
        ,CASE WHEN LEN(MAP_SIGN.AC01_MAIN_ACHTITLE) > 40 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_M01','W:LENGTH-OVERRUN',MAP_SIGN.AC01_MAIN_ACACNTNO,'MAR01.M01-POSTALNAME',MAP_SIGN.AC01_MAIN_ACHTITLE)) END AS EXCEPTION_1 
        ,CASE WHEN LEN(MAP_SIGN.AC01_MAIN_ACHPORTEDACNTNO) > 16 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_M01','W:LENGTH-OVERRUN',MAP_SIGN.AC01_MAIN_ACACNTNO,'MAR01.M01-OLDACCNO',MAP_SIGN.AC01_MAIN_ACHPORTEDACNTNO))  END AS EXCEPTION_2
        ,CASE WHEN LEN(MAP_SIGN.M01_BACODE) > 4 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_M01','W:LENGTH-OVERRUN',MAP_SIGN.AC01_MAIN_ACACNTNO,'MAR01.M01-BACODE',MAP_SIGN.M01_BACODE))  END AS EXCEPTION_3
        ,CASE WHEN LEN(MAP_SIGN.NEWACCNO) > 16 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_M01','W:LENGTH-OVERRUN',MAP_SIGN.AC01_MAIN_ACACNTNO,'M01-NEWACCNO',MAP_SIGN.NEWACCNO)) END AS EXCEPTION_4
        ,CASE 
           WHEN MAP_SIGN.AC01_MAIN_ACHNOTICEINDICATOR = 'M' THEN 
             CASE WHEN MAP_SIGN.AC01_MAIN_ACHNOTICEPERIOD <> 1 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION3('X02_M01','W:WARNING',MAP_SIGN.AC01_MAIN_ACACNTNO,'MAR01.M01-NOTICE-PRD','N','AC01.ACHNOTICEINDICATOR',MAP_SIGN.AC01_MAIN_ACHNOTICEINDICATOR,'AC01.ACHNOTICEPERIOD',MAP_SIGN.AC01_MAIN_ACHNOTICEPERIOD))  END
         END AS EXCEPTION_5
        ,CASE 
           WHEN MAP_SIGN.AC01_MAIN_ACHNOTICEINDICATOR = 'D' THEN 
             CASE WHEN MAP_SIGN.AC01_MAIN_ACHNOTICEPERIOD <> 0 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION3('X02_M01','W:WARNING',MAP_SIGN.AC01_MAIN_ACACNTNO,'MAR01.M01-NOTICE-PRD','N','AC01.ACHNOTICEINDICATOR',MAP_SIGN.AC01_MAIN_ACHNOTICEINDICATOR,'AC01.ACHNOTICEPERIOD',MAP_SIGN.AC01_MAIN_ACHNOTICEPERIOD)) END
         END AS EXCEPTION_6
        ,CASE 
           WHEN MAP_SIGN.AC01_MAIN_ACHNOTICEINDICATOR <> 'N' THEN
             CASE WHEN MAP_SIGN.AC01_MAIN_ACHNOTICEINDICATOR IS NOT NULL THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION3('X02_M01','W:WARNING',MAP_SIGN.AC01_MAIN_ACACNTNO,'MAR01.M01-NOTICE-PRD','N','AC01.ACHNOTICEINDICATOR',MAP_SIGN.AC01_MAIN_ACHNOTICEINDICATOR,'AC01.ACHNOTICEPERIOD',MAP_SIGN.AC01_MAIN_ACHNOTICEPERIOD)) END
         END AS EXCEPTION_7
    FROM MAP_SIGN
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,M01_CODE
        ,MAR01_M01_ACCCAPFLG
        ,MAR01_M01_ALLOW_CORR
        ,MAR01_M01_ASU_REQ
        ,MAR01_M01_CHECK_PP
        ,MAR01_M01_COUNTY
        ,MAR01_M01_CNTRY_CDE
        ,MAR01_M01_DED_OUT
        ,MAR01_M01_DISTRICT
        ,MAR01_M01_DRAW_REQD
        ,MAR01_M01_FRST_TIME
        ,MAR01_M01_LASTARRLET       --TODO : CASE OF EXPLICIT DEFAULT; NEEDS TO BE REVISITED ONCE RULE COMPLETES
        ,MAR01_M01_MANRTELET
        ,MAR01_M01_MANUAL_STS
        ,MAR01_M01_MIRAS_5
        ,MAR01_M01_NEWPYMFRQ       
        ,MAR01_M01_NO_FINES
        ,MAR01_M01_NOINTPRF
        ,MAR01_M01_NOTICE_PRD       
        ,MAR01_M01_POSTALNAME
        ,MAR01_M01_POSTCODE 
        ,MAR01_M01_PYMFRQ           
        ,MAR01_M01_R185SCH
        ,MAR01_M01_REDPENOVER
        ,MAR01_M01_RESV_PREM
        ,MAR01_M01_RSNCDE
        ,MAR01_M01_SEP_CORADD 
        ,MAR01_M01_STATUS
        ,MAR01_M01_STREET
        ,MAR01_M01_TOWN
        ,MAR01_M01_ACCT_MAN
        ,M01_ADHOC_DT
        ,MAR01_M01_ARR_CHECKD
        ,M01_ARR_RAIS_DT
        ,MAR01_M01_BACODE
        ,M01_COMP_DT
        ,M01_CUST_NO
        ,M01_DTEPYM_DT             --TODO : CASE OF EXPLICIT DEFAULT; NEEDS TO BE REVISITED ONCE DATA IS AVAILABLE IN M06
        ,MAR01_M01_DUE_DATE        
        ,MAR01_M01_LF_SHORTFL
        ,M01_NEW_DT                --TODO : CASE OF EXPLICIT DEFAULT; NEEDS TO BE REVISITED ONCE DATA IS AVAILABLE IN M06 
        ,MAR01_M01_NEWDUEDATE      --TODO : CASE OF EXPLICIT DEFAULT; NEEDS TO BE REVISITED ONCE DATA IS AVAILABLE IN M06
        ,M01_NOINT_DT
        ,MAR01_M01_PAY_METHOD
        ,M01_REDEEM_AMT_SIGN
        ,MAR01_M01_REDEEM_AMT      
        ,M01_REDEEM_DT
        ,M01_REDNOT_DT
        ,M01_REDREQ_DT             
        ,MAR01_M01_REMORT
        ,MAR01_M01_TOT_VAL
        ,MAR01_M01_TOT_OVPRC
        ,MAR01_M01_TOT_PRC
        ,MAR01_M01_PRNISTIND
        ,MAR01_M01_INIRCA_DT
        ,MAR01_M01_LAST_STA_DT
        ,M01_MAX_LEND_SIGN
        ,MAR01_M01_MAX_LEND
        ,MAR01_M01_RCARET_DT
        ,MAR01_M01_SIGNRCA_DT
        ,MAR01_M01_FREEINS
        ,MAR01_M01_FR_ASUPAS
        ,MAR01_M01_OLDACCNO
        ,M01_SEASN_DT
        ,M01_SEASDF_DT
        ,M01_SEASLTV_DT
        ,MAR01_M01_LTV_AMT
        ,MAR01_M01_INC_CUST
        ,MAR01_M01_SHAROWN
        ,MAR01_M01_ACC_VOTE
        ,MAR01_M01_INC_MULTI
        ,M01_NEXTST_DT
        ,MAR01_M01_NOCCAPOS
        ,MAR01_M01_IPTLET
        ,MAR01_M01_IPTRES
        ,MAR01_M01_BUILD_NAME
        ,MAR01_M01_BUILD_NUM
        ,MAR01_M01_POSTALNME2
        ,MAR01_M01_STAFF
        ,MAR01_M01_STF_APPORT
        ,MAR01_M01_PER_OWN
        ,MAR01_M01_INT_TO_EOM
        ,MAR01_M01_LSTSRF_AMT
        ,M01_LSTSRF_DT
        ,MAR01_M01_MORT_COND
        ,MAR01_M01_O23_ACTPAY
        ,MAR01_M01_O23_EXPCMS
        ,M01_O23_RUN_DT
        ,MAR01_M01_PERC_OCC
        ,MAR01_M01_VISUAL_IMP   
        ,MAR01_M01_CRDRSK
        ,MAR01_M01_ORIG_BOOK
        ,MAR01_M01_POOL_TAG
        ,M01_SEC_DT              
        ,ADM16_M01_B_CON_INS
        ,M01_POSTED_DT
        ,ADM16_M01_QTE_TO_USE
        ,ADM16_M01_RED_TYPE
        ,ADM16_M01_REDEEM_RSN
        ,M01_REDREQ_DT1
        ,ADM16_M01_DEED_RETEN
        ,MAR01_M01_SEALFEE_PD    
        ,MAR01_M01_DIS_COW
        ,MAR01_M01_EXP_REF
        ,M01_FSA_LSTQRT_DT       --TODO : CASE OF EXPLICIT DEFAULT; NEEDS TO BE REVISITED ONCE RULE COMPLETES
        ,M01_FSA_REPDTE_DT
        ,MAR01_M01_MAP_APPNBR
        ,M01_NEWACCNO
        ,M01_POT_LOSS_SIGN
        ,MAR01_M01_POT_LOSS    
        ,MAR01_M01_RED_INS
        ,M01_RMC_ARR_ST          --TODO : CASE OF EXPLICIT DEFAULT; NEEDS TO BE REVISITED ONCE RULE COMPLETES
        ,MAR01_M01_SSC_CODE
        ,MAR01_M01_TITLE_IND
        ,MAR69_M01_SIC_1
        ,MAR69_M01_SIC_2
        ,MAR01_M01_IMP_CRED
        ,M01_LTVREV_DT
        ,MAR01_M01_RENT_INC
        ,M01_FST_COLDT
        ,M01_RECONT_DT
        ,M01_ARR_DTE
        ,MAR01_M01_L_QTR_RMC
        ,MAR01_M01_ANN_FEEAMT
        ,M01_NXT_ANNFEE
        ,MAR01_M01_PRIMEBTL
        ,MAR01_M01_RM_IND
        ,MAR01_M01_WVE_BNK_CHRG
        ,MAR01_M01_MAF_ACC
        ,MAR01_M01_BRAND_CODE   
        ,M01_LSTBENDT
        ,MAR01_M01_CACS_CCI
        ,MAR01_M01_CACS_PCI
        ,M01_CACS_SNT_DT
        ,MAR01_M01_INCSPT_IND
        ,M01_LSTEXT_DT
        ,MAR01_M01_COMB_LOAN
        ,MAR01_M01_PPDADJ
        ,MAR01_M01_NOPAYS
        ,MAR01_M01_SECHIS
        ,MAR01_M01_SECARR
        ,MAR01_M01_NODFEE
        ,MAR01_M01_SLE
        ,MAR01_M01_BUILD_MTG
        ,MAR01_M01_SHARE_CO
        ,MAR01_M01_SHARE_RENT
        ,MAR01_M01_PERC_EQT   
        ,MAR01_M01_VAL_AUTH
        ,MAR01_M01_MAF_TYPE
        ,MAR01_M01_ACERT_REQD
        ,M01_ACERT_LDT
        ,MAR01_M01_EXC_EXPER      
        ,MAR01_M01_TMPP_REAS
        ,MAR97_M01_LETCODE1
        ,MAR97_M01_PAY_AMT
        ,MAR97_M01_DESCR1
        ,MAR97_M01_DESCR2
        ,LAH01_M01_LAH_AUTH
        ,LAH01_M01_LAH_GUAR
        ,M01_LAH_EXPDT
        ,LAH01_M01_LAH_EXTEND
        ,M01_LAH_EXTEXP
        ,M01_LAH_REMDTE
        ,MAR01_M01_BACS_EOM
        ,MAR01_M01_CUST_SEQ
        ,M01_TOMP_CMPDTE
        ,MAR01_M01_DOM_FEEAMT   
        ,MAR01_M01_DOM_FEEAPP
        ,MAR01_M01_TMPREPPER
        ,M01_IO_COV_END
        ,M01_IO_COV_OTH
        ,M01_IO_COV_PEP
        ,M01_IO_COV_PEN
        ,MAR01_M01_RESREACDE
        ,M01_RESREADTE
        ,MAR01_M01_CACS_MAS
        ,MAR01_M01_FEE_CHOICE
        ,MAR01_M01_DEBTMANAMT
        ,MAR01_M01_PAR_SET
        ,M01_LFRBTRMEXT      --TODO : CASE OF EXPLICIT DEFAULT; NEEDS TO BE REVISITED ONCE RULE COMPLETES
        ,M01_LOAN_PURCH      
        ,M01_ORIGPROVRF      
        ,M01_CPA_ELIG
        ,M01_CPA_VIABLE
        ,M01_CPA_FOL1
        ,M01_CPA_FOL2
        ,M01_PPA_ELIG
        ,M01_PPA_WAIVED
        ,M01_PPA_PERF
        ,M01_SECCHKCMP    
        ,CASE 
           WHEN CAST(CONCAT(
                            CAST(MAP_EXCEPTIONS.EXCEPTION_1 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_2 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_3 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_4 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_5 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_6 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_7 AS NVARCHAR(MAX))
                           ) AS NVARCHAR(MAX)) = ' ' THEN NULL 
           ELSE CAST(CONCAT(
                            CAST(MAP_EXCEPTIONS.EXCEPTION_1 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_2 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_3 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_4 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_5 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_6 AS NVARCHAR(MAX))
                           ,CAST(MAP_EXCEPTIONS.EXCEPTION_7 AS NVARCHAR(MAX))
                           ) AS XML)              
         END AS X02_UDMH_EXCEPTION
    FROM MAP_EXCEPTIONS
)
SELECT *
  FROM OUT_FIELDS 

GO
/*
 * Author: Gireesh, G
 * Creation Date: 31/08/2015
 * Description: This SQL code applies business transformation for X02_M02 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0         31/08/2015      Gireesh  G              Based on Mapping Spec version v1.0
    2.0         9/12/2015       Sowmya S V              Based on Mapping Spec version v1.3
    3.0         10/12/2015      Sowmya S V              Updated the Query as per review comments Bug(79203)
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_M02]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_M02]
GO 
CREATE VIEW [dbo].[VW_X02_M02]
AS

WITH
JOIN_WRITECRITERIA AS (
--79203
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
--79203
        ,'M02' AS M02_CODE
        ,NULL AS MAR13_M02_CA_CAT
        ,'N' AS MAR13_M02_CA_CCJ_1
        ,'N' AS MAR13_M02_CA_CCJ_2
        ,'Y' AS MAR13_M02_CA_DISC_IN
        ,'N' AS MAR13_M02_CA_EX_BORR
        ,'N' AS MAR13_M02_CA_HA_LOAN
        ,'N' AS MAR13_M02_CA_INTERVW
        ,'N' AS MAR13_M02_CA_MR_ARR
        ,'N' AS MAR13_M02_CA_MSL_BNK
        ,'N' AS MAR13_M02_CA_MSL_IN1
        ,'N' AS MAR13_M02_CA_MSL_IN2
        ,'N' AS MAR13_M02_CA_MSL_IN3
        ,'N' AS MAR13_M02_CA_MSL_IN4
        ,'N' AS MAR13_M02_CA_MSL_MOR
        ,'N' AS MAR13_M02_CA_PR_EQT
        ,'N' AS MAR13_M02_CA_PR_ILNK
        ,'N' AS MAR13_M02_CA_PR_INDF
        ,'N' AS MAR13_M02_CA_PR_PART
        ,'N' AS MAR13_M02_CA_REF_AUD
        ,'N' AS MAR13_M02_CA_REF_CRF
        ,'N' AS MAR13_M02_CA_REF_ERF
        ,'N' AS MAR13_M02_CA_REF_PRL
        ,'N' AS MAR13_M02_CA_REF_RNT
        ,'N' AS MAR13_M02_CA_W_OWNER
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
--79203
  SELECT X02KEY
        ,M02_CODE
        ,MAR13_M02_CA_CAT
        ,MAR13_M02_CA_CCJ_1
        ,MAR13_M02_CA_CCJ_2
        ,MAR13_M02_CA_DISC_IN
        ,MAR13_M02_CA_EX_BORR
        ,MAR13_M02_CA_HA_LOAN
        ,MAR13_M02_CA_INTERVW
        ,MAR13_M02_CA_MR_ARR
        ,MAR13_M02_CA_MSL_BNK
        ,MAR13_M02_CA_MSL_IN1
        ,MAR13_M02_CA_MSL_IN2
        ,MAR13_M02_CA_MSL_IN3
        ,MAR13_M02_CA_MSL_IN4
        ,MAR13_M02_CA_MSL_MOR
        ,MAR13_M02_CA_PR_EQT
        ,MAR13_M02_CA_PR_ILNK
        ,MAR13_M02_CA_PR_INDF
        ,MAR13_M02_CA_PR_PART
        ,MAR13_M02_CA_REF_AUD
        ,MAR13_M02_CA_REF_CRF
        ,MAR13_M02_CA_REF_ERF
        ,MAR13_M02_CA_REF_PRL
        ,MAR13_M02_CA_REF_RNT
        ,MAR13_M02_CA_W_OWNER
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
/*
 * Author: SHRAVANI
 * Creation Date: 30/09/2015
 * Description: This SQL code applies business transformation for X02_M05 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer                   Description
 *-----------------------------------------------------------------------------------------------------
   1.0        30/09/2015       SHRAVANI                  Based on Mapping Spec version v1.0
  
 *-----------------------------------------------------------------------------------------------------
 */
IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[VW_X02_M05]') AND TYPE IN (N'V'))
 DROP VIEW [dbo].[VW_X02_M05]
GO

CREATE VIEW [dbo].[VW_X02_M05]
AS
WITH
FILTER_ASKING_PRICE AS (
  SELECT ACCOUNT_NO_REF
        ,MIN(ASKING_PRICE_DATE) AS ASKING_PRICE_DATE
    FROM TB_SRC_ASKING_PRICE AS ASK_PRS
   GROUP BY
     ACCOUNT_NO_REF
),
JOIN_WRITECRITERIA AS (
  SELECT M04.X02KEY AS ACCNO
        ,PROP.ACCOUNT_NO
        ,PROP.SOLICITOR_SEQ_REF
        ,PROP.CASE_STATUS_SEQ_REF
    FROM TB_X02_M04 AS M04
    INNER JOIN TB_SRC_PROPERTY AS PROP
      ON PROP.ACCOUNT_NO = M04.X02KEY
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,SALE.ACCOUNT_NO_REF
        ,SALE.ACTUAL_COMPLETION_DATE
        ,SALE.SALE_METHOD_SEQ_REF
        ,SOLICITOR.SOLICITOR_SEQ_NO
        ,SOLICITOR.POSTCODE
        ,SOLICITOR.TEL_NO
        ,SOLICITOR.COMPANY_NAME
        ,FIL_ASK.ASKING_PRICE_DATE
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT OUTER JOIN TB_SRC_SALE AS SALE
      ON J_WC.ACCOUNT_NO = SALE.ACCOUNT_NO_REF
    LEFT OUTER JOIN TB_SRC_SOLICITOR AS SOLICITOR
      ON J_WC.SOLICITOR_SEQ_REF = SOLICITOR.SOLICITOR_SEQ_NO
    LEFT OUTER JOIN FILTER_ASKING_PRICE AS FIL_ASK
      ON  J_WC.ACCOUNT_NO = FIL_ASK.ACCOUNT_NO_REF
),
JOIN_LUT AS (
  SELECT J_EX.*
        ,SALE_METD.TGT_SALE_METH
        ,SALE_STS.TGT_SALE_STAT
    FROM JOIN_EXTRA AS J_EX
    LEFT OUTER JOIN TB_XFM_LUT_SALE_METHOD AS SALE_METD
      ON SALE_METD.SRC_SCR_SALE_METHOD_SEQ_REF = J_EX.SALE_METHOD_SEQ_REF
    LEFT OUTER JOIN TB_XFM_LUT_SALE_STATUS AS SALE_STS
      ON SALE_STS.SRC_SCR_CASE_STATUS_SEQ_REF = J_EX.CASE_STATUS_SEQ_REF
),
MAP_FROMSRC AS (
  SELECT J_LUT.*
         ,ACCNO AS X02KEY
         ,TGT_SALE_METH AS ADM02_M05_SALE_METH
         ,TGT_SALE_STAT AS ADM02_M05_SALE_STAT
         ,ACTUAL_COMPLETION_DATE AS M05_COMP_DT
         ,POSTCODE AS M05_SOLREF_PC
         ,TEL_NO AS M05_SOLREF_TN_1
         ,COMPANY_NAME AS M05_SOLREF_40_1
         ,ASKING_PRICE_DATE AS M05_MARK_DATE
    FROM JOIN_LUT AS J_LUT
),
MAP_DEFAULTS AS(
  SELECT *
        ,'M05' AS M05_CODE
        ,'N' AS ADM02_M05_INCTVE
        ,NULL AS M05_AMEND_DT
        ,1 AS ADM02_M05_SEC_NBR
        ,NULL AS ADM02_M05_MRKT_STAT
        ,NULL AS M05_ORIG_SOL
        ,NULL AS M05_HOLD_DATE
        ,NULL AS M05_OFFHLD_DTE
        ,NULL AS ADM02_M05_PROP_COND
    FROM MAP_FROMSRC
),
MAP_EXCEPTION AS (
  SELECT *
        ,CASE
            WHEN LEN(M05_SOLREF_TN_1) > 15 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_M05','W:LENGTH-OVERRUN',X02KEY,'M05_SOLREF_TN',M05_SOLREF_TN_1))
         END AS EXCEPTION_1
        ,CASE
            WHEN LEN(M05_SOLREF_TN_1) > 15 THEN SUBSTRING(M05_SOLREF_TN_1,1,15)
            ELSE M05_SOLREF_TN_1
         END AS M05_SOLREF_TN
        ,CASE
            WHEN LEN(M05_SOLREF_40_1) > 40 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_M05','W:LENGTH-OVERRUN',X02KEY,'M05_SOLREF_40',M05_SOLREF_40_1))
         END AS EXCEPTION_2
        ,CASE
            WHEN LEN(M05_SOLREF_40_1) > 40 THEN SUBSTRING(M05_SOLREF_40_1,1,40)
            ELSE M05_SOLREF_40_1
         END AS M05_SOLREF_40
    FROM MAP_DEFAULTS
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,M05_CODE
        ,ADM02_M05_INCTVE
        ,M05_AMEND_DT
        ,M05_COMP_DT
        ,ADM02_M05_SEC_NBR
        ,M05_SOLREF_PC
        ,M05_SOLREF_TN
        ,M05_SOLREF_40
        ,ADM02_M05_MRKT_STAT
        ,M05_ORIG_SOL
        ,M05_HOLD_DATE
        ,M05_MARK_DATE
        ,M05_OFFHLD_DTE
        ,ADM02_M05_PROP_COND
        ,ADM02_M05_SALE_METH
        ,ADM02_M05_SALE_STAT
        ,CASE 
           WHEN CAST ( CONCAT (
                     CAST(EXCEPTION_1 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_2 AS VARCHAR(MAX)))
                 AS NVARCHAR(MAX)) = '' THEN NULL
           ELSE CAST ( CONCAT (
                     CAST(EXCEPTION_1 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_2 AS VARCHAR(MAX)))
                  AS XML)
         END AS X02_UDMH_EXCEPTION
    FROM MAP_EXCEPTION
)
SELECT *
  FROM OUT_FIELDS


GO
--/*
-- * Author: Bhargav Satish
-- * Creation Date: 16/07/2015
-- * Description: This SQL code applies business transformation for X02_M11 target type.
-- * Revision History:
-- *-----------------------------------------------------------------------------------------------------
-- * Version         Date           Developer                     Description
-- *-----------------------------------------------------------------------------------------------------
--    1.0         16/07/2015      Bhargav Satish       Based on Mapping Spec version v0.7
--    2.0         14/09/2015      Sowmya S V           Based on Mapping Spec version v1.0
--    3.0         15/09/2015      Sowmya S V           Updated the Code as per Code Review Comments(77045 and 77047)
--    4.0         29/09/2015      Sowmya S V           Updated the Dependent field as defaulted
-- *-----------------------------------------------------------------------------------------------------
-- */

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_M11]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_M11]
GO

CREATE VIEW [dbo].[VW_X02_M11]
AS
WITH
FILTER_CCASUBS AS (
  SELECT AC01.ACACNTNO
        ,AC01.ACSUBACNO
    FROM TB_SRC_AC01 AS AC01
   WHERE AC01.ACACTCODE IN ('FEEDI','FEEBTL','FEEFLX','FEEOFS','FEEANN')
),
FILTER_DEBIT_TX AS (
  SELECT VT.TRDATE
        ,VT.TRACNTNO
        ,VT.TRSEQNO
        ,VT.TRAMOUNTCR
        ,VT.TRAMOUNTDB
        ,VT.TRACTCODE
    FROM TB_SRC_VTRANSACTIONS AS VT
   WHERE VT.TRAMOUNTDB <> 0
),
--77045--Code Review Bug
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACSUBACNO
        ,AC01.ACACNTNO
        ,FILTER_DEBIT_TX.TRDATE
        ,FILTER_DEBIT_TX.TRSEQNO
        ,FILTER_DEBIT_TX.TRAMOUNTCR
        ,FILTER_DEBIT_TX.TRAMOUNTDB
        ,FILTER_DEBIT_TX.TRACTCODE
    FROM FILTER_CCASUBS AS AC01
   INNER JOIN FILTER_DEBIT_TX AS FILTER_DEBIT_TX
      ON AC01.ACACNTNO = FILTER_DEBIT_TX.TRACNTNO
),
--77045--Code Review Bug
JOIN_LUTS AS (
  SELECT J_WC.*
        ,LUT_TX.TGT_TRANCODE
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT OUTER JOIN TB_XFM_LUT_TX AS LUT_TX
      ON LUT_TX.SRC_TRTRSCODE = J_WC.TRACTCODE
),
MAP_FROMSRC AS (
  SELECT J_LUT.*
        ,J_LUT.ACACNTNO AS X02KEY
        ,J_LUT.ACSUBACNO AS MAR74_M11_SUB_NO
        ,J_LUT.TRDATE AS M11_POSTED_DT
        ,J_LUT.TRAMOUNTDB AS MAR74_M11_T_AMOUNT 
        ,J_LUT.TRDATE AS M11_PROCESS_DT
        ,J_LUT.TGT_TRANCODE AS MAR74_M11_TRANCODE
    FROM JOIN_LUTS AS J_LUT
),
--FILTER_DEPENDENT_DEFPD_DT AS (
--  SELECT TOP 1 A05.A05_EFFECT_DT AS M11_DEFPD_DT
--        ,X02KEY
--        ,A05.A05_SUB_ACC
--        ,A05.A05_EFFECT_DT
--    FROM TB_X02_A05 AS A05
--   WHERE MAR05_A05_T_AMOUNT > 0
--),
MAP_DEPENDENT01 AS (
  SELECT M_FS.*
        ,ROW_NUMBER() OVER (
           PARTITION BY
             M_FS.X02KEY
            ,M_FS.MAR74_M11_SUB_NO
           ORDER BY
             M_FS.TRDATE
            ,M_FS.TRSEQNO
         ) AS MAR74_M11_TRAN_NO
        ,M_FS.MAR74_M11_SUB_NO AS MAR74_M11_POST_SUB
    FROM MAP_FROMSRC AS M_FS
),
--77047--Code Review Bug
FILTER_DEPENDENT_AMTPAID AS (
  SELECT M_D01.MAR74_M11_T_AMOUNT
        ,M_D01.TRAMOUNTCR
        ,M_D01.X02KEY
        ,M_D01.MAR74_M11_SUB_NO
        ,M_D01.MAR74_M11_TRANCODE
        ,M_D01.MAR74_M11_TRAN_NO
        ,M_D01.MAR74_M11_POST_SUB
        ,M_D01.M11_POSTED_DT
        ,M_D01.M11_PROCESS_DT
        ,SUM(M_D01.TRAMOUNTCR) - SUM(M_D01.MAR74_M11_T_AMOUNT) OVER (
            PARTITION BY
              M_D01.X02KEY
             ,M_D01.MAR74_M11_SUB_NO
            ORDER BY
              M_D01.MAR74_M11_TRAN_NO
         )  AS AMT_PAID
    FROM MAP_DEPENDENT01 AS M_D01
   GROUP BY M_D01.X02KEY
           ,M_D01.MAR74_M11_T_AMOUNT
           ,M_D01.TRAMOUNTCR
           ,M_D01.MAR74_M11_SUB_NO
           ,M_D01.MAR74_M11_TRAN_NO
           ,M_D01.MAR74_M11_TRANCODE
           ,M_D01.MAR74_M11_POST_SUB
           ,M_D01.M11_POSTED_DT
           ,M_D01.M11_PROCESS_DT
),
--77045--Code Review Bug
JOIN_DEPENDENT01 AS (
  SELECT MAPD01.*
    FROM FILTER_DEPENDENT_AMTPAID AS MAPD01
),
MAP_DEPENDANT02 AS (
  SELECT J_DP.*
        ,J_DP.AMT_PAID AS MAR74_M11_AMT_PAID
    FROM JOIN_DEPENDENT01 AS J_DP
),
--77045--Code Review Bug
--JOIN_DEPENDENT02 AS (
--  SELECT M_FS.*
--       ,A05.M11_DEFPD_DT
--   FROM MAP_DEPENDANT02 AS M_FS
--   LEFT OUTER JOIN FILTER_DEPENDENT_DEFPD_DT AS A05
--     ON M_FS.MAR74_M11_SUB_NO = A05.A05_SUB_ACC
--    AND A05.X02KEY = M_FS.X02KEY
--  WHERE A05.A05_EFFECT_DT <= M_FS.M11_POSTED_DT
--),
MAP_DEFAULTS AS (
  SELECT *
        ,'M11' AS M11_CODE
        ,NULL AS M11_DEFPD_DT
    FROM MAP_DEPENDANT02
),
MAP_SIGN AS (
  SELECT M_DEF.*
        ,CASE
           WHEN M_DEF.MAR74_M11_T_AMOUNT > 0 THEN '+'
           WHEN M_DEF.MAR74_M11_T_AMOUNT < 0 THEN '-'
           WHEN M_DEF.MAR74_M11_T_AMOUNT = 0 THEN ' '
         END AS M11_SIGN1
    FROM MAP_DEFAULTS AS M_DEF
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,M11_CODE
        ,MAR74_M11_SUB_NO
        ,M11_POSTED_DT
        ,MAR74_M11_T_AMOUNT
        ,M11_SIGN1
        ,MAR74_M11_TRANCODE
        ,MAR74_M11_TRAN_NO
        ,M11_PROCESS_DT
        ,MAR74_M11_POST_SUB
        ,MAR74_M11_AMT_PAID
        ,M11_DEFPD_DT
    FROM MAP_SIGN
)
SELECT *
  FROM OUT_FIELDS

GO
/*
 * Author: Bhargav Satish
 * Creation Date: 02/07/2015
 * Description: This SQL code applies business transformation for X02_M13 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version       Date           Developer                 Description
 *-----------------------------------------------------------------------------------------------------
    1.0       02/07/2015      Bhargav Satish       Based on Mapping Spec version v0.5_26062015
    2.0       12/07/2015      Bhargav Satish       Updated based on code review comments by AG 
	3.0       31/08/2015        SOUMYA             Based on the Mapping Spec Version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[dbo].[VW_X02_M13]') AND TYPE in (N'V'))
DROP VIEW [dbo].[VW_X02_M13]
GO 
 
CREATE VIEW [dbo].[VW_X02_M13]
AS 
WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO 
    FROM TB_SRC_AC01_MAIN AS AC01 
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
JOIN_EXTRAS AS (
  SELECT J_WC.ACACNTNO
        ,CTL.SOURCE
        ,CTL.ALL_RUNTAG
        ,CTL.WS_MIGR_DATE
    FROM JOIN_WRITECRITERIA AS J_WC
   CROSS JOIN TB_UDMH_CTL AS CTL
),
MAP_FROMSRC AS (
  SELECT ACACNTNO AS X02KEY
        ,LEFT(SOURCE,1) + FORMAT(MONTH(GETDATE()),'00') + FORMAT(DAY(GETDATE()),'00') + ALL_RUNTAG AS MAR93_M13_PLAT_NAME
        ,WS_MIGR_DATE AS M13_MIGRA_DT
    FROM JOIN_EXTRAS AS J_E 
),
MAP_DEFAULTS AS (
  SELECT MAP_SRC.*
        ,'M13' AS M13_CODE
    FROM MAP_FROMSRC AS MAP_SRC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,M13_CODE
        ,MAR93_M13_PLAT_NAME
        ,M13_MIGRA_DT
    FROM MAP_DEFAULTS
)
  SELECT *
    FROM OUT_FIELDS


GO
/*
 * Author: Bhargav Satish\Kavana GC
 * Creation Date: 17/07/2015
 * Description: This SQL code applies business transformation for X02_M14 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version         Date           Developer                     Description
 *-----------------------------------------------------------------------------------------------------
    1.0         17/07/2015      Bhargav Satish       Based on Mapping Spec version v0.7
    2.0         27/08/2015      Kavana GC            Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_M14]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_M14]
GO 
 
CREATE VIEW [dbo].[VW_X02_M14]
AS 
WITH
FILTER_COLATERALNKS_FUNDS AS (
  SELECT COLNKS.COLACNTNO
        ,COLNKS.CFFUNDTYPE
        ,COLNKS.COLSEQNO
        ,COLNKS.COLLASTCHNGDATE
        ,COLNKS.COLEFDATETO
        ,COLNKS.COLLASTCHNGBY
        ,COLNKS.COLEFDATEFROM
        ,COLNKS.COLCOLTEXT
    FROM TB_SRC_COLATERALNKS AS COLNKS
   WHERE COLNKS.COLTYPE = 'F'
     AND COLNKS.CFFUNDTYPE != 'H'
),
JOIN_WRITECRITERIA AS (
  SELECT COLNKS.*
        ,AC01_MAIN.ACACNTNO
    FROM FILTER_COLATERALNKS_FUNDS AS COLNKS
   INNER JOIN TB_SRC_AC01_MAIN AS AC01_MAIN
      ON COLNKS.COLACNTNO = AC01_MAIN.ACACNTNO
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,CTL.WS_MIGR_DATE 
    FROM JOIN_WRITECRITERIA AS J_WC
   CROSS JOIN TB_UDMH_CTL AS CTL
),
JOIN_LUTS AS (
  SELECT J_E.*
        ,USERCODE.TGT_USERCODE
    FROM JOIN_EXTRA AS J_E
    LEFT OUTER JOIN TB_XFM_LUT_USERCODE AS USERCODE
      ON USERCODE.SRC_SUMMIT_USERCODE = J_E.COLLASTCHNGBY
),
MAP_FROMSRC AS (
  SELECT J_LUTS.*
        ,J_LUTS.CFFUNDTYPE AS VTR02_M14_UVTRCDE
        ,J_LUTS.COLSEQNO AS VTR02_M14_VTR_UNIQID
        ,CONVERT(VARCHAR(10),COLLASTCHNGDATE,111) AS M14_PROCESSED_DT
        ,REPLACE(CONVERT(VARCHAR(8),COLLASTCHNGDATE,108),':','') AS VTR02_PROCES_TIM 
        ,J_LUTS.TGT_USERCODE AS VTR02_USERCODE
        ,DBO.FN_GETNUMERICVALUE(COLCOLTEXT) AS VTR02_VTRAMT
        ,CASE WHEN J_LUTS.COLEFDATETO < J_LUTS.WS_MIGR_DATE THEN J_LUTS.COLEFDATETO ELSE NULL END AS M14_CEASE_DT
        ,J_LUTS.COLEFDATEFROM AS M14_LASTVAL_DT
        ,J_LUTS.COLEFDATETO AS M14_MATURE_DT
    FROM JOIN_LUTS AS J_LUTS
),
MAP_DEFAULTS AS (
  SELECT M_S.*
        ,'M14' AS M14_CODE
        ,'X02' AS VTR02_ISPECNAME
        ,NULL AS M14_EP_BAS_SA
        ,NULL AS M14_EP_BONUS
        ,NULL AS M14_EP_COMPANY
        ,NULL AS M14_EP_EAS_PRM
        ,NULL AS M14_EP_MAT_DAT
        ,NULL AS M14_EP_POL_TYP
        ,NULL AS M14_EP_SUR_VAL
        ,NULL AS M14_EP_TOT_SA
    FROM MAP_FROMSRC AS M_S
),
OUT_FIELDS AS (
  SELECT ACACNTNO AS X02KEY
        ,M14_CODE
        ,VTR02_M14_UVTRCDE
        ,VTR02_M14_VTR_UNIQID
        ,M14_PROCESSED_DT
        ,VTR02_PROCES_TIM
        ,VTR02_USERCODE
        ,VTR02_ISPECNAME
        ,VTR02_VTRAMT
        ,M14_CEASE_DT
        ,M14_LASTVAL_DT
        ,M14_EP_BAS_SA
        ,M14_EP_BONUS
        ,M14_EP_COMPANY
        ,M14_EP_EAS_PRM
        ,M14_EP_MAT_DAT
        ,M14_EP_POL_TYP
        ,M14_EP_SUR_VAL
        ,M14_EP_TOT_SA
        ,M14_MATURE_DT
    FROM MAP_DEFAULTS
)
  SELECT *
    FROM OUT_FIELDS

GO
/*
 * Author: Bhargav Satish
 * Creation Date: 01/07/2015
 * Description: This SQL code applies business transformation for X02_M18 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer                         Description
 *-----------------------------------------------------------------------------------------------------
    1.0      01/07/2015      Bhargav Satish             Based on Mapping Spec version v0.4_19062015
    2.0      06/07/2015      Bhargav Satish             Based on Mapping Spec version v0.6_03072015
    3.0      12/07/2015      Bhargav Satish             Updated based on code review comments by AG
    4.0      15/07/2015      Bhargav Satish             Updated based on Mapping Spec version v0.7_15072015
    5.0      27/08/2015      Kavana GC                  Deleted view and added common view which is required
                                                        based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_M18]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_M18]
GO 
 
CREATE VIEW [dbo].[VW_X02_M18]
AS 
WITH
FILTER_HLDLNKS_INOM AS (
  SELECT HLD.HLDLFROMDATE
        ,HLD.HLDLLASTCHNGBY
        ,HLD.HLDLCODE
        ,HLD.HLDLACNTNO
    FROM VW_FILTER_HLDLNKS AS HLD
   WHERE HLD.HLDLCODE BETWEEN 'INOM01' AND 'INOM20'
),
JOIN_WRITECRITERIA AS (
  SELECT HLD.*
        ,AC01.ACACNTNO
    FROM TB_SRC_AC01_MAIN AS AC01
   INNER JOIN FILTER_HLDLNKS_INOM AS HLD
      ON AC01.ACACNTNO = HLD.HLDLACNTNO
),
JOIN_LUTS AS (
  SELECT J_WC.*
        ,TGT_USERCODE
        ,TGT_REV_OUT
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT OUTER JOIN TB_XFM_LUT_USERCODE AS USERCODE
      ON USERCODE.SRC_SUMMIT_USERCODE = J_WC.HLDLLASTCHNGBY
    LEFT OUTER JOIN TB_XFM_LUT_MORTGAGE_REVIEW AS M_LUT
      ON M_LUT.SRC_HOLDCODE = J_WC.HLDLCODE
),
MAP_FROMSRC AS (
  SELECT J_LUT.*
        ,J_LUT.HLDLFROMDATE AS M18_REVIEW_DT
        ,J_LUT.TGT_USERCODE AS MAR94_M18_USER_CODE
        ,CASE WHEN J_LUT.HLDLCODE IN ('INOM01','INOM10') THEN 'N' ELSE 'Y' END AS MAR94_M18_CUST_CONT
        ,CASE WHEN J_LUT.HLDLCODE = 'INOM05' THEN 'Y'  ELSE 'N'END AS MAR94_M18_LOAN_CHG  
        ,J_LUT.TGT_REV_OUT  AS MAR94_M18_REV_OUT
        ,J_LUT.HLDLFROMDATE AS M18_REVOUT_DT
        ,ROW_NUMBER() OVER (
           PARTITION BY
             J_LUT.ACACNTNO
           ORDER BY
             J_LUT.HLDLFROMDATE
            ,J_LUT.HLDLCODE
          ) AS MAR94_M18_REV_SEQ
    FROM JOIN_LUTS AS J_LUT
),
MAP_DEFAULTS AS(
  SELECT M_SRC.*
        ,'M18' AS M18_CODE
        ,99 AS MAR94_M18_REV_PROC
        ,NULL AS MAR94_M18_INIT_SUB
        ,NULL AS MAR94_M18_REV_TERM
        ,NULL AS MAR94_M18_LETCODE
    FROM MAP_FROMSRC AS M_SRC
),
OUT_FIELDS AS(
  SELECT ACACNTNO AS X02KEY
        ,M18_CODE
        ,M18_REVIEW_DT
        ,MAR94_M18_REV_PROC
        ,MAR94_M18_INIT_SUB
        ,MAR94_M18_REV_TERM
        ,MAR94_M18_USER_CODE
        ,MAR94_M18_LETCODE
        ,MAR94_M18_CUST_CONT
        ,MAR94_M18_LOAN_CHG
        ,MAR94_M18_REV_OUT
        ,M18_REVOUT_DT
        ,MAR94_M18_REV_SEQ
    FROM MAP_DEFAULTS 
)
  SELECT * 
    FROM OUT_FIELDS

GO
/*
 * Author: Sowmya
 * Creation Date: 09/30/2015
 * Description: This SQL code is used for business transformation of X02_MA5 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer                   Description
 *-----------------------------------------------------------------------------------------------------
    1.0       09/28/2015         Sowmya                    Based on mapping Spec version v1.0
    2.0       10/07/2015         Sowmya                    Updated the code based on the review comments 77636
 *-----------------------------------------------------------------------------------------------------
 */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_MA5]') AND TYPE in ('V'))
DROP VIEW [dbo].[VW_X02_MA5]
GO 

CREATE VIEW [dbo].[VW_X02_MA5]
AS
WITH
--77636--
FILTER_ASKING_PRICE AS (
  SELECT ACCOUNT_NO_REF
        ,ASKING_PRICE_DATE
        ,ASKING_PRICE
        ,LEAD(ASKING_PRICE.ASKING_PRICE_DATE, 1, CTL.WS_MIGR_DATE) OVER (PARTITION BY ASKING_PRICE.ACCOUNT_NO_REF ORDER BY ASKING_PRICE_DATE) AS ASKING_PRICE_DATE_END
    FROM TB_SRC_ASKING_PRICE AS ASKING_PRICE
   CROSS JOIN TB_UDMH_CTL AS CTL
),
JOIN_WRITECRITERIA AS (
  SELECT ASKING_PRICE.*
        ,ASKING_PRICE.ACCOUNT_NO_REF AS X02KEY
        ,OFFER.PURCHASER_NAME
        ,OFFER.OFFER_STATUS_SEQ_REF
        ,OFFER.OFFER_AMOUNT
        ,OFFER.OFFER_DATE
    FROM TB_X02_M05 AS M05  --DEPENDENT ON M05 SO TOOK FROM PROPERTY TABLE TB_SRC_PROPERTY AS PROPERTY
   INNER JOIN FILTER_ASKING_PRICE AS ASKING_PRICE 
      ON M05.X02KEY = ASKING_PRICE.ACCOUNT_NO_REF  -- PROPERTY.ACCOUNT_NO
    LEFT OUTER JOIN TB_SRC_OFFER AS OFFER
      ON ASKING_PRICE.ACCOUNT_NO_REF = OFFER.ACCOUNT_NO_REF
     AND OFFER.OFFER_DATE >= ASKING_PRICE.ASKING_PRICE_DATE
     AND OFFER.OFFER_DATE < ASKING_PRICE_DATE_END
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,SALE.OFFER_DATE AS SALE_OFFER_DATE
        ,SALE.EXCHANGE_DATE
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT OUTER JOIN TB_SRC_SALE AS SALE
      ON J_WC.ACCOUNT_NO_REF = SALE.ACCOUNT_NO_REF
     AND J_WC.ASKING_PRICE_DATE = SALE.ASKING_PRICE_DATE
),
JOIN_LUT AS(
  SELECT J_E.*
        ,OFFER_STATUS.TGT_OFFER_STATUS
    FROM JOIN_EXTRA AS J_E
    LEFT OUTER JOIN TB_XFM_LUT_OFFER_STATUS AS OFFER_STATUS
      ON OFFER_STATUS.SRC_SCR_OFFER_STATUS_SEQ_REF = J_E.OFFER_STATUS_SEQ_REF
),
MAP_FROMSRC AS (
  SELECT J_LUT.*
        ,J_LUT.PURCHASER_NAME AS ADM27_MA5_NAME2_1
        ,J_LUT.TGT_OFFER_STATUS AS ADM27_MA5_STATUS_IND
        ,J_LUT.SALE_OFFER_DATE AS MA5_ACPT_DT
        ,J_LUT.ASKING_PRICE AS ADM27_MA5_ASK_PRICE
        ,J_LUT.EXCHANGE_DATE AS MA5_EXCHG_DT
        ,J_LUT.OFFER_AMOUNT AS ADM27_MA5_OFF_PRICE
        ,J_LUT.OFFER_DATE AS MA5_RECV_DT
        ,J_LUT.PURCHASER_NAME AS ADM27_MA5_PURNAM
    FROM JOIN_LUT AS J_LUT
),
MAP_EXCEPTIONS AS (
  SELECT *
        ,CASE WHEN LEN(ADM27_MA5_NAME2_1) > 40 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_MA5','W:LENGTH-OVERRUN',X02KEY,'ADM27_MA5_NAME2',ADM27_MA5_NAME2_1))
         END AS EXCEP_LEN_OVERRUN
        ,CASE
           WHEN LEN(ADM27_MA5_NAME2_1) >= 40 THEN SUBSTRING(ADM27_MA5_NAME2_1,1,40)
           ELSE ADM27_MA5_NAME2_1
         END AS ADM27_MA5_NAME2
    FROM MAP_FROMSRC AS M_SRC
),
MAP_DEFAULTS AS (
  SELECT *
        ,'MA5' AS MA5_CODE
        ,NULL AS MA5_ISSUE_DT
        ,NULL AS MA5_PROFCD_PC
        ,NULL AS MA5_PROFCD_TN
        ,NULL AS MA5_PROFCD_40
        ,1 AS ADM27_MA5_SEC_NBR
        ,NULL AS ADM27_MA5_INCENT
        ,NULL AS ADM27_MA5_OFFSTG
        ,NULL AS MA5_ORIG_PROF
    FROM MAP_EXCEPTIONS
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,MA5_CODE
        ,ADM27_MA5_NAME2
        ,ADM27_MA5_STATUS_IND
        ,MA5_ACPT_DT
        ,ADM27_MA5_ASK_PRICE
        ,MA5_EXCHG_DT
        ,MA5_ISSUE_DT
        ,ADM27_MA5_OFF_PRICE
        ,MA5_PROFCD_PC
        ,MA5_PROFCD_TN
        ,MA5_PROFCD_40
        ,MA5_RECV_DT
        ,ADM27_MA5_SEC_NBR
        ,ADM27_MA5_PURNAM
        ,ADM27_MA5_INCENT
        ,ADM27_MA5_OFFSTG
        ,MA5_ORIG_PROF
        ,CASE 
           WHEN CAST(CAST(EXCEP_LEN_OVERRUN AS VARCHAR(MAX))
                     AS NVARCHAR(MAX)) = ' ' THEN NULL 
           ELSE CAST(CAST(EXCEP_LEN_OVERRUN AS VARCHAR(MAX))
                     AS XML) 
         END AS X02_UDMH_EXCEPTION
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS
GO
/*
* Author: Pothirajan
* Creation Date: 09/24/2015
* Description: This SQL code applies business transformation for X02_P01 target type.
* Revision History:
*-----------------------------------------------------------------------------------------------------
* Version      Date            Developer                   Description
*-----------------------------------------------------------------------------------------------------
    1.0        09/24/2015.......Pothirajan...............Based on the mapping spec version v1.0
    2.0         2/10/2015       Pothirajan               Based on code review comments
    3.0         12/7/2015       Pothirajan               Based on Mapping spec 1.3
*-----------------------------------------------------------------------------------------------------
*/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_P01]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_P01]
GO

CREATE VIEW [dbo].[VW_X02_P01]
AS
WITH FILTER_ACTIVATE AS (
  SELECT AC01_LOWESTFORANAPP.ACACNTNO
        ,AC01_LOWESTFORANAPP.ACINCEPDATE
        ,AC01_MAIN.ACINCEPDATE AS AC01MAIN_ACINCEPDATE
        ,AC01_LOWESTFORANAPP.ACSUBACNO
        ,AC01_LOWESTFORANAPP.ACHBRNCODE
        ,AC01_LOWESTFORANAPP.ACPURPOSECODE
        ,AC01_LOWESTFORANAPP.ACSOCREGCODE
        ,APP.M63214
        ,APP.A1238
        ,APP.A24220
        ,APP.A156124
        ,APP.S20015
        ,APP.S20011
        ,APP.S2007
        ,APP.S2003
        ,APP.A1339
        ,APP.C2563
        ,APP.A1237
        ,APP.A14223
        ,APP.A12144
        ,APP.B52428
        ,APP.A136192
        ,APP.A14179
        ,APP.A13676
        ,APP.A142190
        ,APP.Q335100
        ,APP.A125123
        ,APP.A1263
        ,APP.A1265
        ,APP.A12398
        ,'ACTIVATE' AS UDMH_APP_SRC
    FROM TB_SRC_AC01_MAIN AS AC01_MAIN  
   INNER JOIN TB_SRC_APP AS APP
      ON AC01_MAIN.ACACNTNO = APP.M63214
   INNER JOIN VW_FILTER_AC01_LOWESTFORANAPP AS AC01_LOWESTFORANAPP
      ON APP.M63214 = AC01_LOWESTFORANAPP.ACACNTNO
     AND APP.A1238 = AC01_LOWESTFORANAPP.ACINCEPDATE
   WHERE APP.A12398 IN ('C','L')
     AND EXISTS (
           SELECT 1
             FROM VW_FILTER_APPSUB AS NOCLONE
            WHERE NOCLONE.M63220 = APP.M63214
              AND NOCLONE.A22010 = APP.A14223
              AND NOCLONE.A211106 = 'N'
                 )
),
FILTER_SUMMIT AS (
  SELECT AC01_LOWESTFORANAPP.ACACNTNO
        ,AC01_LOWESTFORANAPP.ACINCEPDATE AS AC01MAIN_ACINCEPDATE
        ,AC01_LOWESTFORANAPP.ACINCEPDATE
        ,AC01_LOWESTFORANAPP.ACSUBACNO
        ,AC01_LOWESTFORANAPP.ACHBRNCODE
        ,AC01_LOWESTFORANAPP.ACPURPOSECODE
        ,AC01_LOWESTFORANAPP.ACSOCREGCODE
        ,FA_APPSUB.M63214
        ,FA_APPSUB.A1238
        ,NULL AS A24220
        ,NULL AS A156124
        ,NULL AS S20015
        ,NULL AS S20011
        ,NULL AS S2007
        ,NULL AS S2003
        ,NULL AS A1339
        ,NULL AS C2563
        ,NULL AS A1237
        ,FA_APPSUB.A14223
        ,NULL AS A12144
        ,FA_APPSUB.B52428 
        ,NULL AS A136192
        ,NULL AS A14179
        ,NULL AS A13676
        ,NULL AS A142190
        ,NULL AS Q335100
        ,NULL AS A125123
        ,FA_APPSUB.A1263
        ,FA_APPSUB.A1265
        ,NULL AS A12398
        ,'SUMMIT' AS UDMH_APP_SRC
    FROM VW_FILTER_AC01_LOWESTFORANAPP AS AC01_LOWESTFORANAPP
    LEFT OUTER JOIN FILTER_ACTIVATE AS FA_APPSUB
      ON AC01_LOWESTFORANAPP.ACACNTNO = FA_APPSUB.M63214
     AND AC01_LOWESTFORANAPP.ACINCEPDATE = FA_APPSUB.A1238
   WHERE FA_APPSUB.M63214 IS NULL
),
FILTER_AC01 AS (
  SELECT ACACNTNO
        ,ACINCEPDATE
        ,SUM(COALESCE(AC01.ACRETENTIONBAL,0) + COALESCE(AC01.ACTOTADVANCEOS,0)) AS SUM_RETENTION_AMT
        ,SUM(AC01.ACACTUALADVANCE) AS SUM_REL_AMOUNT
        ,SUM(AC01.ACTOTADVANCEOS) AS AC01_SUM_ACTOTADVANCEOS
        ,SUM(AC01.ACRETENTIONBAL) AS AC01_SUM_ACRETENTIONBAL
    FROM TB_SRC_AC01 AS AC01
   GROUP BY ACACNTNO
           ,ACINCEPDATE
),
FILTER_ADVANCE_AMT AS (
  SELECT M63220
        ,A22010
        ,SUM (COALESCE(AC01.ACACTUALADVANCE,0)
             +COALESCE(AC01.ACRETENTIONBAL,0)
             +COALESCE(AC01.ACTOTADVANCEOS,0)
             ) AS SUM_ADVANCE_AMT
    FROM VW_FILTER_APPSUB AS APPSUB
   INNER JOIN TB_SRC_AC01 AS AC01
      ON APPSUB.M63220 = AC01.ACACNTNO
     AND APPSUB.A253107 = AC01.ACSUBACNO
   WHERE APPSUB.A211106 = 'N'
   GROUP BY M63220
           ,A22010
),
FILTER_APPSUB_GROSSCMS AS (
  SELECT SUM(APPSUB.A16246) AS SUM_A16246
        ,SUM(APPSUB.A16247) AS SUM_A16247
        ,M63220
        ,A22010
    FROM VW_FILTER_APPSUB AS APPSUB
   GROUP BY M63220
           ,A22010
),
FILTER_APPFEES AS (
  SELECT SUM(APPFEES.F2625) AS SUM_F2625
        ,APPFEES.M6321
        ,APPFEES.A1424
    FROM TB_SRC_APPFEES AS APPFEES
   CROSS JOIN TB_UDMH_CTL AS CTL
   WHERE F2219 = 'F'
     AND (
            CTL.SOURCE = 'RED' AND  APPFEES.F2302 IN ('AV2','AVM','BTB','BTF','BTH','BTV','FSS','FSV','HVF','RBS','RF','RHB','RVF','VAL','VRF')
            OR CTL.SOURCE = 'BLUE' AND APPFEES.F2302 IN ('RV' ,'VAL', 'VL2', 'VL3', 'FTV')
         )                      
   GROUP BY M6321
           ,A1424
),
FILTER_INSPOLICIES AS (
  SELECT INSPOLICIES_EARLIEST.INSPACNTNO
        ,INSPOLICIES_EARLIEST.INSPPOLICYDATE
        ,SUM(INSPOLICIES_EARLIEST.INSPSUMINSURED) AS SUM_SUMINSURED
        ,SUM(INSPOLICIES_EARLIEST.INSPPREMIUM) AS SUM_INSPPREMIUM
        ,SUM(INSPOLICIES_EARLIEST.INSPPREMIUMTAX) AS SUM_INSPPREMIUMTAX
    FROM VW_FILTER_INSURANCEPOLICIES_EARLIEST AS INSPOLICIES_EARLIEST 
   INNER JOIN TB_SRC_INSURANCETYPES AS INSURANCE_TYPES
      ON INSPOLICIES_EARLIEST.INSPINSTSEQNO = INSURANCE_TYPES.INSTSEQNO
     AND INSPOLICIES_EARLIEST.INSPPOLICYDATE >= INSURANCE_TYPES.INSTPEFDATENEWFROM
     AND INSPOLICIES_EARLIEST.INSPPOLICYDATE <= INSURANCE_TYPES.INSTPEFDATENEWTO
     AND INSURANCE_TYPES.INSTTYPE = 'G'
   GROUP BY INSPACNTNO
           ,INSPPOLICYDATE
),
FILTER_INSPOLICIES_PP AS (
  SELECT INSPOLICIES_EARLIEST.INSPACNTNO
        ,INSPOLICIES_EARLIEST.INSPPOLICYDATE
        ,SUM(INSPOLICIES_EARLIEST.INSPPREMIUM) AS SUM_INSPPREMIUM_PP
    FROM VW_FILTER_INSURANCEPOLICIES_EARLIEST AS INSPOLICIES_EARLIEST 
   INNER JOIN TB_SRC_INSURANCETYPES AS INSURANCE_TYPES
      ON INSPOLICIES_EARLIEST.INSPINSTSEQNO = INSURANCE_TYPES.INSTSEQNO
     AND INSPOLICIES_EARLIEST.INSPPOLICYDATE >= INSURANCE_TYPES.INSTPEFDATENEWFROM
     AND INSPOLICIES_EARLIEST.INSPPOLICYDATE <= INSURANCE_TYPES.INSTPEFDATENEWTO
     AND INSURANCE_TYPES.INSTTYPE = 'PP'
   GROUP BY INSPACNTNO
           ,INSPPOLICYDATE
),
FILTER_STAGEHIST_S3658 AS (
  SELECT TOP 1
         STAGEHIST.S3658
        ,STAGEHIST.M6321
        ,STAGEHIST.A14210
    FROM TB_SRC_STAGEHIST AS STAGEHIST
   WHERE STGSTAGENO = 30
   ORDER BY S1334 DESC
),
FILTER_STAGEHIST AS (
  SELECT STAGEHIST.A15314
        ,STAGEHIST.S1629
        ,STAGEHIST.M6321
        ,STAGEHIST.A14210 
    FROM TB_SRC_STAGEHIST AS STAGEHIST
   WHERE STAGEHIST.STGSTAGENO = 30
    ORDER BY STAGEHIST.S1629 DESC
            ,STAGEHIST.S3505 DESC
   OFFSET 1 ROWS
    FETCH NEXT 1 ROWS ONLY
),
FILTER_M01_PROPCOSTPRICE AS (
  SELECT VPROPERTIES.PROPCOSTPRICE
        ,AC01MAIN.ACACNTNO
    FROM TB_SRC_AC01_MAIN AS AC01MAIN
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVE_LASTREDEEM
      ON AC01MAIN.ACACNTNO = AC01_FIRSTLIVE_LASTREDEEM.ACACNTNO
    LEFT OUTER JOIN TB_SRC_VPROPERTIES AS VPROPERTIES
      ON VPROPERTIES.PROPSEQNO = AC01MAIN.ACHPURCHPROPSEQNO
),
FILTER_BASE62 AS
(
SELECT *
  FROM (
    VALUES ('0',0)
          ,('1',1)
          ,('2',2)
          ,('3',3)
          ,('4',4)
          ,('5',5)
          ,('6',6)
          ,('7',7)
          ,('8',8)
          ,('9',9)
          ,('A',10)
          ,('B',11)
          ,('C',12)
          ,('D',13)
          ,('E',14)
          ,('F',15)
          ,('G',16)
          ,('H',17)
          ,('I',18)
          ,('J',19)
          ,('K',20)
          ,('L',21)
          ,('M',22)
          ,('N',23)
          ,('O',24)
          ,('P',25)
          ,('Q',26)
          ,('R',27)
          ,('S',28)
          ,('T',29)
          ,('U',30)
          ,('V',31)
          ,('W',32)
          ,('X',33)
          ,('Y',34)
          ,('Z',35)
          ,('a',36)
          ,('b',37)
          ,('c',38)
          ,('d',39)
          ,('e',40)
          ,('f',41)
          ,('g',42)
          ,('h',43)
          ,('i',44)
          ,('j',45)
          ,('k',46)
          ,('l',47)
          ,('m',48)
          ,('n',49)
          ,('o',50)
          ,('p',51)
          ,('q',52)
          ,('r',53)
          ,('s',54)
          ,('t',55)
          ,('u',56)
          ,('v',57)
          ,('w',58)
          ,('x',59)
          ,('y',60)
          ,('z',61)
    ) AS BASE(SIXTYTWO, TEN)
),
FILTER_ACAS_APP AS (
  SELECT ACAS.A1227
        ,ACAS.M6321
        ,ACAS.A1422
    FROM TB_SRC_ACAS AS ACAS
   INNER JOIN TB_SRC_APP AS APP
      ON ACAS.A1422 = APP.A14223
     AND ACAS.M6321 = APP.M63214
),
JOIN_WRITECRITERIA AS (
  SELECT *
    FROM FILTER_ACTIVATE
   UNION ALL
  SELECT *
    FROM FILTER_SUMMIT
),
JOIN_EXTRA AS (
  SELECT WRC.*
        ,ADV_AMT.SUM_ADVANCE_AMT
        ,APPSUB_GROSSCMS.SUM_A16246
        ,APPSUB_GROSSCMS.SUM_A16247
        ,INSPOLICIES.SUM_SUMINSURED
        ,INSPOLICIES.SUM_INSPPREMIUM
        ,INSPOLICIES_PP.SUM_INSPPREMIUM_PP
        ,INSPOLICIES.SUM_INSPPREMIUMTAX
        ,STAGEHIST_S3658.S3658
        ,M01_PROPCOSTPRICE.PROPCOSTPRICE
        ,AC01_FILTER.SUM_RETENTION_AMT
        ,AC01_FILTER.SUM_REL_AMOUNT
        ,AC01_FILTER.AC01_SUM_ACTOTADVANCEOS
        ,AC01_FILTER.AC01_SUM_ACRETENTIONBAL
        ,SOLIATES_JOINEDTOAPPSOLICITOR.SOLEMAIL
        ,SOLIATES_JOINEDTOAPPSOLICITOR.SOLFAX
        ,SOLIATES_JOINEDTOAPPSOLICITOR.SOLTELEPHONE
        ,SUM_F2625 AS SUM_F2625_FRVAL
        ,SOLIATES_A1263.SOLREGNUMBER AS A1263_SOLREGNUMBER
        ,SOLIATES_A1265.SOLREGNUMBER AS A1265_SOLREGNUMBER
        ,BASE62_1.SIXTYTWO AS BASE62_ONE
        ,BASE62_2.SIXTYTWO AS BASE62_TWO
        ,BASE62_3.SIXTYTWO AS BASE62_THREE
        ,BASE62_4.SIXTYTWO AS BASE62_FOUR
        ,ACAS_APP.A1227 AS A1227_CASHBKAMT
        ,FIL_STA.A15314 AS A15314_LAST_OFFER
        ,FIL_STA.S1629 AS S1629_ORIG_DT
    FROM JOIN_WRITECRITERIA AS WRC
    LEFT OUTER JOIN FILTER_AC01 AS AC01_FILTER
      ON AC01_FILTER.ACACNTNO = WRC.ACACNTNO
     AND AC01_FILTER.ACINCEPDATE = WRC.ACINCEPDATE
    LEFT OUTER JOIN FILTER_ADVANCE_AMT AS ADV_AMT
      ON ADV_AMT.M63220 = WRC.M63214
     AND ADV_AMT.A22010 = WRC.A14223
    LEFT OUTER JOIN FILTER_APPSUB_GROSSCMS AS APPSUB_GROSSCMS
      ON APPSUB_GROSSCMS.M63220 = WRC.M63214
     AND APPSUB_GROSSCMS.A22010 = WRC.A14223
    LEFT OUTER JOIN FILTER_INSPOLICIES AS INSPOLICIES
      ON INSPOLICIES.INSPACNTNO = WRC.ACACNTNO
     AND INSPOLICIES.INSPPOLICYDATE = WRC.ACINCEPDATE
    LEFT OUTER JOIN FILTER_INSPOLICIES_PP AS INSPOLICIES_PP
      ON INSPOLICIES_PP.INSPACNTNO = WRC.ACACNTNO
     AND INSPOLICIES_PP.INSPPOLICYDATE = WRC.ACINCEPDATE
    LEFT OUTER JOIN FILTER_STAGEHIST_S3658 AS STAGEHIST_S3658
      ON STAGEHIST_S3658.M6321 = WRC.M63214
     AND STAGEHIST_S3658.A14210 = WRC.A14223
    LEFT OUTER JOIN FILTER_M01_PROPCOSTPRICE AS M01_PROPCOSTPRICE
      ON M01_PROPCOSTPRICE.ACACNTNO = WRC.ACACNTNO
    LEFT OUTER JOIN TB_SRC_SOLIATES AS SOLIATES_JOINEDTOAPPSOLICITOR
      ON SOLIATES_JOINEDTOAPPSOLICITOR.SOLSEQNO = WRC.B52428
    LEFT OUTER JOIN TB_SRC_SOLIATES AS SOLIATES_A1263
      ON SOLIATES_A1263.SOLSEQNO = WRC.A1263
    LEFT OUTER JOIN TB_SRC_SOLIATES AS SOLIATES_A1265
      ON SOLIATES_A1265.SOLSEQNO = WRC.A1265
    LEFT OUTER JOIN FILTER_BASE62 AS BASE62_1
      ON WRC.B52428/62/62/62%62 = BASE62_1.TEN
    LEFT OUTER JOIN FILTER_BASE62 AS BASE62_2
      ON WRC.B52428/62/62%62 = BASE62_2.TEN
    LEFT OUTER JOIN FILTER_BASE62 AS BASE62_3
      ON WRC.B52428/62%62 = BASE62_3.TEN
    LEFT OUTER JOIN FILTER_BASE62 AS BASE62_4
      ON WRC.B52428%62 = BASE62_4.TEN
    LEFT OUTER JOIN FILTER_ACAS_APP  AS ACAS_APP
      ON WRC.M63214 = ACAS_APP.M6321
     AND WRC.A14223 = ACAS_APP.A1422
    LEFT OUTER JOIN FILTER_APPFEES AS FIL_APP
      ON FIL_APP.M6321 = WRC.M63214
     AND FIL_APP.A1424 = WRC.A14223
    LEFT OUTER JOIN FILTER_STAGEHIST AS FIL_STA
      ON FIL_STA.M6321 = WRC.M63214
     AND FIL_STA.A14210 = WRC.A14223
),
JOIN_LUTS AS (
  SELECT J_E.*
        ,FUNDS_TRANSACTIONS.TGT_FST_REL_MT
        ,MEDIACODE_LUT.TGT_MEDCDE
        ,USERCODE_LUT.TGT_USERCODE
        ,SRC_SUMMIT_USERCODE
        ,BRANCH_LUT.TGT_BACODE
        ,SERVICELEVEL_LUT.TGT_SERV_LEVEL
        ,PURPOSE_LUT.TGT_PURPOSE
        ,MARKETING_LUT.TGT_MAP_SRC
    FROM JOIN_EXTRA AS J_E
    LEFT OUTER JOIN TB_XFM_LUT_MEDIACODE AS MEDIACODE_LUT
      ON MEDIACODE_LUT.SRC_APP_A156124 = J_E.A156124
    LEFT OUTER JOIN TB_XFM_LUT_USERCODE AS USERCODE_LUT
      ON USERCODE_LUT.SRC_SUMMIT_USERCODE = COALESCE(J_E.S20015,J_E.S20011,J_E.S2007,J_E.S2003)
      OR USERCODE_LUT.SRC_SUMMIT_USERCODE = J_E.S2003
      OR USERCODE_LUT.SRC_SUMMIT_USERCODE = J_E.C2563
    LEFT OUTER JOIN TB_XFM_LUT_BRANCH AS BRANCH_LUT
      ON BRANCH_LUT.SRC_BRANCH = J_E.ACHBRNCODE
    LEFT OUTER JOIN TB_XFM_LUT_SERVICELEVEL AS SERVICELEVEL_LUT
      ON SERVICELEVEL_LUT.SRC_APP_A14179 = J_E.A14179
    LEFT OUTER JOIN TB_XFM_LUT_PURPOSE AS PURPOSE_LUT
      ON PURPOSE_LUT.SRC_PURPOSECODE = J_E.ACPURPOSECODE
    LEFT OUTER JOIN TB_XFM_LUT_MARKETING_CHANNEL AS MARKETING_LUT
      ON MARKETING_LUT.SRC_APP_A125123 = J_E.A125123
   OUTER APPLY ( SELECT TOP 1 FUNDS_METHOD_LUT.TGT_FST_REL_MT
                   FROM TB_SRC_VTRANSACTIONS AS VTRANSACTIONS
                  INNER JOIN TB_XFM_LUT_FUNDS_METHOD AS FUNDS_METHOD_LUT
                     ON VTRANSACTIONS.TRPAYMETHOD = FUNDS_METHOD_LUT.SRC_TRPAYMETHOD
                  WHERE J_E.ACACNTNO = VTRANSACTIONS.TRACNTNO
                    AND J_E.ACSUBACNO = VTRANSACTIONS.TRSUBACNO
                    AND J_E.ACINCEPDATE = VTRANSACTIONS.TRDATE
                ) AS FUNDS_TRANSACTIONS
),
MAP_FROMSRC AS (
  SELECT J_L.*
        ,ROW_NUMBER() OVER (
           PARTITION BY 
             J_L.ACACNTNO
           ORDER BY
             COALESCE(J_L.A1238,J_L.AC01MAIN_ACINCEPDATE)
           ) AS P01_SEQNO
         ,CASE UDMH_APP_SRC
            WHEN 'ACTIVATE' THEN J_L.A24220
            WHEN 'SUMMIT' THEN NULL
          END AS MAR34_P01_CONTACT_FULL
         ,CASE UDMH_APP_SRC
            WHEN 'ACTIVATE' THEN TGT_FST_REL_MT
            WHEN 'SUMMIT' THEN 'M'
          END AS MAR34_P01_FST_REL_MT
         ,CASE UDMH_APP_SRC
            WHEN 'ACTIVATE' THEN TGT_MEDCDE
            WHEN 'SUMMIT' THEN NULL
          END AS MAR34_P01_MEDCDE
         ,CASE
            WHEN UDMH_APP_SRC = 'ACTIVATE' AND SRC_SUMMIT_USERCODE = COALESCE(J_L.S20015, J_L.S20011,J_L.S2007, J_L.S2003) THEN TGT_USERCODE
            WHEN UDMH_APP_SRC = 'SUMMIT' THEN NULL
          END AS MAR34_P01_OFF_AUTH
         ,CASE
            WHEN UDMH_APP_SRC = 'ACTIVATE' AND SRC_SUMMIT_USERCODE = J_L.S2003 THEN TGT_USERCODE
            WHEN UDMH_APP_SRC = 'SUMMIT' THEN NULL
          END AS MAR34_P01_OFF_RECCO
         ,CASE
            WHEN UDMH_APP_SRC = 'ACTIVATE' AND J_L.SRC_SUMMIT_USERCODE = J_L.C2563 THEN J_L.TGT_USERCODE
            WHEN UDMH_APP_SRC = 'SUMMIT' THEN
              (SELECT MISC_LUT.TGT_VAL
                 FROM TB_XFM_LUT_MISC AS MISC_LUT
                WHERE MISC_LUT.SRC_KEY = 'MIGR-USER'
                )
          END AS MAR34_P01_DATA_ENTRY
         ,SUM_RETENTION_AMT AS MAR34_P01_RETAINED
         ,SUM_ADVANCE_AMT AS MAR34_P01_ADVANCE
         ,CASE UDMH_APP_SRC
            WHEN 'ACTIVATE' THEN J_L.A1339
            WHEN 'SUMMIT' THEN DATEADD(DAY, -1, J_L.ACINCEPDATE)
          END AS P01_APPLIC_DT
         ,CASE UDMH_APP_SRC
            WHEN 'ACTIVATE' THEN A1227_CASHBKAMT
            WHEN 'SUMMIT' THEN  0
          END AS MAR34_P01_CASHBKAMT
         ,CASE UDMH_APP_SRC
            WHEN 'ACTIVATE' THEN J_L.A1238
            WHEN 'SUMMIT' THEN J_L.ACINCEPDATE
          END AS P01_COMP_DT
         ,CASE UDMH_APP_SRC
            WHEN 'ACTIVATE' THEN J_L.A1237
            WHEN 'SUMMIT' THEN J_L.ACINCEPDATE
          END AS P01_ESTCOMP_DT
         ,CASE UDMH_APP_SRC
            WHEN 'ACTIVATE' THEN J_L.SUM_A16246
            WHEN 'SUMMIT' THEN NULL --TODO: IN STEAD OF NULL i NEED TO PUT THE VALUE OF FIELD P01_MAR34_P01_CMS. But since the field P01_MAR34_P01_CMS has dependency on A16, it is defaulted to NULL, so it is NULL
          END AS MAR34_P01_GROSS_CMS
        ,TGT_BACODE AS MAR34_P01_INTROCODE
        ,SUM_SUMINSURED AS MAR34_P01_HLC_AMOUNT
        ,SUM_INSPPREMIUM AS MAR34_P01_HLC_PREM
        ,SUM_INSPPREMIUMTAX AS MAR34_P01_HLC_IPT
         ,CASE UDMH_APP_SRC
            WHEN 'ACTIVATE' THEN J_L.S3658 
            WHEN 'SUMMIT' THEN DATEADD(DAY,-1,J_L.ACINCEPDATE)
          END AS P01_OFF_DT
        ,PROPCOSTPRICE AS MAR34_P01_ORG_PPRICE
        ,SUM_REL_AMOUNT AS MAR34_P01_REL_AMOUNT
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN J_L.A12144
           WHEN 'SUMMIT' THEN NULL
         END AS MAR34_P01_SELL_PRICE
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN J_L.SOLEMAIL
           WHEN 'SUMMIT' THEN NULL
         END AS MAR34_P01_SOLEMAIL1
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN J_L.SOLFAX
           WHEN 'SUMMIT' THEN NULL
         END AS MAR34_P01_SOLFAX1
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN J_L.SOLTELEPHONE
           WHEN 'SUMMIT' THEN NULL
         END AS MAR34_P01_SOLTEL1
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN J_L.A136192
           WHEN 'SUMMIT' THEN NULL
         END AS MAR34_P01_INTRO_FEE
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN J_L.TGT_SERV_LEVEL
           WHEN 'SUMMIT' THEN NULL
         END AS MAR34_P01_SERV_LEVEL
        ,TGT_PURPOSE AS MAR34_P01_CAT_LOAN
        ,J_L.SUM_INSPPREMIUM_PP AS MAR34_P01_ASU_PREM
        ,CASE J_L.ACSOCREGCODE
           WHEN 'CCA' THEN 'Y'
           ELSE 'N'
         END AS MAR34_P01_CCA_REG
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN 
             CASE J_L.A13676
               WHEN 'Y' THEN 'D'
               ELSE 'I'
             END
           WHEN 'SUMMIT' THEN NULL
         END AS MAR34_P01_DIR_IND
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN 
             CASE
               WHEN LEN(J_L.A142190) > 0 THEN J_L.M63214 + '/' + J_L.A142190
               ELSE J_L.Q335100
             END
           WHEN 'SUMMIT' THEN NULL
         END AS MAR34_P01_KFI_REFNO
        ,CASE 
           WHEN AC01_SUM_ACTOTADVANCEOS > 0 THEN 'S'
           WHEN AC01_SUM_ACRETENTIONBAL > 0 THEN 'U'
           ELSE NULL
         END AS MAR34_P01_RET_REAS
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN J_L.TGT_MAP_SRC
           WHEN 'SUMMIT' THEN NULL
         END AS MAR34_P01_MAP_SRC
        ,CASE 
           WHEN UDMH_APP_SRC = 'ACTIVATE' THEN COALESCE(J_L.A1263_SOLREGNUMBER,J_L.A1265_SOLREGNUMBER)
           WHEN UDMH_APP_SRC ='SUMMIT' THEN NULL
         END AS MAR34_P01_AR_FSA_REF_SOURCE
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN J_L.A1339
           WHEN 'SUMMIT' THEN NULL
         END AS P01_FULAPP_DT
        ,CASE 
           WHEN (SELECT CAST( TGT_VAL AS DATE) FROM TB_XFM_LUT_MISC WHERE SRC_KEY = 'LST-Q-MLAR') >  J_L.ACINCEPDATE THEN 'N'
           ELSE 'Y'
         END AS MAR34_P01_MLAR_EXT
        ,BASE62_ONE + BASE62_TWO + BASE62_THREE + BASE62_FOUR AS P01_ORIG_SOL
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN J_L.SUM_A16247
           WHEN 'SUMMIT' THEN NULL --TODO : Revisit Later as it has a dependency on A16 for Summit
         END AS MAR34_P01_CMS
        ,CASE UDMH_APP_SRC
           WHEN 'ACTIVATE' THEN SUM_F2625_FRVAL
           WHEN 'SUMMIT' THEN NULL
         END AS MAR34_P01_FRVAL_AMT 
        ,A15314_LAST_OFFER AS MAR34_P01_LAST_OFFER
        ,S1629_ORIG_DT AS P01_OFF_ORIG_DT
    FROM JOIN_LUTS AS J_L
),
MAP_DEPENDENT AS (
  SELECT MAP_SRC.*
        ,CASE P01_SEQNO WHEN 1 THEN NULL ELSE 'N' END AS MAR34_P01_CONS_LOAN
        ,CASE P01_SEQNO WHEN 1 THEN NULL ELSE 'S' END AS MAR34_P01_PRI_OR_SEC
        ,CASE WHEN MAR34_P01_RETAINED > 0  THEN 'Y' ELSE 'N' END AS MAR34_P01_STAGE_REL
        ,CASE P01_SEQNO WHEN 1 THEN MAP_SRC.ACINCEPDATE ELSE NULL END AS P01_ORG_P_DT
        ,CASE WHEN MAR34_P01_FRVAL_AMT > 0 THEN 'Y' ELSE 'N' END AS MAR34_P01_FREEVAL
    FROM MAP_FROMSRC AS MAP_SRC
),
MAP_COPYTARGET AS (
  SELECT M_D.*
        ,P01_COMP_DT AS P01_INLEGAL_DT
        ,MAR34_P01_ADVANCE AS MAR34_P01_OFFER_ADV
        ,MAR34_P01_SOLEMAIL1 AS MAR34_P01_SOLEMAIL2
        ,MAR34_P01_SOLFAX1 AS MAR34_P01_SOLFAX2
        ,MAR34_P01_SOLTEL1 AS MAR34_P01_SOLTEL2 --TODO :  Revisit later, as the mapping spec says it should be MAR34_P01_SOLTEL2 which is not correct, raised in issue list
        ,MAR34_P01_CAT_LOAN AS MAR34_P01_PURPOSE
        ,P01_ORIG_SOL AS P01_ORIG_SOL2
    FROM MAP_DEPENDENT AS M_D
),
MAP_DEFAULTS AS (
  SELECT M_C.*
        ,'P01' AS P01_CODE
        ,'N' AS MAR34_P01_HLC_DEDUCT
        ,NULL AS MAR34_P01_CANCEL_BY
        ,'Y' AS MAR34_P01_COMPCONFFL
        ,'N' AS MAR34_P01_CONF_CONDS
        ,NULL AS MAR34_P01_CONS_STATU
        ,'N' AS MAR34_P01_CONTS_REQ
        ,'N' AS MAR34_P01_DIP_FLAG
        ,'N' AS MAR34_P01_FREE_HLC
        ,'N' AS MAR34_P01_FUR_BORROW
        ,'N' AS MAR34_P01_MIRAS_FLAG
        ,'N' AS MAR34_P01_MIRAS_MORT
        ,'Y' AS MAR34_P01_OFFER_PRT
        ,'N' AS MAR34_P01_OTHER_CUST
        ,'N' AS MAR34_P01_PACKAGED
        ,NULL AS MAR34_P01_PAYSAV
        ,NULL AS MAR34_P01_PROF_FIRM
        ,NULL AS MAR34_P01_PROF_NAME
        ,NULL AS MAR34_P01_REAS_CODE
        ,'N' AS MAR34_P01_RET_CBACK
        ,'Y' AS MAR34_P01_ROT_REC
        ,'N' AS MAR34_P01_SPEC_COND
        ,NULL AS MAR34_P01_UNDERWRTR
        ,'A' AS MAR34_P01_UW_STATUS
        ,'Y' AS MAR34_P01_VAL_INST
        ,NULL AS MAR34_P01_BNK_SCODE
        ,NULL AS P01_CANCEL_DT
        ,NULL AS MAR34_P01_CHEQUE_NO
        ,NULL AS MAR34_P01_CONS_SUBNO
        ,NULL AS MAR34_P01_ELIG_AMT
        ,NULL AS MAR34_P01_EMP_NO
        ,NULL AS MAR34_P01_FEES_IN
        ,0 AS MAR34_P01_LAST_CHG
        ,0 AS MAR34_P01_LAST_CHK
        ,'N' AS MAR34_P01_LET_IN_P
        ,0 AS MAR34_P01_LETTERSENT
        ,0 AS MAR34_P01_OUT_ADVAN
        ,NULL AS MAR34_P01_PAYEE_ACT
        ,NULL AS P01_REINST_DT
        ,NULL AS P01_SCRTCH_DT
        ,NULL AS P01_SOLREF_PC
        ,NULL AS P01_SOLREF_TN
        ,NULL AS P01_SOLREF_40
        ,NULL AS P01_SOLRF2_PC
        ,NULL AS P01_SOLRF2_TN
        ,NULL AS P01_SOLRF2_40
        ,NULL AS P01_SOURCE_PC
        ,NULL AS P01_SOURCE_TN
        ,NULL AS P01_SOURCE_40
        ,NULL AS P01_SOURCE_BF
        ,NULL AS P01_SOURCE_PF
        ,NULL AS MAR34_P01_VALREP1
        ,NULL AS MAR34_P01_VALREP2
        ,NULL AS MAR34_P01_VALREP3
        ,NULL AS MAR34_P01_VALREP4
        ,'N' AS MAR34_P01_RAPID_APP
        ,NULL AS MAR34_P01_CREDIT_SC
        ,NULL AS P01_ORIG_PROF
        ,NULL AS MAR34_P01_MCRI_NO
        ,NULL AS P01_RCARET1_DT
        ,NULL AS P01_RCARET2_DT
        ,NULL AS P01_RCARET3_DT
        ,NULL AS P01_RCARET4_DT
        ,NULL AS P01_RCAOF1_DT
        ,NULL AS P01_RCAOF2_DT
        ,NULL AS P01_CCACAN_DT
        ,NULL AS P01_FINRCA_DT
        ,'S' AS MAR34_P01_VALTYP
        ,NULL AS MAR34_P01_EXECUS
        ,'N' AS MAR34_P01_USE_HPI
        ,'N' AS MAR34_P01_SEP_DD_REQ
        ,NULL AS P01_FUNDS_DT
        ,NULL AS MAR34_P01_ADD_INFO
        ,NULL AS MAR34_P01_AGENT_ID
        ,NULL AS P01_C_REAS_DT
        ,NULL AS MAR34_P01_C_REAS_TM
        ,NULL AS MAR34_P01_C_REAS_USR
        ,'N' AS MAR34_P01_CCA_DRWREG
        ,NULL AS MAR34_P01_CHAPS_AUTH
        ,'N' AS MAR34_P01_EST_VALUE
        ,NULL AS MAR34_P01_INTRO_REF
        ,NULL AS MAR34_P01_KADM
        ,NULL AS P01_P_DEC_DT
        ,NULL AS MAR34_P01_P_DEC_TM
        ,NULL AS MAR34_P01_P_DEC_USR
        ,NULL AS MAR34_P01_P_DECAPP
        ,NULL AS MAR34_P01_RED_SUB1
        ,NULL AS MAR34_P01_RED_SUB2
        ,NULL AS MAR34_P01_RED_SUB3
        ,NULL AS P01_S_DEC_DT
        ,NULL AS MAR34_P01_S_DEC_TM
        ,NULL AS MAR34_P01_S_DEC_USR
        ,NULL AS MAR34_P01_S_DECAPP
        ,NULL AS MAR34_P01_FSA_REF
        ,'N' AS MAR34_P01_CAPRED_IND
        ,NULL AS MAR34_P01_OFFER_RATE
        ,NULL AS MAR34_P01_ACCT_NAME
        ,NULL AS MAR34_P01_BANK_ACNO
        ,NULL AS MAR34_P01_SORT_CODE
        ,NULL AS MAR34_P01_BANK_REF
        ,NULL AS MAR43_P01_DUE_DAY_NO
        ,NULL AS MAR34_P01_LAST_INC
        ,NULL AS MAR34_P01_INC_MTH
        ,NULL AS MAR34_P01_LUMP_SUM
        ,NULL AS MAR34_P01_CRDREFNBR
        ,NULL AS MAR34_P01_MARKET_TYP
        ,NULL AS MAR37_P01_COMP_INPTD
        ,NULL AS MAR34_P01_RAISEINADV
        --Rules Not Started
        ,NULL AS MAR34_P01_L_QTR_CAT
        ,NULL AS MAR34_P01_FRVALRFND -- As per the mail communication from Ansul
    FROM MAP_COPYTARGET AS M_C
),
MAP_EXCEPTION AS (
  SELECT MAP_DEF.*
        ,CASE 
           WHEN LEN(MAR34_P01_CONTACT_FULL) > 25 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P01','W:LENGTH-OVERRUN',MAP_DEF.ACACNTNO,'MAR34_P01_CONTACT',MAR34_P01_CONTACT_FULL))
         END AS EXCEPTION_1
        ,CASE 
           WHEN LEN(MAR34_P01_CONTACT_FULL) > 25 THEN SUBSTRING(MAR34_P01_CONTACT_FULL,1,25)
           ELSE MAR34_P01_CONTACT_FULL
         END AS MAR34_P01_CONTACT
        ,CASE
           WHEN LEN(MAR34_P01_SELL_PRICE) > 8 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P01','R:ROUNDING',MAP_DEF.ACACNTNO,'MAR34_P01_SELL_PRICE',MAR34_P01_SELL_PRICE))
         END AS EXCEPTION_2
        ,CASE
           WHEN LEN(MAR34_P01_RETAINED) > 8 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P01','R:ROUNDING',MAP_DEF.ACACNTNO,'MAR34_P01_RETAINED',MAR34_P01_RETAINED))
         END AS EXCEPTION_3
        ,CASE
           WHEN LEN(MAR34_P01_ORG_PPRICE) > 8 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P01','R:ROUNDING',MAP_DEF.ACACNTNO,'MAR34_P01_ORG_PPRICE',MAR34_P01_ORG_PPRICE))
         END AS EXCEPTION_4
        ,CASE 
           WHEN ISNUMERIC(MAR34_P01_AR_FSA_REF_SOURCE) = 0  THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P01','W:WARNING',MAP_DEF.ACACNTNO,'MAR34.P01-AR-FSA-REF',MAR34_P01_AR_FSA_REF_SOURCE))
         END AS EXCEPTION_5 --Raising this exception, as the source data has alpha numeric values but the target is NUM, as per the communication with Ansul
        ,CASE WHEN ISNUMERIC(MAR34_P01_AR_FSA_REF_SOURCE) = 1  THEN MAR34_P01_AR_FSA_REF_SOURCE END AS MAR34_P01_AR_FSA_REF
    FROM MAP_DEFAULTS AS MAP_DEF
),
OUT_FIELDS AS (
  SELECT M_EXP.ACACNTNO AS X02KEY
        ,P01_CODE
        ,P01_SEQNO
        ,MAR34_P01_HLC_DEDUCT
        ,MAR34_P01_CANCEL_BY
        ,MAR34_P01_COMPCONFFL
        ,MAR34_P01_CONF_CONDS
        ,MAR34_P01_CONS_LOAN
        ,MAR34_P01_CONS_STATU
        ,MAR34_P01_CONTACT
        ,MAR34_P01_CONTS_REQ
        ,MAR34_P01_DIP_FLAG
        ,MAR34_P01_FREE_HLC
        ,MAR34_P01_FST_REL_MT
        ,MAR34_P01_FUR_BORROW
        ,MAR34_P01_MEDCDE
        ,MAR34_P01_MIRAS_FLAG
        ,MAR34_P01_MIRAS_MORT
        ,MAR34_P01_OFF_AUTH
        ,MAR34_P01_OFF_RECCO
        ,MAR34_P01_OFFER_PRT
        ,MAR34_P01_OTHER_CUST
        ,MAR34_P01_PACKAGED
        ,MAR34_P01_PAYSAV
        ,MAR34_P01_PRI_OR_SEC
        ,MAR34_P01_PROF_FIRM
        ,MAR34_P01_PROF_NAME
        ,MAR34_P01_REAS_CODE
        ,MAR34_P01_RET_CBACK
        ,MAR34_P01_ROT_REC
        ,MAR34_P01_SPEC_COND
        ,MAR34_P01_STAGE_REL
        ,MAR34_P01_UNDERWRTR
        ,MAR34_P01_UW_STATUS
        ,MAR34_P01_VAL_INST
        ,MAR34_P01_ADVANCE
        ,P01_APPLIC_DT
        ,MAR34_P01_BNK_SCODE
        ,P01_CANCEL_DT
        ,MAR34_P01_CASHBKAMT
        ,MAR34_P01_CHEQUE_NO
        ,MAR34_P01_CMS
        ,P01_COMP_DT
        ,MAR34_P01_CONS_SUBNO
        ,MAR34_P01_DATA_ENTRY
        ,MAR34_P01_ELIG_AMT
        ,MAR34_P01_EMP_NO
        ,P01_ESTCOMP_DT
        ,MAR34_P01_FEES_IN
        ,MAR34_P01_GROSS_CMS
        ,P01_INLEGAL_DT
        ,MAR34_P01_INTROCODE
        ,MAR34_P01_LAST_CHG
        ,MAR34_P01_LAST_CHK
        ,MAR34_P01_LAST_OFFER
        ,MAR34_P01_LET_IN_P
        ,MAR34_P01_LETTERSENT
        ,MAR34_P01_HLC_AMOUNT
        ,MAR34_P01_HLC_PREM
        ,MAR34_P01_HLC_IPT
        ,MAR34_P01_OFFER_ADV
        ,P01_OFF_ORIG_DT
        ,P01_OFF_DT
        ,P01_ORG_P_DT
        ,MAR34_P01_ORG_PPRICE
        ,MAR34_P01_OUT_ADVAN
        ,MAR34_P01_PAYEE_ACT
        ,P01_REINST_DT
        ,MAR34_P01_REL_AMOUNT
        ,MAR34_P01_RETAINED
        ,P01_SCRTCH_DT
        ,MAR34_P01_SELL_PRICE
        ,MAR34_P01_SOLEMAIL1
        ,MAR34_P01_SOLEMAIL2
        ,MAR34_P01_SOLFAX1
        ,MAR34_P01_SOLFAX2
        ,MAR34_P01_SOLTEL1
        ,MAR34_P01_SOLTEL2
        ,P01_SOLREF_PC
        ,P01_SOLREF_TN
        ,P01_SOLREF_40
        ,P01_SOLRF2_PC
        ,P01_SOLRF2_TN
        ,P01_SOLRF2_40
        ,P01_SOURCE_PC
        ,P01_SOURCE_TN
        ,P01_SOURCE_40
        ,P01_SOURCE_BF
        ,P01_SOURCE_PF
        ,MAR34_P01_INTRO_FEE
        ,MAR34_P01_FRVAL_AMT
        ,MAR34_P01_FREEVAL
        ,MAR34_P01_FRVALRFND
        ,MAR34_P01_VALREP1
        ,MAR34_P01_VALREP2
        ,MAR34_P01_VALREP3
        ,MAR34_P01_VALREP4
        ,MAR34_P01_RAPID_APP
        ,MAR34_P01_CREDIT_SC
        ,P01_ORIG_SOL
        ,P01_ORIG_SOL2
        ,P01_ORIG_PROF
        ,MAR34_P01_MCRI_NO
        ,MAR34_P01_SERV_LEVEL
        ,MAR34_P01_CAT_LOAN
        ,P01_RCARET1_DT
        ,P01_RCARET2_DT
        ,P01_RCARET3_DT
        ,P01_RCARET4_DT
        ,P01_RCAOF1_DT
        ,P01_RCAOF2_DT
        ,MAR34_P01_PURPOSE
        ,P01_CCACAN_DT
        ,P01_FINRCA_DT
        ,MAR34_P01_VALTYP
        ,MAR34_P01_EXECUS
        ,MAR34_P01_USE_HPI
        ,MAR34_P01_ASU_PREM
        ,MAR34_P01_SEP_DD_REQ
        ,P01_FUNDS_DT
        ,MAR34_P01_ADD_INFO
        ,MAR34_P01_AGENT_ID
        ,P01_C_REAS_DT
        ,MAR34_P01_C_REAS_TM
        ,MAR34_P01_C_REAS_USR
        ,MAR34_P01_CCA_DRWREG
        ,MAR34_P01_CCA_REG
        ,MAR34_P01_CHAPS_AUTH
        ,MAR34_P01_DIR_IND
        ,MAR34_P01_EST_VALUE
        ,MAR34_P01_INTRO_REF
        ,MAR34_P01_KADM
        ,MAR34_P01_KFI_REFNO
        ,P01_P_DEC_DT
        ,MAR34_P01_P_DEC_TM
        ,MAR34_P01_P_DEC_USR
        ,MAR34_P01_P_DECAPP
        ,MAR34_P01_RED_SUB1
        ,MAR34_P01_RED_SUB2
        ,MAR34_P01_RED_SUB3
        ,MAR34_P01_RET_REAS
        ,P01_S_DEC_DT
        ,MAR34_P01_S_DEC_TM
        ,MAR34_P01_S_DEC_USR
        ,MAR34_P01_S_DECAPP
        ,MAR34_P01_FSA_REF
        ,MAR34_P01_MAP_SRC
        ,MAR34_P01_CAPRED_IND
        ,MAR34_P01_AR_FSA_REF
        ,MAR34_P01_OFFER_RATE
        ,P01_FULAPP_DT
        ,MAR34_P01_MLAR_EXT
        ,MAR34_P01_ACCT_NAME
        ,MAR34_P01_BANK_ACNO
        ,MAR34_P01_SORT_CODE
        ,MAR34_P01_BANK_REF
        ,MAR43_P01_DUE_DAY_NO
        ,MAR34_P01_LAST_INC
        ,MAR34_P01_INC_MTH
        ,MAR34_P01_LUMP_SUM
        ,MAR34_P01_CRDREFNBR
        ,MAR34_P01_L_QTR_CAT
        ,MAR34_P01_MARKET_TYP
        ,MAR37_P01_COMP_INPTD
        ,MAR34_P01_RAISEINADV
        ,CASE
           WHEN CAST(CONCAT(
                            CAST(EXCEPTION_1 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_2 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_3 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_4 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_5 AS VARCHAR(MAX))
                           )AS NVARCHAR(MAX)) = ' ' THEN NULL 
         ELSE 
           CAST (CONCAT(
             CAST(EXCEPTION_1 AS VARCHAR(MAX))
            ,CAST(EXCEPTION_2 AS VARCHAR(MAX))
            ,CAST(EXCEPTION_3 AS VARCHAR(MAX))
            ,CAST(EXCEPTION_4 AS VARCHAR(MAX))
            ,CAST(EXCEPTION_5 AS VARCHAR(MAX))
                ) AS XML)
          END AS X02_UDMH_EXCEPTION

    FROM MAP_EXCEPTION AS M_EXP
)
SELECT * 
  FROM OUT_FIELDS
GO

/*
 * Author: SHRAVANI
 * Creation Date: 16/07/2015
 * Description: This SQL code is used for Unit Testing of X02_P04 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer                   Description
 *-----------------------------------------------------------------------------------------------------
   1.0        06/07/2015       SHRAVANI                  Based on Mapping Spec version v0.6
   2.0        15/07/2015       SHRAVANI                  Based on Mapping Spec version v0.7
   3.0        31/08/2015       SHRAVANI                  Based on Mapping Spec version v0.9
   4.0        01/09/2015       SHRAVANI                  Updated based on the review Commens.
   5.0        05/11/2015       SHRAVANI                  Updated based on Mapping Spec version v1.3
 *-----------------------------------------------------------------------------------------------------
 */
IF EXISTS (SELECT * FROM sys.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[dbo].[VW_X02_P04]') AND type in (N'V'))
 DROP VIEW [dbo].[VW_X02_P04]
GO

CREATE VIEW [dbo].[VW_X02_P04]
AS
WITH
FILTER_AC01 AS (
  SELECT *
    FROM TB_SRC_AC01_MAIN 
),
FILTER_APP AS (
  SELECT 'APP' AS UDMH_VALSRC
         ,APP.M63214
         ,APP.A14223
         ,APP.V42653
         ,APP.V45263
         ,APP.V4604
         ,APP.V46232
         ,APP.V46527
         ,APP.V46528
         ,APP.V46529
         ,APP.V43120
         ,APP.V42510
         ,APP.V42512
         ,APP.V42513
         ,APP.V42514
         ,APP.V42515
         ,APP.S36019
         ,APP.S36021
         ,APP.S36022
         ,APP.S36023
         ,APP.S36024
         ,APP.S34526
         ,APP.S13427
         ,APP.V41339
         ,APP.V41336
         ,APP.V42338
         ,APP.V41537
         ,APP.S42518
         ,APP.V41454
         ,APP.S31225
         ,APP.V42116
         ,APP.V42317
         ,APP.V42659
         ,APP.V41572
         ,APP.V4259
         ,APP.V46169
         ,APP.V42525
         ,APP.P61416
         ,APP.P61417
         ,ROW_NUMBER () OVER (
            PARTITION BY
              APP.M63214
             ,APP.P61416
             ,APP.P61417
            ORDER BY
             APP.A14223 DESC
         ) AS APP_RN
    FROM TB_SRC_APP AS APP
),
FILTER_APP_UNIQUE AS (
  SELECT FIL_APP.*        
    FROM FILTER_APP AS FIL_APP
    JOIN FILTER_AC01 AS AC01
      ON AC01.ACACNTNO = FIL_APP.M63214
   WHERE APP_RN = 1
     AND FIL_APP.P61416 > 0
     AND FIL_APP.P61417 IS NOT NULL 
),
FILTER_VALHIST AS (
  SELECT 'VALHIST' AS UDMH_VALSRC
         ,VALHIST.M6321
         ,VALHIST.V4234
         ,VALHIST.C6148
         ,VALHIST.V4606
         ,VALHIST.V4315
         ,VALHIST.V4223
         ,VALHIST.C6529
         ,ROW_NUMBER () OVER (
            PARTITION BY
              VALHIST.M6321
             ,VALHIST.V4234
             ,VALHIST.C6148
            ORDER BY
              VALHIST.V4223 DESC
         ) AS VAL_RN
    FROM TB_SRC_VALHIST AS VALHIST
),
FILTER_VALHIST_UNIQUE AS (
  SELECT FIL_VAL.*
    FROM FILTER_VALHIST AS FIL_VAL
    JOIN FILTER_AC01 AS AC01
      ON AC01.ACACNTNO = FIL_VAL.M6321
    LEFT OUTER JOIN FILTER_APP_UNIQUE AS APP_UNI
      ON APP_UNI.M63214 = FIL_VAL.M6321
     AND APP_UNI.P61416 = FIL_VAL.C6148
     AND APP_UNI.P61417 = FIL_VAL.V4234
   WHERE VAL_RN = 1
     AND FIL_VAL.V4234 IS NOT NULL
     AND FIL_VAL.C6148 > 0
     AND APP_UNI.M63214 IS NULL
),
FILTER_VPROPERTIES AS (
  SELECT 'VPROPERTIES' AS UDMH_VALSRC
         ,VPROPERTIES.PROPSEQNO
         ,VPROPERTIES.PROPVALUATION
         ,VPROPERTIES.PROPVALUATIONDATE
         ,VPROPERTIES.PROPNOBATHROMS
         ,VPROPERTIES.PROPNOBEDROMS
         ,VPROPERTIES.PROPNOKITCHENS
         ,VPROPERTIES.PROPNORECEPTIONS
         ,VPROPERTIES.PROPROF
         ,VPROPERTIES.PROPWALS
         ,VPROPERTIES.PROPWARANTYTYPE
         ,VPROPERTIES.PROPSITINGTENANT
         ,AC01.ACACNTNO
    FROM TB_SRC_VPROPERTIES AS VPROPERTIES
    JOIN FILTER_AC01 AS AC01
      ON AC01.ACHPURCHPROPSEQNO = VPROPERTIES.PROPSEQNO
    LEFT OUTER JOIN FILTER_APP_UNIQUE AS FIL_APP
      ON FIL_APP.M63214 = AC01.ACACNTNO
     AND FIL_APP.P61417 = VPROPERTIES.PROPVALUATIONDATE
     AND FIL_APP.P61416 = VPROPERTIES.PROPVALUATION
    LEFT OUTER JOIN FILTER_VALHIST_UNIQUE AS FIL_VAL
      ON FIL_VAL.M6321 = AC01.ACACNTNO
     AND FIL_VAL.V4234 = VPROPERTIES.PROPVALUATIONDATE
     AND FIL_VAL.C6148 = VPROPERTIES.PROPVALUATION
   WHERE VPROPERTIES.PROPVALUATIONDATE IS NOT NULL
     AND VPROPERTIES.PROPVALUATION > 0
     AND FIL_APP.M63214 IS NULL
     AND FIL_VAL.M6321 IS NULL
),
FILTER_MISSING AS (
  SELECT VPROPERTIES.*
        ,'MISSING' AS UDMH_VALSRC
        ,AC01_MAIN.ACACNTNO
        ,AC01_MAIN.ACINCEPDATE 
    FROM TB_SRC_VPROPERTIES AS VPROPERTIES
   INNER JOIN  TB_SRC_AC01_MAIN AS AC01_MAIN
      ON AC01_MAIN.ACHPURCHPROPSEQNO = VPROPERTIES.PROPSEQNO 
    LEFT OUTER JOIN FILTER_APP_UNIQUE AS FIL_APP
      ON FIL_APP.M63214 = AC01_MAIN.ACACNTNO
     AND FIL_APP.P61417 = VPROPERTIES.PROPVALUATIONDATE
     AND FIL_APP.P61416 = VPROPERTIES.PROPVALUATION
    LEFT OUTER JOIN FILTER_VALHIST_UNIQUE AS FIL_VHS
      ON FIL_VHS.M6321 = AC01_MAIN.ACACNTNO
     AND FIL_VHS.V4234 = VPROPERTIES.PROPVALUATIONDATE
     AND FIL_VHS.C6148 = VPROPERTIES.PROPVALUATION
    LEFT OUTER JOIN FILTER_VPROPERTIES AS FIL_VPROP
      ON FIL_VPROP.PROPSEQNO = AC01_MAIN.ACHPURCHPROPSEQNO
   WHERE FIL_APP.M63214 IS NULl
     AND FIL_VHS.M6321 IS NULL
     AND FIL_VPROP.PROPSEQNO IS NULL
),
 FILTER_MISC_PC AS (
  SELECT MISCLUT.TGT_VAL
        ,MISCLUT.SRC_KEY
    FROM TB_XFM_LUT_MISC AS MISCLUT
   WHERE MISCLUT.SRC_KEY = 'DEF-VAL-PC'
),
FILTER_MISC_TN AS (
  SELECT MISCLUT.TGT_VAL
        ,MISCLUT.SRC_KEY
    FROM TB_XFM_LUT_MISC AS MISCLUT
   WHERE MISCLUT.SRC_KEY = 'DEF-VAL-TN'
),
FILTER_MISC_40 AS (
  SELECT MISCLUT.TGT_VAL
        ,MISCLUT.SRC_KEY
    FROM TB_XFM_LUT_MISC AS MISCLUT
   WHERE MISCLUT.SRC_KEY = 'DEF-VAL-40'
),
FILTER_MISC_UNK AS (
  SELECT MISCLUT.TGT_VAL
        ,MISCLUT.SRC_KEY
    FROM TB_XFM_LUT_MISC AS MISCLUT
   WHERE MISCLUT.SRC_KEY = 'VALREP-UNK'
),
JOIN_WRITECRITERIA AS (
  SELECT M63214 AS UDMH_ACCOUNTNO
        ,UDMH_VALSRC
        ,V43120 AS APP_V43120_VALTYPE
        ,V46527 AS APP_V46527_MAIN
        ,P61416 AS APP_P61416_VALUATION
        ,NULL AS VHS_V4315_VALTYPE
        ,NULL AS VHS_C6529_REINSTATE
        ,NULL AS VHS_C6148_VALUATION
        ,NULL AS PRO_PROPVALUATION
        ,NULL AS VAL_PROPSEQNO
        ,V4604 AS APP_V4604_SENQ
        ,NULL  AS VHS_V4606_SENQ
        ,P61417 AS APP_P61417_VALDATE
        ,V42653 AS APP_V42653
        ,V45263 AS APP_V45263
        ,V46232 AS APP_V46232
        ,V46528 AS APP_V46528
        ,V46529 AS APP_V46529
        ,NULL AS VHS_V4234_VALDATE
        ,NULL AS PRO_PROSEQNO
        ,NULL AS PROP_PROPVALDATE
        ,V42510 AS V42510
        ,V42512 AS V42512
        ,V42513 AS V42513
        ,V42514 AS V42514
        ,V42515 AS V42515
        ,S36019 AS S36019
        ,S36021 AS S36021
        ,S36022 AS S36022
        ,S36023 AS S36023
        ,S36024 AS S36024
        ,S34526 AS S34526
        ,S13427 AS S13427
        ,V41339 AS V41339
        ,V41336 AS V41336
        ,V42338 AS V42338
        ,V41537 AS V41537
        ,S42518 AS S42518
        ,V41454 AS V41454
        ,S31225 AS S31225
        ,V42116 AS V42116
        ,V42317 AS V42317
        ,V42659 AS V42659
        ,V41572 AS V41572
        ,V4259  AS V4259 
        ,V46169 AS V46169
        ,V42525 AS V42525
        ,NULL AS PROPNOBATHROMS
        ,NULL AS PROPNOBEDROMS
        ,NULL AS PROPNOKITCHENS
        ,NULL AS PROPNORECEPTIONS
        ,NULL AS PROPROF
        ,NULL AS PROPWALS
        ,NULL AS PROPWARANTYTYPE
        ,NULL AS PROPSITINGTENANT
        ,NULL AS AC01_ACINCEPDATE 
    FROM FILTER_APP_UNIQUE
  UNION ALL
  SELECT M6321 AS UDMH_ACCOUNTNO
        ,UDMH_VALSRC
        ,NULL AS APP_V43120_VALTYPE
        ,NULL AS APP_V46527_MAIN
        ,NULL AS APP_P61416_VALUATION
        ,V4315 AS VHS_V4315_VALTYPE
        ,C6529 AS VHS_C6529_REINSTATE
        ,C6148 AS VHS_C6148_VALUATION
        ,NULL AS PRO_PROPVALUATION
        ,NULL AS VAL_PROPSEQNO
        ,NULL AS APP_V4604_SENQ
        ,V4606 AS VHS_V4606_SENQ
        ,NULL AS APP_P61417_VALDATE
        ,NULL AS VHS_V42653
        ,NULL AS VHS_V45263
        ,NULL AS VHS_V46232
        ,NULL AS VHS_V46528
        ,NULL AS VHS_V46529
        ,V4234 AS VHS_V4234_VALDATE
        ,NULL AS PRO_PROSEQNO
        ,NULL AS PROP_PROPVALDATE
        ,NULL AS V42510
        ,NULL AS V42512
        ,NULL AS V42513
        ,NULL AS V42514
        ,NULL AS V42515
        ,NULL AS S36019
        ,NULL AS S36021
        ,NULL AS S36022
        ,NULL AS S36023
        ,NULL AS S36024
        ,NULL AS S34526
        ,NULL AS S13427
        ,NULL AS V41339
        ,NULL AS V41336
        ,NULL AS V42338
        ,NULL AS V41537
        ,NULL AS S42518
        ,NULL AS V41454
        ,NULL AS S31225
        ,NULL AS V42116
        ,NULL AS V42317
        ,NULL AS V42659
        ,NULL AS V41572
        ,NULL AS V4259 
        ,NULL AS V46169
        ,NULL AS V42525
        ,NULL AS PROPNOBATHROMS
        ,NULL AS PROPNOBEDROMS
        ,NULL AS PROPNOKITCHENS
        ,NULL AS PROPNORECEPTIONS
        ,NULL AS PROPROF
        ,NULL AS PROPWALS
        ,NULL AS PROPWARANTYTYPE
        ,NULL AS PROPSITINGTENANT
        ,NULL AS AC01_ACINCEPDATE
    FROM FILTER_VALHIST_UNIQUE
  UNION ALL
  SELECT ACACNTNO AS UDMH_ACCOUNTNO
        ,UDMH_VALSRC
        ,NULL AS APP_V43120_VALTYPE
        ,NULL AS APP_V46527_MAIN
        ,NULL AS APP_P61416_VALUATION
        ,NULL AS VHS_V4315_VALTYPE
        ,NULL AS VHS_C6529_REINSTATE
        ,NULL AS VHS_C6148_VALUATION
        ,PROPVALUATION AS PRO_PROPVALUATION
        ,NULL AS VAL_PROPSEQNO
        ,NULL AS APP_V4604_SENQ
        ,NULL AS VHS_V4606_SENQ
        ,NULL AS APP_P61417_VALDATE
        ,NULL AS PROP_V42653
        ,NULL AS PROP_V45263
        ,NULL AS PROP_V46232
        ,NULL AS PROP_V46528
        ,NULL AS PROP_V46529
        ,NULL AS VHS_V4234_VALDATE
        ,PROPSEQNO AS PRO_PROSEQNO
        ,PROPVALUATIONDATE AS PROP_PROPVALDATE
        ,NULL AS V42510
        ,NULL AS V42512
        ,NULL AS V42513
        ,NULL AS V42514
        ,NULL AS V42515
        ,NULL AS S36019
        ,NULL AS S36021
        ,NULL AS S36022
        ,NULL AS S36023
        ,NULL AS S36024
        ,NULL AS S34526
        ,NULL AS S13427
        ,NULL AS V41339
        ,NULL AS V41336
        ,NULL AS V42338
        ,NULL AS V41537
        ,NULL AS S42518
        ,NULL AS V41454
        ,NULL AS S31225
        ,NULL AS V42116
        ,NULL AS V42317
        ,NULL AS V42659
        ,NULL AS V41572
        ,NULL AS V4259 
        ,NULL AS V46169
        ,NULL AS V42525
        ,PROPNOBATHROMS AS PROPNOBATHROMS
        ,PROPNOBEDROMS AS PROPNOBEDROMS
        ,PROPNOKITCHENS AS PROPNOKITCHENS
        ,PROPNORECEPTIONS AS PROPNORECEPTIONS
        ,PROPROF AS PROPROF
        ,PROPWALS AS PROPWALS
        ,PROPWARANTYTYPE AS PROPWARANTYTYPE
        ,PROPSITINGTENANT AS PROPSITINGTENANT
        ,NULL AS AC01_ACINCEPDATE
    FROM FILTER_VPROPERTIES
       UNION ALL
SELECT ACACNTNO AS UDMH_ACCOUNTNO
        ,UDMH_VALSRC
        ,NULL AS APP_V43120_VALTYPE
        ,NULL AS APP_V46527_MAIN
        ,NULL AS APP_P61416_VALUATION
        ,NULL AS VHS_V4315_VALTYPE
        ,NULL AS VHS_C6529_REINSTATE
        ,NULL AS VHS_C6148_VALUATION
        ,PROPVALUATION AS PRO_PROPVALUATION
        ,NULL AS VAL_PROPSEQNO
        ,NULL AS APP_V4604_SENQ
        ,NULL AS VHS_V4606_SENQ
        ,NULL AS APP_P61417_VALDATE
        ,NULL AS PROP_V42653
        ,NULL AS PROP_V45263
        ,NULL AS PROP_V46232
        ,NULL AS PROP_V46528
        ,NULL AS PROP_V46529
        ,NULL AS VHS_V4234_VALDATE
        ,PROPSEQNO AS PRO_PROSEQNO
        ,PROPVALUATIONDATE AS PROP_PROPVALDATE
        ,NULL AS V42510
        ,NULL AS V42512
        ,NULL AS V42513
        ,NULL AS V42514
        ,NULL AS V42515
        ,NULL AS S36019
        ,NULL AS S36021
        ,NULL AS S36022
        ,NULL AS S36023
        ,NULL AS S36024
        ,NULL AS S34526
        ,NULL AS S13427
        ,NULL AS V41339
        ,NULL AS V41336
        ,NULL AS V42338
        ,NULL AS V41537
        ,NULL AS S42518
        ,NULL AS V41454
        ,NULL AS S31225
        ,NULL AS V42116
        ,NULL AS V42317
        ,NULL AS V42659
        ,NULL AS V41572
        ,NULL AS V4259 
        ,NULL AS V46169
        ,NULL AS V42525
        ,PROPNOBATHROMS AS PROPNOBATHROMS
        ,PROPNOBEDROMS AS PROPNOBEDROMS
        ,PROPNOKITCHENS AS PROPNOKITCHENS
        ,PROPNORECEPTIONS AS PROPNORECEPTIONS
        ,PROPROF AS PROPROF
        ,PROPWALS AS PROPWALS
        ,PROPWARANTYTYPE AS PROPWARANTYTYPE
        ,PROPSITINGTENANT AS PROPSITINGTENANT
        ,ACINCEPDATE AS AC01_ACINCEPDATE
       FROM FILTER_MISSING
),
JOIN_EXTRA AS(
  SELECT J_WC.* 
        ,SOLIATES_TELA.POSTCODE AS APP_POSTCODE
        ,SOLIATES_TELV.POSTCODE AS VAL_POSTCODE
        ,SOLIATES_TELA.SOLTELEPHONE AS APP_TELEPHONE
        ,SOLIATES_TELV.SOLTELEPHONE AS VAL_TELEPHONE
        ,SOLIATES_TELA.SOLNAME AS APP_NAM
        ,SOLIATES_TELV.SOLNAME AS VAL_NAME
        ,SOLIATES_TELA.SOLSEQNO
        ,SOLIATES_TELA.SOLEMAIL
        ,SOLIATES_TELA.SOLFAX 
        ,SOLIATES_TELA.SOLTELEPHONE 
    FROM JOIN_WRITECRITERIA J_WC
    LEFT OUTER JOIN  TB_SRC_SOLIATES AS SOLIATES_TELA
      ON SOLIATES_TELA.SOLSEQNO = J_WC.APP_V4604_SENQ
    LEFT OUTER JOIN TB_SRC_SOLIATES AS SOLIATES_TELV
      ON SOLIATES_TELV.SOLSEQNO =J_WC.VHS_V4606_SENQ
),
JOIN_LUTS AS (
  SELECT J_EX.*
        ,VALLUT.TGT_VAL_TYPE AS TGT_APP_TYP
        ,VALLUT.TGT_VAL_REPTYPE AS TGT_APP_REP
        ,VALLUT.SRC_V43120_OR_V4315 AS SRC_APP_V20
        ,VALLUT.TGT_VAL_REAS AS TGT_APP_REAS
        ,VAL_LUT.TGT_VAL_TYPE AS TGT_VHS_TYP
        ,VAL_LUT.TGT_VAL_REPTYPE AS TGT_VHS_REP
        ,VAL_LUT.SRC_V43120_OR_V4315 AS SRC_VHS_V20
        ,VAL_LUT.TGT_VAL_REAS AS TGT_VHS_REAS
        ,MISC_40.TGT_VAL AS VALREF_40_TGT
        ,MISC_PC.TGT_VAL AS VALREF_PC_TGT
        ,MISC_TN.TGT_VAL AS VALREF_TN_TGT
        ,MISC_UNK.TGT_VAL AS VALREF_UNK_TGT
    FROM JOIN_EXTRA AS J_EX
    LEFT OUTER JOIN TB_XFM_LUT_VALTYPE AS VALLUT
      ON VALLUT.SRC_V43120_OR_V4315 = J_EX.APP_V43120_VALTYPE
    LEFT OUTER JOIN TB_XFM_LUT_VALTYPE AS VAL_LUT 
      ON VAL_LUT.SRC_V43120_OR_V4315 = J_EX.VHS_V4315_VALTYPE
   CROSS JOIN FILTER_MISC_PC AS MISC_PC
   CROSS JOIN FILTER_MISC_TN AS MISC_TN
   CROSS JOIN FILTER_MISC_40 AS MISC_40
   CROSS JOIN FILTER_MISC_UNK AS MISC_UNK
),
MAP_FROMSRC AS (
  SELECT *
         ,UDMH_ACCOUNTNO AS X02KEY
         ,PROPSITINGTENANT AS VAL05_P04_TENANT
         ,CASE UDMH_VALSRC
            WHEN 'APP' THEN (FLOOR(J_LUT.APP_V46528) +FLOOR(J_LUT.APP_V46527_MAIN) +FLOOR(J_LUT.APP_V46529))
            WHEN 'VALHIST' THEN FLOOR(J_LUT.VHS_C6529_REINSTATE)
            WHEN 'VPROPERTIES' THEN NULL
            WHEN 'MISSING' THEN NULL
          END AS VAL05_P04_REP_VALE_1
         ,CASE UDMH_VALSRC
            WHEN 'APP' THEN FLOOR(J_LUT.APP_P61416_VALUATION)
            WHEN 'VALHIST' THEN FLOOR(J_LUT.VHS_C6148_VALUATION)
            WHEN 'VPROPERTIES' THEN FLOOR(J_LUT.PRO_PROPVALUATION)
            WHEN 'MISSING' THEN 1
          END VAL05_P04_VAL_AMT_1
         ,CASE UDMH_VALSRC
            WHEN 'APP' THEN J_LUT.APP_P61417_VALDATE
            WHEN 'VALHIST' THEN J_LUT.VHS_V4234_VALDATE
            WHEN 'VPROPERTIES' THEN J_LUT.PROP_PROPVALDATE
            WHEN 'MISSING' THEN J_LUT.AC01_ACINCEPDATE
          END AS P04_VAL_EN_DT
         ,CASE UDMH_VALSRC
            WHEN 'APP' THEN APP_POSTCODE
            WHEN 'VALHIST' THEN VAL_POSTCODE
            WHEN 'VPROPERTIES' THEN VALREF_PC_TGT
            WHEN 'MISSING' THEN VALREF_PC_TGT
          END AS P04_VALREF_PC_1
         ,CASE UDMH_VALSRC
            WHEN 'APP' THEN APP_TELEPHONE
            WHEN 'VALHIST' THEN VAL_TELEPHONE
            WHEN 'VPROPERTIES' THEN VALREF_TN_TGT
            WHEN 'MISSING' THEN VALREF_TN_TGT
          END AS P04_VALREF_TN_1
         ,CASE UDMH_VALSRC
            WHEN 'APP' THEN APP_NAM
            WHEN 'VALHIST' THEN VAL_NAME
            WHEN 'VPROPERTIES' THEN VALREF_40_TGT
            WHEN 'MISSING' THEN VALREF_40_TGT
          END AS P04_VALREF_40_1
         ,CASE UDMH_VALSRC
            WHEN 'APP' THEN J_LUT.TGT_APP_REP
            WHEN 'VALHIST' THEN J_LUT.TGT_VHS_REP
            WHEN 'VPROPERTIES' THEN VALREF_UNK_TGT
            WHEN 'MISSING' THEN VALREF_UNK_TGT
          END AS VAL05_P04_VALREP_TYP_1
         ,CASE UDMH_VALSRC
            WHEN 'APP' THEN
             CASE
               WHEN J_LUT.APP_V42653 = 'Y' OR J_LUT.APP_V45263 = 'Y'
                THEN 'Y'
               ELSE 'N'
             END
             ELSE 'N'
          END AS VAL05_P04_WRKRTN
         ,UDMH_VALSRC AS P04_FILLER
    FROM JOIN_LUTS J_LUT
),
MAP_DEPENDENT1 AS (
  SELECT MAP_SRC.* 
        ,MAP_SRC.P04_VAL_EN_DT AS P04_VALRCV_DT
    FROM MAP_FROMSRC AS MAP_SRC
),
MAP_DEPENDENT2 AS (
  SELECT MAP_DEP1.*
        ,CASE
         ROW_NUMBER() OVER (
          PARTITION BY
             MAP_DEP1.UDMH_ACCOUNTNO
          ORDER BY
            P04_VAL_EN_DT
           ,P04_VALRCV_DT
         )
           WHEN 1 THEN 'MV'
           ELSE
           CASE UDMH_VALSRC
             WHEN 'APP' THEN MAP_DEP1.TGT_APP_TYP
             WHEN 'VALHIST' THEN MAP_DEP1.TGT_VHS_TYP
             WHEN 'VPROPERTIES' THEN 'RV'
           END
        END AS VAL05_P04_VAL_TYPE
    FROM MAP_DEPENDENT1 AS MAP_DEP1
),
MAP_DEPENDENT3 AS (
  SELECT MAP_DEP2.*
        ,CASE VAL05_P04_VAL_TYPE
           WHEN 'RV' THEN
           CASE UDMH_VALSRC
             WHEN 'APP' THEN MAP_DEP2.TGT_APP_REAS
             WHEN 'VALHIST' THEN MAP_DEP2.TGT_VHS_REAS
             WHEN 'VPROPERTIES' THEN 'RV'
            END
            ELSE NULL
          END AS VAL05_P04_VAL_REAS
        ,CASE
            WHEN VAL05_P04_VAL_TYPE = 'MV'
            AND UDMH_VALSRC = 'APP' THEN FLOOR(MAP_DEP2.APP_V46232)
            ELSE NULL
         END AS VAL05_P04_VAL_RET_1
    FROM MAP_DEPENDENT2 AS MAP_DEP2
),
MAP_DEFAULT AS (
  SELECT *
         ,'P04' AS P04_CODE
         ,1 AS VAL05_P04_SEC_NBR
         ,NULL AS VAL05_P04_VAL_EXPIRE
         ,NULL AS VAL05_P04_VAL_RENT
         ,NULL AS VAL05_P04_VAL_TYPE2
         ,NULL AS VAL05_P04_AVM_CONFLV
    FROM MAP_DEPENDENT3
),
MAP_EXCEPTION AS (
  SELECT *
         ,CASE WHEN LEN(P04_VALREF_40_1) > 40 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P04','W:LENGTH-OVERRUN',UDMH_ACCOUNTNO,'P04_VALREF_40',P04_VALREF_40_1))
           END AS EXCEPTION_1
         ,CASE
            WHEN LEN(P04_VALREF_40_1) > 40 THEN SUBSTRING(P04_VALREF_40_1,1,40)
            ELSE P04_VALREF_40_1
          END AS P04_VALREF_40
         ,CASE WHEN (VAL05_P04_REP_VALE_1 <> (APP_V46528 + APP_V46529 + APP_V46527_MAIN)) OR (VAL05_P04_REP_VALE_1 <> VHS_C6529_REINSTATE) THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P04','R:ROUNDING',UDMH_ACCOUNTNO,'VAL05_P04_REP_VALE',VAL05_P04_REP_VALE_1))
           END AS EXCEPTION_2        
         ,CASE
            WHEN LEN(VAL05_P04_REP_VALE_1) > 8 THEN LEFT(VAL05_P04_REP_VALE_1,8)
            ELSE VAL05_P04_REP_VALE_1
          END AS VAL05_P04_REP_VALE
         ,CASE  WHEN (VAL05_P04_VAL_AMT_1 <> APP_P61416_VALUATION) OR (VAL05_P04_VAL_AMT_1 <> VHS_C6148_VALUATION) OR (VAL05_P04_VAL_AMT_1 <>PRO_PROPVALUATION) THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P04','R:ROUNDING',UDMH_ACCOUNTNO,'VAL05_P04_VAL_AMT',VAL05_P04_VAL_AMT_1))
          END AS EXCEPTION_3
         ,CASE
            WHEN LEN(VAL05_P04_VAL_AMT_1) > 8 THEN LEFT(VAL05_P04_VAL_AMT_1,8)
            ELSE VAL05_P04_VAL_AMT_1
          END AS VAL05_P04_VAL_AMT
         ,CASE WHEN VAL05_P04_VAL_RET_1 <> APP_V46232 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P04','R:ROUNDING',UDMH_ACCOUNTNO,'VAL05_P04_VAL_RET',VAL05_P04_VAL_RET_1))
          END AS EXCEPTION_4
         ,CASE
            WHEN LEN(VAL05_P04_VAL_RET_1) > 8 THEN LEFT(VAL05_P04_VAL_RET_1,8)
            ELSE VAL05_P04_VAL_RET_1
          END AS VAL05_P04_VAL_RET
         ,CASE WHEN  LEN(P04_VALREF_PC_1) > 10 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P04','W:LENGTH-OVERRUN',UDMH_ACCOUNTNO,'P04_VALREF_PC',P04_VALREF_PC_1))
          END AS EXCEPTION_5
         ,CASE
            WHEN LEN(P04_VALREF_PC_1) > 10 THEN SUBSTRING(P04_VALREF_PC_1,1,10)
            ELSE P04_VALREF_PC_1
          END AS P04_VALREF_PC
         ,CASE WHEN LEN(P04_VALREF_TN_1) > 15 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P04','W:LENGTH-OVERRUN',UDMH_ACCOUNTNO,'P04_VALREF_TN',P04_VALREF_TN_1))
           END AS EXCEPTION_6
         ,CASE
            WHEN LEN(P04_VALREF_TN_1) > 15 THEN SUBSTRING(P04_VALREF_TN_1,1,15)
            ELSE P04_VALREF_TN_1
          END AS P04_VALREF_TN
         ,CASE WHEN LEN(VAL05_P04_VALREP_TYP_1) > 2 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P04','W:LENGTH-OVERRUN',UDMH_ACCOUNTNO,'VAL05_P04_VALREP_TYP',VAL05_P04_VALREP_TYP_1))
          END AS EXCEPTION_7
         ,CASE
            WHEN LEN(VAL05_P04_VALREP_TYP_1) > 2 THEN SUBSTRING(VAL05_P04_VALREP_TYP_1,1,2)
            ELSE VAL05_P04_VALREP_TYP_1
          END AS VAL05_P04_VALREP_TYP
    FROM MAP_DEFAULT 
),
OUT_FIELDS AS (
  SELECT  X02KEY
         ,UDMH_VALSRC
         ,P04_CODE 
         ,VAL05_P04_TENANT
         ,VAL05_P04_VAL_REAS
         ,VAL05_P04_VAL_TYPE
         ,VAL05_P04_REP_VALE
         ,VAL05_P04_SEC_NBR
         ,VAL05_P04_VAL_AMT
         ,P04_VAL_EN_DT
         ,VAL05_P04_VAL_EXPIRE
         ,VAL05_P04_VAL_RENT
         ,VAL05_P04_VAL_RET
         ,P04_VALRCV_DT
         ,P04_VALREF_PC
         ,P04_VALREF_TN
         ,P04_VALREF_40
         ,VAL05_P04_VAL_TYPE2
         ,VAL05_P04_VALREP_TYP
         ,VAL05_P04_WRKRTN
         ,VAL05_P04_AVM_CONFLV
         ,V42510 AS V42510
         ,V42512 AS V42512
         ,V42513 AS V42513
         ,V42514 AS V42514
         ,V42515 AS V42515
         ,S36019 AS S36019
         ,S36021 AS S36021
         ,S36022 AS S36022
         ,S36023 AS S36023
         ,S36024 AS S36024
         ,S34526 AS S34526
         ,S13427 AS S13427
         ,V41339 AS V41339
         ,V41336 AS V41336
         ,V42338 AS V42338
         ,V41537 AS V41537
         ,S42518 AS S42518
         ,V41454 AS V41454
         ,S31225 AS S31225
         ,V42116 AS V42116
         ,V42317 AS V42317
         ,V42659 AS V42659
         ,V41572 AS V41572
         ,V4259  AS V4259 
         ,V46169 AS V46169
         ,V42525 AS V42525
         ,APP_V4604_SENQ AS V4604
         ,PROPNOBATHROMS AS PROPNOBATHROMS
         ,PROPNOBEDROMS AS PROPNOBEDROMS
         ,PROPNOKITCHENS AS PROPNOKITCHENS
         ,PROPNORECEPTIONS AS PROPNORECEPTIONS
         ,PROPROF AS PROPROF
         ,PROPWALS AS PROPWALS
         ,PROPWARANTYTYPE AS PROPWARANTYTYPE
         ,SOLSEQNO
         ,SOLEMAIL AS EMAIL
         ,SOLFAX AS FAX
         ,SOLTELEPHONE AS PHONE
         ,CASE 
            WHEN CAST ( CONCAT (
                             CAST(EXCEPTION_1 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_2 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_3 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_4 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_5 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_6 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_7 AS VARCHAR(MAX)))
               AS NVARCHAR(MAX)) = '' THEN NULL
            ELSE CAST ( CONCAT (
                             CAST(EXCEPTION_1 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_2 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_3 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_4 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_5 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_6 AS VARCHAR(MAX))
                            ,CAST(EXCEPTION_7 AS VARCHAR(MAX)))
                  AS XML)
             END  AS X02_UDMH_EXCEPTION
    FROM MAP_EXCEPTION
)
SELECT *
  FROM OUT_FIELDS
 
GO


/*
 * Author: SHRAVANI 
 * Creation Date: 08/07/2015
 * Description: This SQL code applies business transformation for X02_P03 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date           Developer                      Description
 *-----------------------------------------------------------------------------------------------------
    1.0        08/07/2015       SHRAVANI                  Based on Mapping Spec Version v0.6
    2.0        20/07/2015       SHRAVANI                  Based on Mapping Spec Version v0.7
    3.0        02/09/2015       SHRAVANI                  Based on mapping Spec Version v0.9
    4.0        03/09/2015       SHRAVANI                  Added the exceptions
	5.0        14/12/2015       SHRAVANI                  Updated based on Mapping spec v1.3
 *-----------------------------------------------------------------------------------------------------
 */

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[dbo].[VW_X02_P03]') AND type in (N'V'))
 DROP VIEW [dbo].[VW_X02_P03]
GO

CREATE VIEW [dbo].[VW_X02_P03]
AS
WITH
FILTER_P04 AS (
  SELECT DISTINCT
         P04.V42510
        ,P04.V42512
        ,P04.V42513
        ,P04.V42514
        ,P04.V42515
        ,P04.S36019
        ,P04.S36021
        ,P04.S36022
        ,P04.S36023
        ,P04.S36024
        ,P04.S34526
        ,P04.S13427
        ,P04.V41339
        ,P04.V41336
        ,P04.V42338
        ,P04.V41537
        ,P04.S42518
        ,P04.V41454
        ,P04.S31225
        ,P04.V42116
        ,P04.V42317
        ,P04.V42659
        ,P04.V41572
        ,P04.V4259
        ,P04.V46169
        ,P04.V42525
        ,P04.X02KEY AS ACCNO
        ,P04.P04_VAL_EN_DT
        ,P04.P04_VALREF_40
        ,P04.P04_VALREF_PC
        ,P04.PROPWALS
        ,P04.PROPROF 
        ,P04.PROPWARANTYTYPE
        ,P04.P04_VALREF_TN
        ,P04.EMAIL
        ,P04.FAX
        ,P04.PHONE
        ,P04.PROPNOBATHROMS
        ,P04.PROPNOBEDROMS
        ,P04.PROPNOKITCHENS
        ,P04.PROPNORECEPTIONS
        ,P04.SOLSEQNO
        ,P04.VAL05_P04_VAL_TYPE
    FROM VW_X02_P04 AS P04
),
JOIN_WRITECRITERIA AS (
  SELECT *
    FROM FILTER_P04
   WHERE VAL05_P04_VAL_TYPE = 'MV'
),
JOIN_EXTRA AS(
  SELECT J_WC.*
        ,ADDRESS_CONT.PREMISE_NAME AS PREMISENAME
        ,ADDRESS_CONT.PREMISE_NO AS PREMISENO
        ,ADDRESS_CONT.COUNTY AS CNTY
        ,ADDRESS_CONT.DISTRICT AS DISTRICT
        ,ADDRESS_CONT.STREET AS STREET
        ,ADDRESS_CONT.TOWN AS TOWN_CONT
        ,ADDRESS_AGENT.PREMISE_NAME AS BLDNGNAME
        ,ADDRESS_AGENT.PREMISE_NO AS BLDNGNO
        ,ADDRESS_AGENT.COUNTY AS CONTY
        ,ADDRESS_AGENT.DISTRICT AS DSTRICT
        ,ADDRESS_AGENT.STREET AS STRET
        ,ADDRESS_AGENT.TOWN AS TWN
    FROM JOIN_WRITECRITERIA AS J_WC
   CROSS APPLY dbo.FN_ADDRESS_SPLIT(J_WC.V42510,J_WC.V42512,J_WC.V42513,J_WC.V42514,J_WC.V42515,NULL,NULL,ACCNO,'X02_P03') AS ADDRESS_CONT
   CROSS APPLY dbo.FN_ADDRESS_SPLIT(J_WC.S36019,J_WC.S36021,J_WC.S36022,J_WC.S36023,J_WC.S36024,NULL,NULL,ACCNO,'X02_P03') AS ADDRESS_AGENT
),
JOIN_LUTS AS (
  SELECT J_EX.*
        ,WALL_LUT.TGT_WALL_TYPE
        ,WALL_LUT.SRC_PROPWALS_OR_V42525
        ,ROOF_LUT.SRC_PROPROF_OR_V46169
        ,ROOF_LUT.TGT_ROOF_TYPE
        ,WARNTY_LUT.TGT_BSI_SCHEME
    FROM JOIN_EXTRA AS J_EX
    LEFT OUTER JOIN TB_XFM_LUT_WALL_TYPE AS WALL_LUT
      ON WALL_LUT.SRC_PROPWALS_OR_V42525 = COALESCE(PROPWALS,V42525)
    LEFT OUTER JOIN TB_XFM_LUT_ROOF_TYPE AS ROOF_LUT
      ON ROOF_LUT.SRC_PROPROF_OR_V46169 = COALESCE(PROPROF,V46169)
    LEFT OUTER JOIN TB_XFM_LUT_PROP_WARANTY AS WARNTY_LUT
      ON WARNTY_LUT.SRC_PROPWARANTYTYPE = J_EX.PROPWARANTYTYPE
),
MAP_FROMSRC AS (
  SELECT J_LUT.*
        ,ACCNO AS X02KEY
        ,J_LUT.V4259 AS MAR31_P03_ACCESS_1
        ,COALESCE (J_LUT.PREMISENAME + ',', '') +
         COALESCE (J_LUT.PREMISENO + ',', '') +
         COALESCE (J_LUT.STREET + ',', '') +
         COALESCE (J_LUT.DISTRICT, '')
         AS MAR31_P03_ADDR_CONT_1
        ,COALESCE (J_LUT.BLDNGNAME + ',', '') +
         COALESCE (J_LUT.BLDNGNO + ',', '') +
         COALESCE (J_LUT.STRET + ',', '') +
         COALESCE (J_LUT.DSTRICT, '')
         AS MAR31_P03_ADDR_AGENT_1
        ,COALESCE (J_LUT.S34526,J_LUT.S13427) AS MAR31_P03_TEL_AGENT
        ,J_LUT.TWN AS MAR31_P03_TOWN_AGENT_1
        ,J_LUT.TOWN_CONT AS MAR31_P03_TOWN_CONT_1
        ,J_LUT.EMAIL AS MAR31_P03_VALEMAIL
        ,J_LUT.FAX AS MAR31_P03_VALFAX
        ,J_LUT.PHONE AS MAR31_P03_VALTEL
        ,CASE 
           WHEN J_LUT.PROPNOBATHROMS > 0 THEN J_LUT.PROPNOBATHROMS 
           ELSE J_LUT.V41339  
         END AS MAR31_P03_BATHROOMS
        ,CASE 
           WHEN J_LUT.PROPNOBEDROMS > 0 THEN J_LUT.PROPNOBEDROMS 
           ELSE J_LUT.V41336 
         END AS MAR31_P03_BEDROOMS
        ,CASE 
           WHEN J_LUT.PROPNOKITCHENS > 0 THEN J_LUT.PROPNOKITCHENS 
           ELSE J_LUT.V42338 
         END AS MAR31_P03_KITCHENS
        ,CASE 
           WHEN J_LUT.PROPNORECEPTIONS > 0 THEN J_LUT.PROPNORECEPTIONS
           ELSE J_LUT.V41537 
         END AS MAR31_P03_RECEPTIONS
        ,J_LUT.TGT_ROOF_TYPE AS MAR31_P03_ROOF_TYPE
        ,J_LUT.TGT_WALL_TYPE AS MAR31_P03_WALL_TYPE
        ,J_LUT.TGT_BSI_SCHEME AS MAR31_P03_BSI_SCHEME
        ,J_LUT.S42518 AS MAR31_P03_AGENTS_1
        ,J_LUT.V41454 AS MAR31_P03_FLOOR_AREA
        ,J_LUT.S31225 AS MAR31_P03_POST_AGENT
        ,J_LUT.V42116 AS MAR31_P03_POST_CONT
        ,J_LUT.V42317 AS MAR31_P03_TEL_CONT
        ,J_LUT.V42659 AS MAR31_P03_GARAGES
        ,J_LUT.V41572 AS P03_ISSUE_DT
    FROM JOIN_LUTS J_LUT
),
MAP_COPYTAGETS AS (
  SELECT MAP_SRC.*
        ,P04_VALREF_40 AS P03_VALREF_40
        ,P04_VAL_EN_DT AS P03_RECEIV_DT
        ,P04_VALREF_PC AS P03_VALREF_PC 
        ,P04_VALREF_TN AS P03_VALREF_TN 
    FROM MAP_FROMSRC AS MAP_SRC
),
MAP_DEFAULTS AS (
  SELECT MAP_COP.*
        ,'P03' AS P03_CODE
        ,NULL AS MAR31_P03_FAX_AGENT
        ,NULL AS MAR31_P03_VENDORS
        ,1 AS MAR31_P03_SEC_NBR
        ,'V' AS MAR31_P03_REC_TYPE
    FROM MAP_COPYTAGETS MAP_COP
),
MAP_EXCEPTION AS (
  SELECT *
         ,CASE WHEN LEN(MAR31_P03_ACCESS_1) > 40 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P03','W:LENGTH-OVERRUN',X02KEY,'MAR31_P03_ACCESS',MAR31_P03_ACCESS_1))
          END AS EXCEPTION_1
         ,CASE
            WHEN LEN(MAR31_P03_ACCESS_1) > 40 THEN SUBSTRING(MAR31_P03_ACCESS_1,1,40)
            ELSE MAR31_P03_ACCESS_1
          END AS MAR31_P03_ACCESS
         ,CASE WHEN LEN(MAR31_P03_AGENTS_1) > 40 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P03','W:LENGTH-OVERRUN',X02KEY,'MAR31_P03_AGENTS',MAR31_P03_AGENTS_1))
           END AS EXCEPTION_2
         ,CASE
            WHEN LEN(MAR31_P03_AGENTS_1) > 40 THEN SUBSTRING(MAR31_P03_AGENTS_1,1,40)
            ELSE MAR31_P03_AGENTS_1
          END AS MAR31_P03_AGENTS
         ,CASE WHEN LEN(MAR31_P03_TOWN_AGENT_1) > 30 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P03','W:LENGTH-OVERRUN',X02KEY,'MAR31_P03_TOWN_AGENT',MAR31_P03_TOWN_AGENT_1))
           END AS EXCEPTION_3
         ,CASE
            WHEN LEN(MAR31_P03_TOWN_AGENT_1) > 30 THEN SUBSTRING(MAR31_P03_TOWN_AGENT_1,1,30)
            ELSE MAR31_P03_TOWN_AGENT_1
          END AS MAR31_P03_TOWN_AGENT
          ,CASE WHEN LEN(MAR31_P03_TOWN_CONT_1) > 30 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P03','W:LENGTH-OVERRUN',X02KEY,'MAR31_P03_TOWN_CONT',MAR31_P03_TOWN_CONT_1))
          END AS EXCEPTION_4
         ,CASE
            WHEN LEN(MAR31_P03_TOWN_CONT_1) > 30 THEN SUBSTRING(MAR31_P03_TOWN_CONT_1,1,30)
            ELSE MAR31_P03_TOWN_CONT_1
          END AS MAR31_P03_TOWN_CONT
         ,CASE WHEN LEN(MAR31_P03_ADDR_CONT_1) > 40 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P03','W:LENGTH-OVERRUN',X02KEY,'MAR31_P03_ADDR_CONT',MAR31_P03_ADDR_CONT_1))
          END AS EXCEPTION_5
         ,CASE
            WHEN LEN(MAR31_P03_ADDR_CONT_1) > 40 THEN SUBSTRING(MAR31_P03_ADDR_CONT_1,1,40)
            ELSE MAR31_P03_ADDR_CONT_1
          END AS MAR31_P03_ADDR_CONT
         ,CASE WHEN LEN(MAR31_P03_ADDR_AGENT_1) > 40 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_P03','W:LENGTH-OVERRUN',X02KEY,'MAR31_P03_ADDR_AGENT',MAR31_P03_ADDR_AGENT_1))
          END AS EXCEPTION_6
         ,CASE
            WHEN LEN(MAR31_P03_ADDR_AGENT_1) > 40 THEN SUBSTRING(MAR31_P03_ADDR_AGENT_1,1,40)
            ELSE MAR31_P03_ADDR_AGENT_1
          END AS MAR31_P03_ADDR_AGENT
    FROM MAP_DEFAULTS
),
OUT_FIELDS AS (
  SELECT X02KEY 
        ,P03_CODE
        ,MAR31_P03_ACCESS
        ,MAR31_P03_ADDR_CONT
        ,MAR31_P03_ADDR_AGENT
        ,MAR31_P03_AGENTS
        ,MAR31_P03_FLOOR_AREA
        ,MAR31_P03_FAX_AGENT
        ,MAR31_P03_POST_AGENT
        ,MAR31_P03_POST_CONT
        ,MAR31_P03_TEL_AGENT
        ,MAR31_P03_TEL_CONT
        ,MAR31_P03_TOWN_AGENT
        ,MAR31_P03_TOWN_CONT
        ,MAR31_P03_VENDORS
        ,MAR31_P03_VALEMAIL
        ,MAR31_P03_VALFAX
        ,MAR31_P03_VALTEL
        ,MAR31_P03_BATHROOMS
        ,MAR31_P03_BEDROOMS
        ,MAR31_P03_GARAGES
        ,MAR31_P03_KITCHENS
        ,MAR31_P03_RECEPTIONS
        ,MAR31_P03_ROOF_TYPE
        ,MAR31_P03_SEC_NBR
        ,MAR31_P03_WALL_TYPE
        ,P03_VALREF_PC
        ,P03_VALREF_TN
        ,P03_VALREF_40
        ,P03_ISSUE_DT
        ,P03_RECEIV_DT
        ,MAR31_P03_REC_TYPE
        ,MAR31_P03_BSI_SCHEME
        ,CASE
           WHEN CAST ( CONCAT (
                     CAST(EXCEPTION_1 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_2 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_3 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_4 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_5 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_6 AS VARCHAR(MAX))
                    )
                 AS NVARCHAR(MAX)) = '' THEN NULL
           ELSE CAST ( CONCAT (
                     CAST(EXCEPTION_1 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_2 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_3 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_4 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_5 AS VARCHAR(MAX))
                    ,CAST(EXCEPTION_6 AS VARCHAR(MAX))
                    )
                  AS XML) 
         END AS X02_UDMH_EXCEPTION
    FROM MAP_EXCEPTION
)
SELECT *
  FROM OUT_FIELDS


GO
/*
 * Author: Pothirajan
 * Creation Date: 22/06/2015
 * Description: This SQL code applies business transformation for X02_S01 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer                   Description
 *-----------------------------------------------------------------------------------------------------
    1.0        22/06/2015       Pothirajan                    Based on Mapping Spec version v0.4
    2.0        29/06/2015       Pothirajan                    Based on Coding Standards Spec version v0.5
    3.0        7/17/2015        Pothirajan                    Based on mapping spec v0.7 S01-LEASE-DT,SEC01.S01-D-REGLAND...
    4.0        8/19/2015        Pothirajan                    Based on mapping spec v0.8 S01-D-ESTDATE-DT,S01-LEASE-DT,S01-POS-DT,S01-SOLREF-PC,SEC01.S01-D-TOCHARGE,SEC01.S01-NEW-CLASS,SEC01.S01-NHBC
    5.0        8/21/2015        Pothirajan                    Based on mapping spec v0.9
    6.0........9/3/2015.........Pothirajan....................Implemented the Exception logic as per mapping spec 0.9, Fixed Defect 68938 and 68994
    7.0........10/13/2015.......Pothirajan....................Based on mapping spec 1.1 
    8.0        11/18/2015       Sowmya                        Based on mapping spec 1.3
    9.0        11/24/2015       Akila                         Based on mapping spec 1.3
    10         09/12/2015        Sowmya                       Based on mapping spec 1.3
    11         12/12/2015        Sowmya                       Updated TB_SRC_HLDLNKS Table (Bug 79308)
    12         12/17/2015        Sowmya                       S01-LEASE-DT this field is made as default because the data is coming incorrect
 *-----------------------------------------------------------------------------------------------------
 */
 
 --Diagram
-------------
--Filter
--------------

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_S01]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_S01]
GO 

CREATE VIEW [dbo].[VW_X02_S01]
AS
WITH 
FILTER_GH1 AS (
  SELECT AC01MAIN.ACHLDERTYPE
        ,AC01MAIN.ACACNTNO
        ,AC01MAIN.ACHPURCHPROPSEQNO
        ,AC01MAIN.ACCLAS
        ,AC01MAIN.ACINCEPDATE
        ,AC01MAIN.ACHPOSESIONDATE
        ,AC01MAIN.ACPROCESSTATUS
        ,FIRSTLIVEORLASTREDEEMSUB.ACCLRDATE
        ,FIRSTLIVEORLASTREDEEMSUB.ACPROCESSTATUS AS FIRSTLIVEREDEEM_ACPROCESSTATUS
    FROM TB_SRC_AC01_MAIN AS AC01MAIN
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS FIRSTLIVEORLASTREDEEMSUB
      ON AC01MAIN.ACACNTNO = FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
--79308
FILTER_HLDLNKS AS (
  SELECT COUNT(1) AS HLDLNK_CNT
        ,HLDLACNTNO
    FROM TB_SRC_HLDLNKS AS HLDLNKS
   CROSS JOIN TB_UDMH_CTL AS CTRL
   WHERE HLDLNKS.HLDLFROMDATE < CTRL.WS_MIGR_DATE 
     AND (HLDLNKS.HLDLTODATE IS NULL OR HLDLNKS.HLDLTODATE >= CTRL.WS_MIGR_DATE)
     AND  HLDLNKS.HLDLCODE IN ('BTL','LET','LETAF','UNALET','ULET')
   GROUP BY HLDLACNTNO
),
FILTER_P04_REP_VALE AS (
  SELECT P04.X02KEY
        ,SUM(P04.VAL05_P04_REP_VALE) AS VAL05_P04_REP_VALE
    FROM TB_X02_P04 AS P04
   GROUP BY P04.X02KEY
),
FILTER_VMOVEMENTS_LATEST AS (
  SELECT MOVEPROPSEQNO
        ,MOVESOLSEQNO
        ,MOVETYPE
        ,MOVEINTERNALCODE   -- added as per 1.3 version
    FROM VW_FILTER_VMOVEMENTS_LATEST
),
FILTER_VMOVEMENTS_LATESTOUT AS (
  SELECT MOVEPROPSEQNO
        ,MOVEDATE
        ,MOVEREASONCODE
    FROM VW_FILTER_VMOVEMENTS_LATESTOUT
),
FILTER_VMOVEMENTS_LATESTIN AS (
  SELECT MOVEPROPSEQNO
        ,MOVEDATE
    FROM VW_FILTER_VMOVEMENTS_LATESTIN
),
FILTER_VMOVEMENTS_EARLIESTIN AS (
  SELECT MOVEPROPSEQNO
        ,MOVETYPE
        ,MOVEDATE
    FROM VW_FILTER_VMOVEMENTS_EARLIESTIN
),
FILTER_SOLIATES_CNT AS (
  SELECT SOLSEQNO
        ,SOLTYPE
        ,COUNT(1) AS SOLIATES_CNT
    FROM TB_SRC_SOLIATES 
   GROUP BY SOLSEQNO,SOLTYPE
),
FILTER_DEED_REAS_REDEEM AS (
SELECT DEED_REAS_LUT.TGT_DEED_REAS
      ,SRC_MOVEREASONCODE
  FROM TB_XFM_LUT_DEED_REAS AS DEED_REAS_LUT
 WHERE DEED_REAS_LUT.XFM_REDEEM_FLAG = 'Y'
),
FILTER_DEED AS (
  SELECT COUNT(1) AS DEED_CNT
        ,DEED.ACCOUNT_NO
    FROM TB_SRC_DEED AS DEED
   GROUP BY DEED.ACCOUNT_NO
),
JOIN_WRITECRITERIA AS (
  SELECT GH1.*
        ,VPROPERTIES.PROPLRTITLENO
        ,VPROPERTIES.PROPWARANTYTYPE
        ,VPROPERTIES.POSTCODE AS SEC01_S01_POSTCODE
        ,VPROPERTIES.PROPTENURECODE AS PROP_TENURECODE
        ,VPROPERTIES.PROPCOSTPRICE AS PROP_COSTPRICE
        ,VPROPERTIES.ADDRESS1 AS VPROP_ADDRESS1
        ,VPROPERTIES.ADDRESS2 AS VPROP_ADDRESS2
        ,VPROPERTIES.ADDRESS3 AS VPROP_ADDRESS3
        ,VPROPERTIES.ADDRESS4 AS VPROP_ADDRESS4
        ,VPROPERTIES.ADDRESS5 AS VPROP_ADDRESS5
        ,VPROPERTIES.PROPTYPECODE AS VPROP_PROPTYPE
        ,VPROPERTIES.PROPGROUNDRENT AS VPROP_GROUNDRENT
        ,VPROPERTIES.PROPLEASEEXPIRYDATE AS VPROP_EXPIRYDATE
        ,VPROPERTIES.PROPYEARBUILT AS VPROP_YEARBUILT
        ,VPROPERTIES.PROPLEASETRM AS VPROP_LEASETERM
        ,VPROPERTIES.DEDBINSLOT AS VPROP_DEDBINSLOT
    FROM FILTER_GH1 AS GH1
   INNER JOIN TB_SRC_VPROPERTIES AS VPROPERTIES
      ON GH1.ACHPURCHPROPSEQNO = VPROPERTIES.PROPSEQNO
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,PROP_ADDP_OP.PREMISE_NAME AS PROP_PREMISE_NAME
        ,PROP_ADDP_OP.PREMISE_NO AS PROP_PREMISE_NO
        ,PROP_ADDP_OP.DISTRICT
        ,PROP_ADDP_OP.STREET
        ,PROP_ADDP_OP.TOWN
        ,PROP_ADDP_OP.COUNTY
        ,TITLE_OP.TITLE1
        ,TITLE_OP.TITLE2
        ,TITLE_OP.TITLE3
        ,TITLE_OP.TITLE4
        ,VMOVEMENTSLATEST.MOVESOLSEQNO AS LATEST_MOVESOLSEQNO
        ,VMOVEMENTSLATEST.MOVETYPE AS LATEST_MOVETYPE
        ,VMOVEMENTSLATEST.MOVEINTERNALCODE AS LATEST_MOVEINTERNALCODE   --Added as per 1.3 version
        ,VMOVEMENTSEARLIESTIN.MOVETYPE AS EARLIESTIN_MOVETYPE
        ,VMOVEMENTSOUT.MOVEDATE AS VMOVEMENTSOUT_MOVEDATE
        ,VMOVEMENTSOUT.MOVEREASONCODE AS VMOVEMENTSOUT_MOVEREASONCODE
        ,VMOVEMENTSEARLIESTIN.MOVEDATE AS VMOVEMENTSEARLIESTIN_MOVEDATE
        ,VMOVEMENTSLATEST_IN.MOVEDATE AS VMOVEMENTSLATESTIN_MOVEDATE
        ,SOL_ADDP_OP.COUNTY AS SOLIATES_COUNTY
        ,SOL_ADDP_OP.DISTRICT AS SOLIATES_DISTRICT
        ,SOL_ADDP_OP.TOWN AS SOLIATES_TOWN
        ,SOL_ADDP_OP.STREET AS SOLIATES_STREET
        ,SOL_ADDP_OP.PREMISE_NAME AS SOLIATES_PREMISENAME  
        ,SOL_ADDP_OP.PREMISE_NO AS SOLIATES_PREMISE_NO 
        ,SOLIATES.POSTCODE AS SOLIATES_POSTCODE
        ,SOLIATES.NAME AS SOLIATES_NAME
        ,SOLIATES.SOLNAME AS SOLIATES_SOLNAME
        ,SOLIATES.SOLTELEPHONE AS SOLIATES_TELEPHONE
        ,SOLIATES.SOLTYPE AS SOLIATES_SOLTYPE
        ,CTRL.WS_MIGR_DATE
        ,CTRL.SOURCE
        ,HLDLNK_CNT
        ,SOLIATES_CNT
        ,P04.VAL05_P04_REP_VALE
        ,DEED.DEED_CNT
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT OUTER JOIN FILTER_VMOVEMENTS_LATEST AS VMOVEMENTSLATEST
      ON ACHPURCHPROPSEQNO = VMOVEMENTSLATEST.MOVEPROPSEQNO
    LEFT OUTER JOIN FILTER_VMOVEMENTS_LATESTOUT AS VMOVEMENTSOUT
      ON ACHPURCHPROPSEQNO = VMOVEMENTSOUT.MOVEPROPSEQNO
    LEFT OUTER JOIN FILTER_VMOVEMENTS_EARLIESTIN AS VMOVEMENTSEARLIESTIN
      ON ACHPURCHPROPSEQNO = VMOVEMENTSEARLIESTIN.MOVEPROPSEQNO
    LEFT OUTER JOIN TB_SRC_SOLIATES AS SOLIATES
      ON SOLIATES.SOLSEQNO =  VMOVEMENTSLATEST.MOVESOLSEQNO
    LEFT OUTER JOIN FILTER_SOLIATES_CNT 
      ON FILTER_SOLIATES_CNT.SOLSEQNO = VMOVEMENTSLATEST.MOVESOLSEQNO AND FILTER_SOLIATES_CNT.SOLTYPE = 'BR'
    LEFT OUTER JOIN FILTER_VMOVEMENTS_LATESTIN AS VMOVEMENTSLATEST_IN
      ON ACHPURCHPROPSEQNO = VMOVEMENTSLATEST_IN.MOVEPROPSEQNO
    LEFT OUTER JOIN FILTER_HLDLNKS AS F_HLDLNKS
      ON F_HLDLNKS.HLDLACNTNO = J_WC.ACACNTNO
    LEFT OUTER JOIN FILTER_P04_REP_VALE AS P04
      ON J_WC.ACACNTNO = P04.X02KEY
    LEFT OUTER JOIN FILTER_DEED AS DEED
      ON DEED.ACCOUNT_NO = J_WC.ACACNTNO
   CROSS JOIN TB_UDMH_CTL AS CTRL
   OUTER APPLY
      FN_ADDRESS_SPLIT(VPROP_ADDRESS1,VPROP_ADDRESS2,VPROP_ADDRESS3,VPROP_ADDRESS4,VPROP_ADDRESS5,NULL,NULL,J_WC.ACACNTNO,'X02-S01') AS PROP_ADDP_OP
   OUTER APPLY
      FN_DEEDSTITLE_SPLIT(PROPLRTITLENO,J_WC.ACACNTNO,'X02-S01') AS TITLE_OP
   OUTER APPLY
      FN_ADDRESS_SPLIT(SOLIATES.ADDRESS1,SOLIATES.ADDRESS2,SOLIATES.ADDRESS3,SOLIATES.ADDRESS4,SOLIATES.ADDRESS5,NULL,NULL,J_WC.ACACNTNO,'X02-S01') AS SOL_ADDP_OP
),
JOIN_LUTS AS (
  SELECT J_E.*
        ,PROP_WARANTY_LUT.TGT_IS_NHBC
        ,TENURE_LUT.TGT_TENURE
        ,TGT_S01_NEW_CLASS AS SEC01_S01_NEW_CLASS
        ,PROTYPE_LUT.TGT_S01_PROTYPE AS SEC01_S01_PROTYPE
        ,DEED_REAS_LUT_UNKNOWN.TGT_DEED_REAS AS UNKNOWN_DEED_REAS
        ,DEED_REAS_LUT_REDEEM.TGT_DEED_REAS AS REDEEM_DEED_REAS
        ,DEED_REAS_WITHREASONCODE.TGT_DEED_REAS AS DEED_REAS_WITHREASON
        ,DEED_REAS_MOVEREASONCODE_UNK.TGT_DEED_REAS AS MOVEREASONCODE_UNK_TGT_DEED_REAS
        ,DEED_REAS_MOVEREASONCODE_DRS.TGT_DEED_REAS AS MOVEREASONCODE_DRS_TGT_DEED_REAS
        ,DEED_REAS_MOVEREASONCODE_RED.TGT_DEED_REAS AS MOVEREASONCODE_RED_TGT_DEED_REAS
        ,DEED_REAS_MOVEREASONCODE_DEMAT.TGT_DEED_REAS AS MOVEREASONCODE_DEMAT_TGT_DEED_REAS
        ,DEED_REAS_LUT_REDEEM_FLAG.TGT_DEED_REAS AS REDEEM_FLAG_DEED_REAS
    FROM JOIN_EXTRA AS J_E
    LEFT OUTER JOIN TB_XFM_LUT_PROP_WARANTY AS PROP_WARANTY_LUT
      ON PROP_WARANTY_LUT.SRC_PROPWARANTYTYPE = PROPWARANTYTYPE
    LEFT OUTER JOIN TB_XFM_LUT_TENURE AS TENURE_LUT
      ON TENURE_LUT.SRC_PROPTENURECODE = PROP_TENURECODE
    LEFT OUTER JOIN TB_XFM_LUT_S01_NEW_CLASS AS NEWCLASS_LUT
      ON ACCLAS = NEWCLASS_LUT.SRC_ACCLAS
    LEFT OUTER JOIN TB_XFM_LUT_S01_PROTYPE AS PROTYPE_LUT
      ON VPROP_PROPTYPE = PROTYPE_LUT.SRC_PROPTYPECODE
    LEFT OUTER JOIN TB_XFM_LUT_DEED_REAS AS DEED_REAS_LUT_UNKNOWN 
      ON VMOVEMENTSOUT_MOVEREASONCODE = DEED_REAS_LUT_UNKNOWN.SRC_MOVEREASONCODE AND DEED_REAS_LUT_UNKNOWN.XFM_UNKNOWN_FLAG = 'Y'
    LEFT OUTER JOIN FILTER_DEED_REAS_REDEEM AS DEED_REAS_LUT_REDEEM 
      ON VMOVEMENTSOUT_MOVEREASONCODE = DEED_REAS_LUT_REDEEM.SRC_MOVEREASONCODE
    LEFT OUTER JOIN TB_XFM_LUT_DEED_REAS AS DEED_REAS_WITHREASONCODE
      ON VMOVEMENTSOUT_MOVEREASONCODE = DEED_REAS_WITHREASONCODE.SRC_MOVEREASONCODE
    LEFT OUTER JOIN TB_XFM_LUT_DEED_REAS AS DEED_REAS_MOVEREASONCODE_UNK
      ON DEED_REAS_MOVEREASONCODE_UNK.SRC_MOVEREASONCODE = VMOVEMENTSOUT_MOVEREASONCODE AND DEED_REAS_MOVEREASONCODE_UNK.SRC_MOVEREASONCODE = 'UNK'
    LEFT OUTER JOIN TB_XFM_LUT_DEED_REAS AS DEED_REAS_MOVEREASONCODE_DRS
      ON DEED_REAS_MOVEREASONCODE_DRS.SRC_MOVEREASONCODE = VMOVEMENTSOUT_MOVEREASONCODE AND DEED_REAS_MOVEREASONCODE_DRS.SRC_MOVEREASONCODE = 'DRS'
    LEFT OUTER JOIN TB_XFM_LUT_DEED_REAS AS DEED_REAS_MOVEREASONCODE_RED
      ON DEED_REAS_MOVEREASONCODE_RED.SRC_MOVEREASONCODE = VMOVEMENTSOUT_MOVEREASONCODE AND DEED_REAS_MOVEREASONCODE_RED.SRC_MOVEREASONCODE = 'RED'
    LEFT OUTER JOIN TB_XFM_LUT_DEED_REAS AS DEED_REAS_MOVEREASONCODE_DEMAT
      ON DEED_REAS_MOVEREASONCODE_DEMAT.SRC_MOVEREASONCODE = VMOVEMENTSOUT_MOVEREASONCODE AND DEED_REAS_MOVEREASONCODE_DEMAT.SRC_MOVEREASONCODE = 'DEMAT'
    LEFT OUTER JOIN TB_XFM_LUT_DEED_REAS AS DEED_REAS_LUT_REDEEM_FLAG
      ON VMOVEMENTSOUT_MOVEREASONCODE = DEED_REAS_LUT_REDEEM_FLAG.SRC_MOVEREASONCODE AND DEED_REAS_LUT_REDEEM_FLAG.XFM_REDEEM_FLAG = 'Y'
),
MAP_FROMSRC AS (
  SELECT J_L.*
        ,COUNTY AS SEC01_S01_COUNTY
        ,STREET AS SEC01_S01_STREET
        ,DISTRICT AS SEC01_S01_DISTRICT
        ,TOWN AS SEC01_S01_TOWN
        ,PROP_PREMISE_NAME AS SEC01_S01_BNAME
        ,PROP_PREMISE_NO AS SEC01_S01_BNUM
        ,CASE 
           WHEN PROPLRTITLENO IN ('UNREGISTERED','UNREG','DEMAT') THEN NULL ELSE TITLE1
         END AS SEC01_S01_D_REGTITLE
        ,CASE 
           WHEN PROPLRTITLENO IN ('UNREGISTERED','UNREG','DEMAT') THEN NULL ELSE TITLE2
         END AS SEC01_S01_D_REGTITL2
        ,CASE 
           WHEN PROPLRTITLENO IN ('UNREGISTERED','UNREG','DEMAT') THEN NULL ELSE TITLE3
         END AS SEC01_S01_D_REGTITL3
        ,CASE 
           WHEN PROPLRTITLENO IN ('UNREGISTERED','UNREG','DEMAT') THEN NULL ELSE TITLE4
         END AS SEC01_S01_D_REGTITL4
        ,CASE                                                                          -- Updated this field as per 1.3 version
           WHEN LATEST_MOVETYPE <> 'I' THEN
             CASE 
               WHEN SOURCE = 'RED' THEN
                 CASE 
                   WHEN LATEST_MOVEINTERNALCODE IS NOT NULL THEN 'Staffordshire'
                   ELSE SOLIATES_COUNTY
                 END
               WHEN SOURCE = 'BLUE' THEN SOLIATES_COUNTY
             END
         END AS SEC01_S01_DEE_COUNTY
        ,CASE                                                                          -- Updated this field as per 1.3 version
           WHEN LATEST_MOVETYPE <> 'I' THEN
             CASE 
               WHEN SOURCE = 'RED' THEN
                 CASE 
                   WHEN LATEST_MOVEINTERNALCODE IS NOT NULL THEN NULL
                   ELSE SOLIATES_DISTRICT
                 END
               WHEN SOURCE = 'BLUE' THEN SOLIATES_DISTRICT
             END
         END AS SEC01_S01_DEE_DIST
        ,CASE                                      --Updated as per 1.3 version
           WHEN LATEST_MOVETYPE <> 'I' THEN
             CASE 
               WHEN SOURCE = 'RED' THEN
               CASE 
                 WHEN LATEST_MOVEINTERNALCODE IS NOT NULL THEN 'ST13 5RG'
                 ELSE SOLIATES_POSTCODE
               END
               WHEN SOURCE = 'BLUE' THEN SOLIATES_POSTCODE
           END
         END AS SEC01_S01_DEE_PCODE
        ,CASE                                                                          -- Updated this field as per 1.3 version
           WHEN LATEST_MOVETYPE <> 'I' THEN
             CASE 
               WHEN SOURCE = 'RED' THEN
                 CASE 
                   WHEN LATEST_MOVEINTERNALCODE IS NOT NULL THEN NULL
                   ELSE SOLIATES_STREET
                 END
               WHEN SOURCE = 'BLUE' THEN SOLIATES_STREET
             END
         END AS SEC01_S01_DEE_STREET
        ,CASE                            -- AS PER 1.3 VERSION
           WHEN Latest_MOVETYPE <> 'I' THEN
             CASE 
               WHEN SOURCE = 'RED' THEN
                 CASE 
                   WHEN LATEST_MOVEINTERNALCODE IS NOT NULL THEN 'Britannia House'
                   ELSE SOLIATES_NAME
                 END
               WHEN SOURCE = 'BLUE' THEN SOLIATES_NAME
             END
         END AS SEC01_S01_DEE_TITLE
        ,CASE                                                                          -- Updated this field as per 1.3 version
           WHEN LATEST_MOVETYPE <> 'I' THEN
             CASE 
               WHEN SOURCE = 'RED' THEN
                 CASE 
                   WHEN LATEST_MOVEINTERNALCODE IS NOT NULL THEN 'Leek'
                   ELSE SOLIATES_TOWN
                 END
               WHEN SOURCE = 'BLUE' THEN SOLIATES_TOWN
             END
         END AS SEC01_S01_DEE_TOWN
        ,CASE
           WHEN LATEST_MOVETYPE <> 'I' THEN
             CASE 
               WHEN SOURCE = 'RED' THEN
                 CASE 
                   WHEN SOLIATES_SOLTYPE IS NOT NULL THEN SOLIATES_PREMISENAME
                 END
               WHEN SOURCE = 'BLUE' THEN SOLIATES_PREMISENAME
             END             
         END AS SEC01_S01_D_BNAME
        ,CASE
           WHEN LATEST_MOVETYPE <> 'I' THEN
             CASE 
               WHEN SOURCE = 'RED' THEN
                 CASE 
                   WHEN SOLIATES_SOLTYPE IS NOT NULL THEN SOLIATES_PREMISE_NO
                 END
               WHEN SOURCE = 'BLUE' THEN SOLIATES_PREMISE_NO
             END
          END AS SEC01_S01_D_BNUM
        ,TGT_IS_NHBC AS SEC01_S01_NHBC
        ,TGT_TENURE AS SEC01_S01_TENURE
        ,ACINCEPDATE AS S01_CLASS_DT
        ,ACINCEPDATE AS S01_FRCOMP_DT
        ,ACINCEPDATE AS S01_LEGALCH_DT
        ,ACHPOSESIONDATE AS S01_POS_DT
        ,FLOOR(PROP_COSTPRICE) AS SEC01_S01_PRICE_1
        ,CASE
           WHEN LATEST_MOVETYPE <> 'I' THEN
             CASE
               WHEN SOLIATES_CNT = 0 THEN SOLIATES_POSTCODE
             END
         END AS S01_SOLREF_PC
        ,CASE
           WHEN LATEST_MOVETYPE <> 'I' THEN
             CASE
               WHEN SOLIATES_CNT = 0 THEN SOLIATES_TELEPHONE
             END
         END AS S01_SOLREF_TN
        ,CASE
           WHEN LATEST_MOVETYPE <> 'I' THEN
             CASE
               WHEN SOLIATES_CNT = 0 THEN SOLIATES_SOLNAME
             END
         END AS S01_SOLREF_40_1
        ,VPROP_YEARBUILT AS SEC01_S01_YEARBUILT
        ,CASE
           WHEN HLDLNK_CNT > 0 THEN 'Y'
           ELSE 'N'
         END AS SEC01_S01_LET_PROP
        ,CASE 
           WHEN VPROP_LEASETERM > 0 THEN VPROP_LEASETERM
           ELSE 9999
         END AS SEC01_S01_LEASE_TERM
        ,CASE
           WHEN EARLIESTIN_MOVETYPE = 'I' THEN 'RC'
           WHEN EARLIESTIN_MOVETYPE IS NULL THEN 'PR'
        END AS SEC01_S01_LEGCHRG_ST
       ,VMOVEMENTSEARLIESTIN_MOVEDATE AS S01_LEGCHRG_DT
       ,CASE FIRSTLIVEREDEEM_ACPROCESSTATUS
          WHEN 3 THEN 'R'
          WHEN 4 THEN 'R'
          ELSE 'L'
        END AS MAR01_M01_STATUS
       ,VAL05_P04_REP_VALE AS SEC01_S01_REP_VALUE 
    FROM JOIN_LUTS AS J_L
),
MAP_DEPENDENT_01 AS (
  SELECT M_SRC.*
        ,CASE
           WHEN SEC01_S01_D_REGTITLE IS NOT NULL THEN 'Y'
           WHEN PROPLRTITLENO = 'DEMAT' THEN 'Y'
           ELSE 'N'
         END AS SEC01_S01_D_REGLAND
        ,CASE WHEN SEC01_S01_TENURE = 'A value TBD' THEN VPROP_GROUNDRENT END AS SEC01_S01_RENT --TODO: Revisit after value is provided.
        ,CASE
           WHEN SEC01_S01_TENURE = 'LE' THEN DATEDIFF(YEAR,ACINCEPDATE,VPROP_EXPIRYDATE)
           ELSE NULL
         END AS SEC01_S01_UNEXPIRED
        --,CASE  
        --   WHEN SEC01_S01_TENURE = 'LE' THEN
        --     CASE 
        --       WHEN VPROP_LEASETERM IS NULL OR VPROP_EXPIRYDATE IS NULL
        --         THEN  NULL
        --       ELSE DATEADD(YEAR,ISNULL(VPROP_LEASETERM * -1,0),VPROP_EXPIRYDATE)
        --     END
        --   ELSE NULL
        -- END AS S01_LEASE_DT
        ,CASE 
           WHEN S01_LEGCHRG_DT IS NOT NULL THEN 'Y'
           ELSE 'N'
         END AS S01_LCR_IND
        ,CASE SOURCE
           WHEN 'RED' THEN
             CASE MAR01_M01_STATUS
                WHEN 'L' THEN
                 CASE
                   WHEN VMOVEMENTSOUT_MOVEREASONCODE IS NULL THEN UNKNOWN_DEED_REAS
                   ELSE DEED_REAS_WITHREASON
                 END
                WHEN 'R' THEN
                  CASE 
                    WHEN VMOVEMENTSOUT_MOVEREASONCODE IS NULL THEN MOVEREASONCODE_UNK_TGT_DEED_REAS
                    WHEN VMOVEMENTSOUT_MOVEREASONCODE IN ('BD','RED') THEN 
                      CASE
                        WHEN DEED_CNT > 0 THEN MOVEREASONCODE_DRS_TGT_DEED_REAS
                        ELSE MOVEREASONCODE_RED_TGT_DEED_REAS
                      END
                    ELSE MOVEREASONCODE_RED_TGT_DEED_REAS
                END
             END            
           WHEN 'BLUE' THEN
             CASE MAR01_M01_STATUS
               WHEN 'L' THEN
                 CASE
                   WHEN VPROP_DEDBINSLOT = 0 THEN MOVEREASONCODE_DEMAT_TGT_DEED_REAS   --TODO VPROP_DEDBINSLOT = 'TID' raised an issue
                   WHEN VMOVEMENTSOUT_MOVEREASONCODE IS NULL THEN MOVEREASONCODE_UNK_TGT_DEED_REAS
                   ELSE DEED_REAS_WITHREASON
                 END
               WHEN 'R' THEN REDEEM_FLAG_DEED_REAS
             END       
           END AS SEC01_S01_DEED_REAS
        ,CASE MAR01_M01_STATUS
           WHEN 'R' THEN M_SRC.ACCLRDATE
           ELSE NULL
         END AS M01_REDEEM_DT
    FROM MAP_FROMSRC AS M_SRC
),
FILTER_DEED_REAS_LUT AS (
  SELECT COUNT(1) AS DEED_LUT_CNT
        ,DEED_REAS.TGT_DEED_REAS AS TGT_DEED_REAS
    FROM TB_XFM_LUT_DEED_REAS AS DEED_REAS
   WHERE DEED_REAS.XFM_DEMAT_FLAG = 'Y'
   GROUP BY TGT_DEED_REAS
),
JOIN_DEPENDENT_01 AS (
  SELECT MAP_DEP_01.*
        ,DEED_REAS_LUT.DEED_LUT_CNT
    FROM MAP_DEPENDENT_01 AS MAP_DEP_01
    LEFT OUTER JOIN FILTER_DEED_REAS_LUT AS DEED_REAS_LUT
      ON DEED_REAS_LUT.TGT_DEED_REAS = MAP_DEP_01.SEC01_S01_DEED_REAS
),
MAP_DEPENDENT_02 AS (
  SELECT JOIN_DEP_01.* 
        ,CASE
           WHEN JOIN_DEP_01.DEED_LUT_CNT = 1 THEN NULL
           WHEN SEC01_S01_DEED_REAS IS NOT NULL THEN 'N'
           WHEN SEC01_S01_DEED_REAS IS NULL THEN 'Y'
         END AS SEC01_S01_COMPL_IND
        ,CASE 
           WHEN MAR01_M01_STATUS = 'R' THEN
             CASE
               WHEN DEED_CNT = 0 THEN JOIN_DEP_01.M01_REDEEM_DT
               ELSE NULL
             END
           ELSE NULL
         END AS S01_SUBST_DT
    FROM JOIN_DEPENDENT_01 AS JOIN_DEP_01
),
MAP_DEPENDENT_03 AS (
  SELECT MAP_DEP_02.*
        ,CASE WHEN SEC01_S01_COMPL_IND IS NULL THEN 'Y' ELSE 'N' END AS SEC01_S01_NONRTN
        ,CASE WHEN SEC01_S01_COMPL_IND IS NOT NULL THEN VMOVEMENTSOUT_MOVEDATE END AS S01_D_DATEOUT_DT
        ,CASE WHEN SEC01_S01_COMPL_IND IS NOT NULL THEN VMOVEMENTSEARLIESTIN_MOVEDATE END AS S01_D_RECEIVE_DT
        ,CASE
            WHEN SEC01_S01_COMPL_IND IS NULL THEN NULL
            WHEN SEC01_S01_DEED_REAS IS NULL THEN NULL
            ELSE VMOVEMENTSLATESTIN_MOVEDATE
        END AS S01_D_RTN_DT
    FROM MAP_DEPENDENT_02 AS MAP_DEP_02
),
MAP_DEPENDENT_04 AS (
  SELECT MAP_DEP_03.*
        ,CASE
           WHEN FIRSTLIVEREDEEM_ACPROCESSTATUS = 2        
            AND SEC01_S01_COMPL_IND IS NULL
            AND (S01_D_RECEIVE_DT IS NULL OR  S01_D_RTN_DT IS NULL)
             THEN DATEADD(MONTH,1,WS_MIGR_DATE)
           ELSE NULL
         END AS S01_D_ESTDATE_DT         
    FROM MAP_DEPENDENT_03 AS MAP_DEP_03
  ),
MAP_COPYTARGET AS (
  SELECT MAP_DEP_04.*
        ,S01_D_ESTDATE_DT AS S01_D_SCH_DT
        ,S01_LEGCHRG_DT AS S01_REGTITL_DT
    FROM MAP_DEPENDENT_04 AS MAP_DEP_04 
),
MAP_DEFAULTS AS (
  SELECT M_C.*
        ,'S01' AS S01_CODE
        ,NULL AS SEC01_S01_BUSS_USE
        ,NULL AS SEC01_S01_CODE1_STND
        ,NULL AS SEC01_S01_D_EXTLOAN
        ,'Y' AS SEC01_S01_D_TOCHARGE
        ,NULL AS SEC01_S01_LOCATION
        ,NULL AS SEC01_S01_OLD_CLASS
        ,NULL AS SEC01_S01_OLD_CLS_TY
        ,'N' AS SEC01_S01_RESTRICT
        ,'R' AS SEC01_S01_ROT_REQ
        ,NULL AS SEC01_S01_RTB_FLG
        ,NULL AS SEC01_S01_SOLSLETREF
        ,'U' AS SEC01_S01_VAT_LIABLE
        ,12 AS SEC01_S01_CLASS_TYPE
        ,NULL AS S01_STND_DT
        ,NULL AS S01_RENT_DT
        ,1 AS SEC01_S01_SEC_NBR
        ,NULL AS S01_ORIG_SOL
        ,NULL AS SEC01_S01_CODE1_EXT
        ,NULL AS S01_D_LAST_DT
        ,NULL AS S01_D_PICK_DT
        ,NULL AS SEC01_S01_D_REQSTA
        ,NULL AS SEC01_S01_POSTALNME2
        ,0 AS SEC01_SENT_STND
        ,NULL AS SEC01_S01_SHELF_LOC
        ,NULL AS SEC01_S01_USR_ACT
        ,NULL AS SEC01_S01_USR_FWD
        ,NULL AS SEC01_S01_USR_REQ
        ,'N' AS SEC01_S01_DEEDS_1ST
        ,NULL AS S01_START_DT
        ,99999 AS SEC01_S01_SSC_CODE
        ,'N' AS SEC01_S01_URGENT
        ,NULL AS S01_DSCHRGE_DT
        ,NULL AS S01_LEASE_DT
    FROM MAP_COPYTARGET AS M_C
),
MAP_EXCEPTIONS AS (
  SELECT M_DEF.*
        ,CASE WHEN SEC01_S01_PRICE_1 <> PROP_COSTPRICE THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_S01','R:ROUNDING',ACACNTNO,'SEC01_S01_PRICE',SEC01_S01_PRICE_1))
         END AS EXCEPTION_1
        ,CASE 
           WHEN LEN(SEC01_S01_PRICE_1) > 8 THEN LEFT(SEC01_S01_PRICE_1,8)
           ELSE SEC01_S01_PRICE_1
         END AS SEC01_S01_PRICE
        ,CASE
            WHEN LEN(S01_SOLREF_40_1) > 40 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_S01','W:LENGTH-OVERRUN',ACACNTNO,'S01_SOLREF_40',S01_SOLREF_40_1)) 
         END AS EXCEPTION_2
        ,CASE 
           WHEN LEN(S01_SOLREF_40_1) > 40 THEN LEFT(S01_SOLREF_40_1,40)
           ELSE S01_SOLREF_40_1
         END AS S01_SOLREF_40
    FROM MAP_DEFAULTS AS M_DEF
),
OUT_FIELDS AS (
  SELECT MAP_EXCEP.ACACNTNO AS X02KEY
        ,S01_CODE
        ,SEC01_S01_BUSS_USE
        ,SEC01_S01_CODE1_STND
        ,SEC01_S01_COMPL_IND
        ,SEC01_S01_COUNTY
        ,SEC01_S01_D_EXTLOAN
        ,SEC01_S01_D_REGLAND
        ,SEC01_S01_D_REGTITLE
        ,SEC01_S01_D_REGTITL2
        ,SEC01_S01_D_REGTITL3
        ,SEC01_S01_D_REGTITL4
        ,SEC01_S01_D_TOCHARGE
        ,SEC01_S01_DEE_COUNTY
        ,SEC01_S01_DEE_DIST
        ,SEC01_S01_DEE_PCODE
        ,SEC01_S01_DEE_STREET
        ,SEC01_S01_DEE_TITLE
        ,SEC01_S01_DEE_TOWN
        ,SEC01_S01_DISTRICT
        ,SEC01_S01_LOCATION
        ,SEC01_S01_NHBC
        ,SEC01_S01_NONRTN
        ,SEC01_S01_OLD_CLASS
        ,SEC01_S01_OLD_CLS_TY
        ,SEC01_S01_POSTCODE
        ,SEC01_S01_RESTRICT
        ,SEC01_S01_ROT_REQ
        ,SEC01_S01_RTB_FLG
        ,SEC01_S01_SOLSLETREF
        ,SEC01_S01_STREET
        ,SEC01_S01_TENURE
        ,SEC01_S01_TOWN
        ,SEC01_S01_VAT_LIABLE
        ,SEC01_S01_CLASS_TYPE
        ,S01_CLASS_DT
        ,S01_D_DATEOUT_DT
        ,S01_D_ESTDATE_DT
        ,S01_D_RECEIVE_DT
        ,S01_D_RTN_DT
        ,S01_D_SCH_DT
        ,S01_STND_DT
        ,SEC01_S01_DEED_REAS
        ,S01_FRCOMP_DT
        ,S01_LEGALCH_DT
        ,SEC01_S01_NEW_CLASS
        ,S01_POS_DT
        ,SEC01_S01_PRICE
        ,SEC01_S01_PROTYPE
        ,SEC01_S01_RENT
        ,S01_RENT_DT
        ,SEC01_S01_REP_VALUE
        ,SEC01_S01_SEC_NBR
        ,S01_SUBST_DT
        ,S01_SOLREF_PC
        ,S01_SOLREF_TN
        ,S01_SOLREF_40
        ,SEC01_S01_UNEXPIRED
        ,SEC01_S01_YEARBUILT
        ,S01_ORIG_SOL
        ,SEC01_S01_LET_PROP
        ,SEC01_S01_BNAME
        ,SEC01_S01_BNUM
        ,SEC01_S01_CODE1_EXT
        ,S01_D_LAST_DT
        ,S01_D_PICK_DT
        ,SEC01_S01_D_BNAME
        ,SEC01_S01_D_BNUM
        ,SEC01_S01_D_REQSTA
        ,SEC01_S01_POSTALNME2
        ,SEC01_SENT_STND
        ,SEC01_S01_SHELF_LOC
        ,SEC01_S01_USR_ACT
        ,SEC01_S01_USR_FWD
        ,SEC01_S01_USR_REQ
        ,SEC01_S01_DEEDS_1ST
        ,S01_START_DT
        ,S01_LEASE_DT
        ,SEC01_S01_LEASE_TERM
        ,SEC01_S01_SSC_CODE
        ,SEC01_S01_URGENT
        ,SEC01_S01_LEGCHRG_ST
        ,S01_LEGCHRG_DT
        ,S01_DSCHRGE_DT
        ,S01_REGTITL_DT
        ,S01_LCR_IND
        ,CASE 
           WHEN CAST(CONCAT(
                            CAST(EXCEPTION_1 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_2 AS VARCHAR(MAX))
                           )AS NVARCHAR(MAX)) = ' ' THEN NULL
           ELSE CAST(CONCAT(
                            CAST(EXCEPTION_1 AS VARCHAR(MAX))
                           ,CAST(EXCEPTION_2 AS VARCHAR(MAX))
                           )AS XML) 
         END AS X02_UDMH_EXCEPTION
    FROM MAP_EXCEPTIONS AS MAP_EXCEP
)
SELECT *
  FROM OUT_FIELDS
GO
/*
 * Author: Aishwarya Rao
 * Creation Date: 22/06/2015
 * Description: This SQL code applies business transformation for X02_S02 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0         22/06/2015      Aishwarya Rao           Based on Mapping Spec Version v0.3   
    2.0         17/07/2015      Aishwarya Rao           Based on Mapping Spec Version v0.7
    3.0         12/10/2015      Aishwarya Rao           Based on Mapping Spec Version v1.1
 *-----------------------------------------------------------------------------------------------------
 */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.VW_X02_S02') AND type in (N'V'))
DROP VIEW dbo.VW_X02_S02
GO 
 
CREATE VIEW dbo.VW_X02_S02
AS
WITH 
FILTER_COLATERALNKS_NOTMAINPROP AS (
  SELECT COLACNTNO
        ,COLPROPSEQNO
        ,COLPROPCHARGENO
        ,COLTYPE
        ,COLEFDATEFROM
        ,COLEFDATETO
    FROM TB_SRC_COLATERALNKS
   WHERE COLTYPE = 'P'
),
JOIN_WRITECRITERIA AS (
  SELECT FLT_CLTRL.*
        ,AC01_MAIN.ACACNTNO
        ,AC01_MAIN.ACHPURCHPROPSEQNO
    FROM FILTER_COLATERALNKS_NOTMAINPROP AS FLT_CLTRL
   INNER JOIN TB_SRC_AC01_MAIN AS AC01_MAIN
      ON AC01_MAIN.ACACNTNO = FLT_CLTRL.COLACNTNO
     AND (AC01_MAIN.ACHPURCHPROPSEQNO  <> FLT_CLTRL.COLPROPSEQNO OR FLT_CLTRL.COLPROPSEQNO IS NULL)
),
JOIN_EXTRA AS (
  SELECT J_WC.*
        ,ADDRESS_OP.COUNTY
        ,ADDRESS_OP.DISTRICT
        ,VPROP.POSTCODE
        ,VPROP.PROPOWNERNAME
        ,ADDRESS_OP.STREET
        ,ADDRESS_OP.TOWN
        ,VPROP.PROPVALUATION
        ,VPROP.PROPVALUATIONDATE
        ,ADDRESS_OP.PREMISE_NAME
        ,ADDRESS_OP.PREMISE_NO
    FROM JOIN_WRITECRITERIA AS J_WC
    LEFT OUTER JOIN TB_SRC_VPROPERTIES AS VPROP
      ON J_WC.COLPROPSEQNO = VPROP.PROPSEQNO
   CROSS APPLY FN_ADDRESS_SPLIT(VPROP.ADDRESS1,VPROP.ADDRESS2,VPROP.ADDRESS3,VPROP.ADDRESS4,VPROP.ADDRESS5,NULL,NULL,J_WC.ACACNTNO,'S02') AS ADDRESS_OP
),
JOIN_LUTS AS (
  SELECT J_EXTRA.*
        ,SEC_LUT_PROP.TGT_SEC_TYPE AS SEC_TYPE
    FROM JOIN_EXTRA AS J_EXTRA 
    LEFT OUTER JOIN TB_XFM_LUT_SEC_TYPE AS SEC_LUT_PROP
      ON J_EXTRA.COLPROPCHARGENO = SEC_LUT_PROP.SRC_COLPROPCHARGENO
),
MAP_FROMSRC AS (
  SELECT J_LUTS.*
        ,J_LUTS.ACACNTNO AS X02KEY
        ,J_LUTS.COUNTY AS SEC09_S02_ADD_COUNTY
        ,J_LUTS.DISTRICT AS SEC09_S02_ADD_DIST
        ,J_LUTS.POSTCODE AS SEC09_S02_ADD_PCODE
        ,J_LUTS.PROPOWNERNAME AS SEC09_S02_ADD_POSTAL
        ,J_LUTS.STREET AS SEC09_S02_ADD_STREET
        ,J_LUTS.TOWN AS SEC09_S02_ADD_TOWN
        ,J_LUTS.SEC_TYPE AS SEC09_S02_SEC_TYP
        ,J_LUTS.COLEFDATEFROM AS S02_DATE_IN_DT
        ,J_LUTS.COLEFDATETO AS S02_DATE_OUT_DT
        ,J_LUTS.PROPVALUATION AS SEC09_S02_VAL_AMT
        ,J_LUTS.PROPVALUATIONDATE AS S02_VALRCV_DT
        ,J_LUTS.PREMISE_NAME AS SEC09_S02_ADD_BNAME
        ,J_LUTS.PREMISE_NO AS SEC09_S02_ADD_BNUM
    FROM JOIN_LUTS AS J_LUTS
),
MAP_DEFAULTS AS (
  SELECT MAP_FROMSRC.*
        ,'S02' AS S02_CODE
        ,'UNKNOWN' AS SEC09_S02_DESCRIP_1
        ,NULL AS SEC09_S02_DESCRIP_2
        ,NULL AS SEC09_S02_DESCRIP_3
        ,NULL AS SEC09_S02_DESCRIP_4
        ,NULL AS SEC09_S02_DESCRIP_5
        ,NULL AS SEC09_S02_DESCRIP_6
        ,NULL AS SEC09_S02_TIME_REG
        ,NULL AS SEC09_S02_TIME_REM
        ,NULL AS SEC09_S02_WARNCODE
    FROM MAP_FROMSRC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,S02_CODE
        ,SEC09_S02_ADD_COUNTY
        ,SEC09_S02_ADD_DIST
        ,SEC09_S02_ADD_PCODE
        ,SEC09_S02_ADD_POSTAL
        ,SEC09_S02_ADD_STREET
        ,SEC09_S02_ADD_TOWN
        ,SEC09_S02_DESCRIP_1
        ,SEC09_S02_DESCRIP_2
        ,SEC09_S02_DESCRIP_3
        ,SEC09_S02_DESCRIP_4
        ,SEC09_S02_DESCRIP_5
        ,SEC09_S02_DESCRIP_6
        ,SEC09_S02_SEC_TYP
        ,S02_DATE_IN_DT
        ,S02_DATE_OUT_DT
        ,SEC09_S02_TIME_REG
        ,SEC09_S02_TIME_REM
        ,SEC09_S02_VAL_AMT
        ,S02_VALRCV_DT
        ,SEC09_S02_ADD_BNAME
        ,SEC09_S02_ADD_BNUM
        ,SEC09_S02_WARNCODE
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS


 
GO
--/*
-- * Author: Nikhil 
-- * Creation Date: 19/06/2015
-- * Description: This SQL code applies business transformation for X02_S03 target type.
-- * Revision History:
-- *-----------------------------------------------------------------------------------------------------
-- * Version      Date           Developer                      Description
-- *-----------------------------------------------------------------------------------------------------
--    1.0        19/06/2015       Nikhil                   Based on Mapping Spec version v0.6
--    2.0        17/07/2015       Nikhil                   Changes are done on SEC06.S03-CHARGES,
--                                                         SEC06.S03-CHG-REF,SEC06.S03-SCH-AMOUNT 
--                                                         based on Mapping Spec version v0.7
--    3.0        7/08/2015        KAVANA GC                Added join condition in join_writecriteria and modified based on format
--    4.0        20/08/2015       SOWMYA SV                Added the default fields, updated Function Name and changed the view
--    5.0        21/08/2015       SOWMYA SV                Updated the query after the review comments Defect ID is(68849 and 68850)
--    6.0        24/08/2015       SOWMYA SV                Updated the Qiery as per Unit Testing Defect ID (68867 and 68871)
--    7.0        10/09/2015       SOWMYA SV                Udated the Query as per the Transformation Testing Defect ID(68918 and 68900)
-- *-----------------------------------------------------------------------------------------------------
-- */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_S03]') AND TYPE in (N'V'))
DROP VIEW [dbo].[VW_X02_S03]
GO 

CREATE VIEW [dbo].[VW_X02_S03]
AS
WITH 
JOIN_WRITECRITERIA AS (
  SELECT SUBSEQUENTCHARGES.SUBCHGREFERENCE
        ,SUBSEQUENTCHARGES.SUBCHGCHARGENAME
        ,SUBSEQUENTCHARGES.POSTCODE
        ,SUBSEQUENTCHARGES.SUBCHGDATEREGISTERED 
        ,SUBSEQUENTCHARGES.SUBCHGDATEREMOVED
        ,SUBSEQUENTCHARGES.SUBCHGCHARGEDATE
        ,SUBSEQUENTCHARGES.SUBCHGSEQNO
        ,SUBSEQUENTCHARGES.SUBCHGCHARGEAMOUNT
        ,SUBSEQUENTCHARGES.SUBCHGCHARGETYPE
        ,SUBSEQUENTCHARGES.SUBCHGCHARGENO
        ,SUBSEQUENTCHARGES.ADDRESS1
        ,SUBSEQUENTCHARGES.ADDRESS2
        ,SUBSEQUENTCHARGES.ADDRESS3
        ,SUBSEQUENTCHARGES.ADDRESS4
        ,SUBSEQUENTCHARGES.ADDRESS5
        ,AC01.ACACNTNO
    FROM TB_SRC_AC01_MAIN AS AC01 
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO 
   INNER JOIN TB_SRC_SUBSEQUENTCHARGES AS SUBSEQUENTCHARGES
      ON AC01.ACHPURCHPROPSEQNO = SUBSEQUENTCHARGES.SUBCHGPROPSEQNO
),
JOIN_EXTRA AS (
  SELECT JOIN_WRITECRITERIA.*
        ,ADDRESSPARSER_OP.PREMISE_NAME AS PREMISE_NAME
        ,ADDRESSPARSER_OP.PREMISE_NO AS PREMISE_NO
        ,ADDRESSPARSER_OP.STREET AS STREET
        ,ADDRESSPARSER_OP.DISTRICT AS DISTRICT
        ,ADDRESSPARSER_OP.TOWN AS TOWN
        ,ADDRESSPARSER_OP.COUNTY AS COUNTY
    FROM JOIN_WRITECRITERIA
   CROSS APPLY dbo.FN_ADDRESS_SPLIT(ADDRESS1,ADDRESS2,ADDRESS3,ADDRESS4,ADDRESS5,NULL,NULL,ACACNTNO,'X02_S03') AS ADDRESSPARSER_OP
),
JOIN_LUT AS (
  SELECT JE.*
        ,TB_XFM_LUT_SCHG_REAS.TGT_SCHG_REAS
    FROM JOIN_EXTRA AS JE
    LEFT OUTER JOIN TB_XFM_LUT_SCHG_REAS
      ON JE.SUBCHGCHARGETYPE = TB_XFM_LUT_SCHG_REAS.SRC_SUBCHGCHARGETYPE
),
MAP_FROMSRC AS (
  SELECT SUBCHGCHARGEAMOUNT
        ,ACACNTNO AS X02KEY
        ,LEFT(SUBCHGREFERENCE,20) AS SEC06_S03_CHG_REF  
        ,COUNTY AS SEC06_S03_SCH_COUNTY
        ,DISTRICT AS SEC06_S03_SCH_DIST   
        ,SUBCHGCHARGENAME AS SEC06_S03_SCH_NAME_1
        ,POSTCODE AS SEC06_S03_SCH_PCODE
        ,STREET AS SEC06_S03_SCH_STREET
        ,TOWN AS SEC06_S03_SCH_TOWN
        ,SUBCHGDATEREGISTERED AS S03_DATE_IN_DT
        ,SUBCHGDATEREMOVED AS S03_DATE_OUT_DT
        ,SUBCHGCHARGEDATE AS S03_START_DT
        ,DENSE_RANK() OVER (
           PARTITION BY ACACNTNO
             ORDER BY
               CASE 
                 WHEN SUBCHGDATEREMOVED IS NULL THEN 1
                 ELSE 2
               END ASC,
               CASE 
                 WHEN SUBCHGDATEREMOVED IS NULL THEN SUBCHGCHARGENO
                 ELSE 99999
               END ASC,
               CASE 
                 WHEN SUBCHGDATEREMOVED IS NOT NULL THEN SUBCHGDATEREMOVED
                 ELSE '01-JAN-1900'
               END DESC
              ,SUBCHGDATEREGISTERED ASC 
              ,SUBCHGSEQNO ASC          
         ) AS SEC06_S03_RANK_NBR
        ,FLOOR(SUBCHGCHARGEAMOUNT) AS SEC06_S03_SCH_AMOUNT
        ,TGT_SCHG_REAS AS SEC06_S03_SCHG_REAS
        ,PREMISE_NAME AS SEC06_S03_SCH_BNAME
        ,PREMISE_NO AS SEC06_S03_SCH_BNUM
        ,CASE
           WHEN SUBCHGDATEREMOVED IS NULL THEN NULL 
           ELSE DENSE_RANK() OVER (
                  PARTITION BY 
                    ACACNTNO
                  ORDER BY 
                    CASE 
                      WHEN SUBCHGDATEREMOVED IS NOT NULL THEN 1
                      ELSE 2
                    END ASC
                   ,SUBCHGDATEREMOVED DESC 
                   ,SUBCHGDATEREGISTERED ASC 
                   ,SUBCHGSEQNO ASC 
        )
       END AS SEC06_S03_SEQ_NO2
    FROM JOIN_LUT
),
MAP_DEFAULTS AS (
  SELECT * 
        ,'S03' AS S03_CODE
        ,'N' AS SEC06_S03_EX_1STCHG
        ,'N' AS SEC06_S03_INT_CHG
        ,NULL AS SEC06_S03_ADVANCE
        ,NULL AS SEC06_S03_ARREARS
        ,'N' AS SEC06_S03_CHARGE_DET
        ,0 AS SEC06_S03_CHARGES
        ,NULL AS SEC06_S03_CMS
        ,NULL AS SEC06_S03_D_REGTITL2
        ,NULL AS SEC06_S03_D_REGTITLE
        ,'Y' AS SEC06_S03_EXT_CHARGE
        ,NULL AS SEC06_S03_F_ADVANCE
        ,NULL AS S03_FURTH_DT
        ,NULL AS S03_INIT_DT
        ,NULL AS SEC06_S03_INS_NAME
        ,NULL AS SEC06_S03_REG_LAND
        ,NULL AS SEC06_S03_TENURE
        ,1 AS SEC06_S03_SEC_NBR
        ,0 AS SEC06_S03_SUB_NO
        ,'Y' AS SEC06_S03_THRD_INT
    FROM MAP_FROMSRC
),
--Defect ID 68850
MAP_SIGN AS (
  SELECT M_DEF.*
        ,CASE 
           WHEN SEC06_S03_ARREARS < 0 THEN '-'
           WHEN SEC06_S03_ARREARS > 0 THEN '+'
           WHEN SEC06_S03_ARREARS = 0 THEN ' '
         END AS S03_SIGN1           
        ,CASE    
           WHEN SEC06_S03_CHARGES < 0 THEN '-'
           WHEN SEC06_S03_CHARGES > 0 THEN '+'
           WHEN SEC06_S03_CHARGES = 0 THEN ' '
         END AS S03_SIGN2
    FROM MAP_DEFAULTS AS M_DEF
),
--Defect ID 68867 , 68871 and 68900
MAP_EXCEPTIONS AS (
  SELECT *
        ,CASE 
         WHEN LEN(SEC06_S03_SCH_NAME_1) > 40 THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_S03','W:LENGTH-OVERRUN',X02KEY,'SEC06_S03_SCH_NAME',SEC06_S03_SCH_NAME_1))
         END AS EXCEP_LEN_OVERRUN
        ,CASE 
           WHEN LEN(SEC06_S03_SCH_NAME_1) >= 40 THEN SUBSTRING(SEC06_S03_SCH_NAME_1,1,40)
           ELSE SEC06_S03_SCH_NAME_1   
         END AS SEC06_S03_SCH_NAME
        ,CASE 
         WHEN SEC06_S03_SCH_AMOUNT <> SUBCHGCHARGEAMOUNT THEN (SELECT EXCEP FROM dbo.FN_EXCEPTION1('X02_S03','R:ROUNDING',X02KEY,'SEC06_S03_SCH_AMOUNT',SEC06_S03_SCH_AMOUNT))
         END AS EXCEP_ROUND
        ,CASE 
        WHEN LEN(SEC06_S03_CHG_REF) > 20 THEN (SELECT EXCEP FROM  dbo.FN_EXCEPTION1('X02_S03','W:LENGTH-OVERRUN',X02KEY,'SEC06_S03_CHG_REF',SEC06_S03_CHG_REF))
         END AS EXCEP_LEN_OVERRUN_1
    FROM MAP_SIGN
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,S03_CODE
        ,SEC06_S03_CHG_REF
        ,SEC06_S03_EX_1STCHG
        ,SEC06_S03_INT_CHG
        ,SEC06_S03_SCH_COUNTY
        ,SEC06_S03_SCH_DIST
        ,SEC06_S03_SCH_NAME
        ,SEC06_S03_SCH_PCODE
        ,SEC06_S03_SCH_STREET
        ,SEC06_S03_SCH_TOWN
        ,S03_DATE_IN_DT
        ,S03_DATE_OUT_DT
        ,S03_START_DT
        ,SEC06_S03_RANK_NBR
        ,SEC06_S03_ADVANCE
        ,SEC06_S03_ARREARS
        ,S03_SIGN1
        ,SEC06_S03_CHARGE_DET
        ,SEC06_S03_CHARGES
        ,S03_SIGN2
        ,SEC06_S03_CMS
        ,SEC06_S03_D_REGTITL2
        ,SEC06_S03_D_REGTITLE
        ,SEC06_S03_EXT_CHARGE
        ,SEC06_S03_F_ADVANCE
        ,S03_FURTH_DT
        ,S03_INIT_DT
        ,SEC06_S03_INS_NAME
        ,SEC06_S03_REG_LAND
        ,SEC06_S03_TENURE
        ,SEC06_S03_SCH_AMOUNT
        ,SEC06_S03_SCHG_REAS
        ,SEC06_S03_SEC_NBR
        ,SEC06_S03_SUB_NO
        ,SEC06_S03_THRD_INT
        ,SEC06_S03_SCH_BNAME
        ,SEC06_S03_SCH_BNUM
        ,SEC06_S03_SEQ_NO2
        ,CASE 
           WHEN CAST(CONCAT(
                            CAST(EXCEP_LEN_OVERRUN AS VARCHAR(MAX))
                           ,CAST(EXCEP_ROUND AS VARCHAR(MAX))
                           ,CAST(EXCEP_LEN_OVERRUN_1 AS VARCHAR(MAX))
                           )AS NVARCHAR(MAX)) = ' ' THEN NULL 
           ELSE CAST(CONCAT(
                            CAST(EXCEP_LEN_OVERRUN AS VARCHAR(MAX))
                           ,CAST(EXCEP_ROUND AS VARCHAR(MAX))
                           ,CAST(EXCEP_LEN_OVERRUN_1 AS VARCHAR(MAX))
                           )AS XML) 
         END AS X02_UDMH_EXCEPTION
    FROM MAP_EXCEPTIONS
)
SELECT *
  FROM OUT_FIELDS 
GO

/*
 * Author: Sowmya S V
 * Creation Date: 01/10/2015
 * Description: This SQL code applies business transformation for X02_A05 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0        01/10/2015       Sowmya S V              Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_A05]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_A05]
GO 
CREATE VIEW [dbo].[VW_X02_A05]
AS

WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
       ,'A05' AS A05_CODE
       ,0 AS A05_SUB_ACC
       ,0 AS MAR05_A05_BACODE
       ,NULL AS A05_CURRENTBAL_SIGN
       ,0 AS MAR05_A05_CURRENTBAL
       ,NULL AS A05_EFFECT_DT
       ,NULL AS MAR05_A05_INIT_SUBNO
       ,NULL AS A05_INTBEARBAL_SIGN
       ,0 AS MAR05_A05_INTBEARBAL
       ,NULL AS MAR05_A05_MPR_CODE
       ,0 AS MAR05_A05_INTRTECDE
       ,NULL AS MAR05_A05_BSERTEIND
       ,0 AS MAR05_A05_ORIG_TRAN
       ,NULL AS A05_POSTED_DT
       ,NULL AS A05_T_AMOUNT_SIGN
       ,0 AS MAR05_A05_T_AMOUNT
       ,0 AS MAR05_A05_TRANCODE
       ,NULL AS MAR05_A05_CTRIND
       ,NULL AS MAR05_A05_MPR_CODE_A
       ,NULL AS MAR05_A05_BNK_AC_ID
       ,NULL AS MAR05_A05_BOKIDN
       ,NULL AS MAR05_A05_EXTRA_DATA
       ,NULL AS MAR05_A05_SOURCECODE
       ,NULL AS MAR85_A05_ATMACCCDE
       ,NULL AS MAR85_A05_ATMCSHDE
       ,NULL AS A05_ATMLOC_DT
       ,NULL AS MAR85_A05_ATMLOCNAM
       ,NULL AS MAR85_A05_ATMLOCTIM
       ,NULL AS MAR85_A05_ATMMSGTYP
       ,NULL AS MAR85_A05_ATMPROCDE
       ,NULL AS A05_ATMTRN_DT
       ,NULL AS MAR85_A05_ATMTRNTIM
       ,NULL AS MAR85_A05_CARD_NO
       ,NULL AS MAR85_A05_CHQ_NO
       ,NULL AS MAR85_A05_CLEAR_DT
       ,NULL AS MAR85_A05_CLEAR_IND
       ,NULL AS MAR85_A05_DRAW_ACNUM
       ,NULL AS MAR85_A05_DRAW_NAME
       ,NULL AS MAR85_A05_FROMBOKIDN
       ,NULL AS MAR85_A05_GLPOSTKEY
       ,NULL AS MAR85_A05_POSCONCDE
       ,NULL AS MAR85_A05_POSTED_DT
       ,NULL AS MAR85_A05_RETREFNBR
       ,NULL AS MAR85_A05_REVRSN
       ,NULL AS MAR85_A05_SORT_CODE
       ,NULL AS MAR85_A05_TRANS_DESC
       ,NULL AS MAR85_A05_UNIQUE_ATM
       ,NULL AS MAR85_A05_USER
       ,NULL AS MAR05_A05_INS_TRAN
       ,NULL AS MAR05_A05_USER_CODE
       ,NULL AS MAR85_A05_ACCT_NAMEL
       ,NULL AS MAR85_A05_BANK_ACNO
       ,NULL AS A05_ARCHIIVE
       ,NULL AS MAR05_A05_CREATEDT
       ,NULL AS MAR05_A05_CREATE_TIM
       ,NULL AS MAR85_PAYMENT_ID
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,A05_CODE
        ,A05_SUB_ACC
        ,MAR05_A05_BACODE
        ,A05_CURRENTBAL_SIGN
        ,MAR05_A05_CURRENTBAL
        ,A05_EFFECT_DT
        ,MAR05_A05_INIT_SUBNO
        ,A05_INTBEARBAL_SIGN
        ,MAR05_A05_INTBEARBAL
        ,MAR05_A05_MPR_CODE
        ,MAR05_A05_INTRTECDE
        ,MAR05_A05_BSERTEIND
        ,MAR05_A05_ORIG_TRAN
        ,A05_POSTED_DT
        ,A05_T_AMOUNT_SIGN
        ,MAR05_A05_T_AMOUNT
        ,MAR05_A05_TRANCODE
        ,MAR05_A05_CTRIND
        ,MAR05_A05_MPR_CODE_A
        ,MAR05_A05_BNK_AC_ID
        ,MAR05_A05_BOKIDN
        ,MAR05_A05_EXTRA_DATA
        ,MAR05_A05_SOURCECODE
        ,MAR85_A05_ATMACCCDE
        ,MAR85_A05_ATMCSHDE
        ,A05_ATMLOC_DT
        ,MAR85_A05_ATMLOCNAM
        ,MAR85_A05_ATMLOCTIM
        ,MAR85_A05_ATMMSGTYP
        ,MAR85_A05_ATMPROCDE
        ,A05_ATMTRN_DT
        ,MAR85_A05_ATMTRNTIM
        ,MAR85_A05_CARD_NO
        ,MAR85_A05_CHQ_NO
        ,MAR85_A05_CLEAR_DT
        ,MAR85_A05_CLEAR_IND
        ,MAR85_A05_DRAW_ACNUM
        ,MAR85_A05_DRAW_NAME
        ,MAR85_A05_FROMBOKIDN
        ,MAR85_A05_GLPOSTKEY
        ,MAR85_A05_POSCONCDE
        ,MAR85_A05_POSTED_DT
        ,MAR85_A05_RETREFNBR
        ,MAR85_A05_REVRSN
        ,MAR85_A05_SORT_CODE
        ,MAR85_A05_TRANS_DESC
        ,MAR85_A05_UNIQUE_ATM
        ,MAR85_A05_USER
        ,MAR05_A05_INS_TRAN
        ,MAR05_A05_USER_CODE
        ,MAR85_A05_ACCT_NAMEL
        ,MAR85_A05_BANK_ACNO
        ,A05_ARCHIIVE
        ,MAR05_A05_CREATEDT
        ,MAR05_A05_CREATE_TIM
        ,MAR85_PAYMENT_ID

    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
/*
 * Author: Sowmya S V
 * Creation Date: 01/10/2015
 * Description: This SQL code applies business transformation for X02_A06 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0        01/10/2015       Sowmya S V              Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_A06]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_A06]
GO 
CREATE VIEW [dbo].[VW_X02_A06]
AS

WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
       ,'A06' AS A06_CODE
       ,0 AS A06_SUB_ACC
       ,NULL AS A06_EFFECT_DT
       ,0 AS MAR07_A06_NEWRATE
       ,0 AS MAR07_A06_PAY_RATE
       ,0 AS MAR07_A06_PROD_RATE
       ,NULL AS MAR07_A06_DFRIND
       ,0 AS MAR07_A06_INTRTECDE
       ,NULL AS MAR07_A06_INTRTE_CHG
       ,NULL AS MAR07_A06_RATE_EXP
       ,NULL AS MAR07_A06_RTESTR_DT
       ,NULL AS MAR07_A06_MPR_CODE_A
       ,NULL AS MAR07_A06_CCA_REG
       ,NULL AS MAR07_A06_CCA_RAC
       ,NULL AS MAR07_A06_SWT_REASON
       ,NULL AS MAR07_A06_MPR_CHG
       ,NULL AS MAR07_A06_MPR_CODE
       ,NULL AS MAR07_A06_RATE_CHG
       ,NULL AS A06_IBB_SIGN
       ,0 AS MAR07_A06_INTBEARBAL
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
  SELECT X02KEY
      ,A06_CODE
      ,A06_SUB_ACC
      ,A06_EFFECT_DT
      ,MAR07_A06_NEWRATE
      ,MAR07_A06_PAY_RATE
      ,MAR07_A06_PROD_RATE
      ,MAR07_A06_DFRIND
      ,MAR07_A06_INTRTECDE
      ,MAR07_A06_INTRTE_CHG
      ,MAR07_A06_RATE_EXP
      ,MAR07_A06_RTESTR_DT
      ,MAR07_A06_MPR_CODE_A
      ,MAR07_A06_CCA_REG
      ,MAR07_A06_CCA_RAC
      ,MAR07_A06_SWT_REASON
      ,MAR07_A06_MPR_CHG
      ,MAR07_A06_MPR_CODE
      ,MAR07_A06_RATE_CHG
      ,A06_IBB_SIGN
      ,MAR07_A06_INTBEARBAL
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
/*
 * Author: Sowmya S V
 * Creation Date: 01/10/2015
 * Description: This SQL code applies business transformation for X02_A07 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0        01/10/2015       Sowmya S V              Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_A07]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_A07]
GO 
CREATE VIEW [dbo].[VW_X02_A07]
AS

WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
    INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
       ,'A07' AS A07_CODE
       ,0 AS A07_SUB_ACC
       ,NULL AS MAR09_A07_ISPECNAME
       ,NULL AS A07_SIGN1
       ,0 AS MAR09_A07_ARREARS
       ,NULL AS A07_POSTED_DT
       ,NULL AS A07_SIGN2
       ,0 AS MAR09_A07_T_AMOUNT
       ,0 AS MAR09_A07_TRANCODE
       ,NULL AS A07_CUR_SIGN
       ,0 AS MAR09_A07_CURBAL
       ,NULL AS MAR09_A07_ARRCAPFLG
       ,NULL AS MAR09_A07_INS_TRAN
       ,NULL AS MAR09_A07_RA_INTONLY
       ,NULL AS A07_ARCHIIVE
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,A07_CODE
        ,A07_SUB_ACC
        ,MAR09_A07_ISPECNAME
        ,A07_SIGN1
        ,MAR09_A07_ARREARS
        ,A07_POSTED_DT
        ,A07_SIGN2
        ,MAR09_A07_T_AMOUNT
        ,MAR09_A07_TRANCODE
        ,A07_CUR_SIGN
        ,MAR09_A07_CURBAL
        ,MAR09_A07_ARRCAPFLG
        ,MAR09_A07_INS_TRAN
        ,MAR09_A07_RA_INTONLY
        ,A07_ARCHIIVE
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
/*
 * Author: Sowmya S V
 * Creation Date: 01/10/2015
 * Description: This SQL code applies business transformation for X02_A16 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0        01/10/2015       Sowmya S V              Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_A16]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_A16]
GO 
CREATE VIEW [dbo].[VW_X02_A16]
AS

WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
    INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
       ,'A16' AS A16_CODE
       ,NULL AS MAR08_A16_CALTYP
       ,NULL AS MAR08_A16_CHGINTNET
       ,0 AS MAR08_A16_CMS
       ,0 AS MAR08_A16_CMS_ADD
       ,NULL AS MAR08_A16_CMS_CT
       ,0 AS MAR08_A16_CMS_INS
       ,0 AS MAR08_A16_CMS_INT
       ,NULL AS A16SIGN1
       ,NULL AS MAR08_A16_CURRENTBAL
       ,NULL AS A16_EFFECT_DT
       ,0 AS MAR08_A16_GROSS_INT
       ,NULL AS A16SIGN2
       ,NULL AS MAR08_A16_INIT_INS
       ,NULL AS MAR08_A16_INIT_INT
       ,NULL AS A16SIGN3
       ,0 AS MAR08_A16_INT_ADJUST
       ,0 AS MAR08_A16_INT_ONLY
       ,NULL AS A16SIGN4
       ,NULL AS MAR08_A16_INTBEARBAL
       ,NULL AS A16SIGN5
       ,0 AS MAR08_A16_INTRTE
       ,0 AS MAR08_A16_M_CMS
       ,NULL AS MAR08_A16_M_CMS_CT
       ,0 AS MAR08_A16_M_CMS_INS
       ,0 AS MAR08_A16_M_CMS_INT
       ,NULL AS MAR08_A16_MPR_TYPE
       ,NULL AS A16_PER_E_DT
       ,NULL AS A16_PER_ST_DT
       ,NULL AS MAR08_A16_PYMFRQ
       ,'N' AS MAR08_A16_PYMFRQCHG
       ,NULL AS MAR08_A16_REM_MTH
       ,NULL AS MAR08_A16_REM_YRS
       ,NULL AS MAR08_A16_RTC_EXT
       ,0 AS MAR08_UFS_SUB_NO
       ,NULL AS MAR08_A16_TARG_CMS
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,A16_CODE
        ,MAR08_A16_CALTYP
        ,MAR08_A16_CHGINTNET
        ,MAR08_A16_CMS
        ,MAR08_A16_CMS_ADD
        ,MAR08_A16_CMS_CT
        ,MAR08_A16_CMS_INS
        ,MAR08_A16_CMS_INT
        ,A16SIGN1
        ,MAR08_A16_CURRENTBAL
        ,A16_EFFECT_DT
        ,MAR08_A16_GROSS_INT
        ,A16SIGN2
        ,MAR08_A16_INIT_INS
        ,MAR08_A16_INIT_INT
        ,A16SIGN3
        ,MAR08_A16_INT_ADJUST
        ,MAR08_A16_INT_ONLY
        ,A16SIGN4
        ,MAR08_A16_INTBEARBAL
        ,A16SIGN5
        ,MAR08_A16_INTRTE
        ,MAR08_A16_M_CMS
        ,MAR08_A16_M_CMS_CT
        ,MAR08_A16_M_CMS_INS
        ,MAR08_A16_M_CMS_INT
        ,MAR08_A16_MPR_TYPE
        ,A16_PER_E_DT
        ,A16_PER_ST_DT
        ,MAR08_A16_PYMFRQ
        ,MAR08_A16_PYMFRQCHG
        ,MAR08_A16_REM_MTH
        ,MAR08_A16_REM_YRS
        ,MAR08_A16_RTC_EXT
        ,MAR08_UFS_SUB_NO
        ,MAR08_A16_TARG_CMS
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
/*
 * Author: Sowmya S V
 * Creation Date: 01/10/2015
 * Description: This SQL code applies business transformation for X02_M04 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0         01/10/2015      Sowmya S V               Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_M04]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_M04]
GO 
CREATE VIEW [dbo].[VW_X02_M04]
AS

WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
    INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
       ,'M04' AS M04_CODE
       ,'N' AS ADM01_M04_KEY_SURR
       ,'N' AS ADM01_M04_M85_FLAG
       ,'N' AS ADM01_M04_REPORT_REM
       ,NULL AS ADM01_M04_SOL_LETREF
       ,NULL AS M04_AMEND_DT
       ,NULL AS ADM01_M04_ARSIND
       ,NULL AS M04_ENF_ORDER_DT
       ,NULL AS M04_EVICT_DT
       ,0 AS ADM01_M04_EVICT_TIME
       ,NULL AS M04_HEARING_DT
       ,NULL AS M04_LSTLIT_DT
       ,NULL AS M04_LSTPOSS_DT
       ,NULL AS M04_M85_DT
       ,NULL AS M04_M85OLD_DT
       ,NULL AS M04_POSS_ORD_DT
       ,NULL AS M04_POSSESS_DT
       ,NULL AS M04_POSS_EN_DT
       ,NULL AS M04_RENT_DT
       ,NULL AS M04_REP_REC_DT
       ,NULL AS M04_REP_RST_DT
       ,NULL AS M04_SOL_REM_DT
       ,NULL AS M04_SOL_INS_DT
       ,NULL AS M04_SOLREF_PC
       ,NULL AS M04_SOLREF_TN
       ,NULL AS M04_SOLREF_40
       ,NULL AS M04_WARRANT_DT
       ,NULL AS ADM01_M04_ARRDISPUTE
       ,0 AS ADM01_M04_NUMEVT
       ,NULL AS M04_ORIG_SOL
       ,NULL AS ADM01_M04_ARR_NMTHDT
       ,NULL AS M04_ARR_SERDT
       ,NULL AS ADM01_M04_DM_XFER_FL
       ,NULL AS M04_DM_XFERDT
       ,NULL AS ADM01_M04_LB_ARR_ST
       ,NULL AS M04_OS_DBT_DT
       ,'N' AS ADM01_M04_ARRCAPIND
       ,0 AS ADM01_M04_POSS_METH
       ,'CP' AS ADM01_M04_SCHEME
       ,NULL AS M04_DTE_JUD
       ,NULL AS M04_DTE_JUDLT1
       ,NULL AS M04_DTE_JUDLT2
       ,NULL AS M04_DTE_JUDDIS
       ,NULL AS ADM01_M04_JUD_BAL
       ,'N' AS ADM01_M04_UNTEN_PROP
       ,'N' AS ADM01_M04_LONG_TEN
       ,'N' AS ADM01_M04_INST_LIFE
       ,NULL AS ADM01_M04_JUDGE_NO
       ,NULL AS M04_DTE_JUDU
       ,NULL AS M04_DTE_JDISU
       ,NULL AS M04_DTE_JDU1
       ,NULL AS M04_DTE_JDU2
       ,NULL AS ADM01_M04_JUD_BALU
       ,NULL AS ADM01_M04_JUD_NOU
       ,NULL AS M04_SOL_INS_DTU
       ,NULL AS ADM01_M04_SOL_REFU
       ,NULL AS M04_FA_INS_DT
       ,0 AS ADM01_M04_FA_PROFREF
       ,NULL AS M04_TA_INS_DT
       ,0 AS ADM01_M04_TA_PROFREF
       ,NULL AS ADM01_M04_TRACE_TYPE
       ,NULL AS M04_LASTPOSRDN
       ,NULL AS M04_RENTRECSTR
       ,NULL AS M04_RENTRECEND
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,M04_CODE
        ,ADM01_M04_KEY_SURR
        ,ADM01_M04_M85_FLAG
        ,ADM01_M04_REPORT_REM
        ,ADM01_M04_SOL_LETREF
        ,M04_AMEND_DT
        ,ADM01_M04_ARSIND
        ,M04_ENF_ORDER_DT
        ,M04_EVICT_DT
        ,ADM01_M04_EVICT_TIME
        ,M04_HEARING_DT
        ,M04_LSTLIT_DT
        ,M04_LSTPOSS_DT
        ,M04_M85_DT
        ,M04_M85OLD_DT
        ,M04_POSS_ORD_DT
        ,M04_POSSESS_DT
        ,M04_POSS_EN_DT
        ,M04_RENT_DT
        ,M04_REP_REC_DT
        ,M04_REP_RST_DT
        ,M04_SOL_REM_DT
        ,M04_SOL_INS_DT
        ,M04_SOLREF_PC
        ,M04_SOLREF_TN
        ,M04_SOLREF_40
        ,M04_WARRANT_DT
        ,ADM01_M04_ARRDISPUTE
        ,ADM01_M04_NUMEVT
        ,M04_ORIG_SOL
        ,ADM01_M04_ARR_NMTHDT
        ,M04_ARR_SERDT
        ,ADM01_M04_DM_XFER_FL
        ,M04_DM_XFERDT
        ,ADM01_M04_LB_ARR_ST
        ,M04_OS_DBT_DT
        ,ADM01_M04_ARRCAPIND
        ,ADM01_M04_POSS_METH
        ,ADM01_M04_SCHEME
        ,M04_DTE_JUD
        ,M04_DTE_JUDLT1
        ,M04_DTE_JUDLT2
        ,M04_DTE_JUDDIS
        ,ADM01_M04_JUD_BAL
        ,ADM01_M04_UNTEN_PROP
        ,ADM01_M04_LONG_TEN
        ,ADM01_M04_INST_LIFE
        ,ADM01_M04_JUDGE_NO
        ,M04_DTE_JUDU
        ,M04_DTE_JDISU
        ,M04_DTE_JDU1
        ,M04_DTE_JDU2
        ,ADM01_M04_JUD_BALU
        ,ADM01_M04_JUD_NOU
        ,M04_SOL_INS_DTU
        ,ADM01_M04_SOL_REFU
        ,M04_FA_INS_DT
        ,ADM01_M04_FA_PROFREF
        ,M04_TA_INS_DT
        ,ADM01_M04_TA_PROFREF
        ,ADM01_M04_TRACE_TYPE
        ,M04_LASTPOSRDN
        ,M04_RENTRECSTR
        ,M04_RENTRECEND
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
/*
 * Author: Sowmya S V
 * Creation Date: 01/10/2015
 * Description: This SQL code applies business transformation for X02_M06 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0        01/10/2015       Sowmya S V              Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_M06]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_M06]
GO 
CREATE VIEW [dbo].[VW_X02_M06]
AS

WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
       ,'M06' AS M06_CODE
       ,'MOR' AS DDS01_M06_AC_TYPE
       ,NULL AS DDS01_M06_ACCT_NAME
       ,NULL AS DDS01_M06_LST_CHG_BY
       ,NULL AS DDS01_M06_PYMFRQ
       ,NULL AS DDS01_M06_STATUS_IND
       ,NULL AS DDS01_M06_STATUS_PS
       ,'V' AS DDS01_M06_TYPEOF
       ,NULL AS M06_AMEND_DT
       ,0 AS DDS01_M06_BANK_ACNO
       ,NULL AS M06_CANCEL_DT
       ,NULL AS M06_CEASE_DT
       ,NULL AS M06_DTEPYM_DT
       ,0 AS DDS01_M06_DUE_DATE
       ,NULL AS M06_DUE_SEC_DT
       ,NULL AS M06_NEW_DT
       ,NULL AS M06_POSTED_DT
       ,0 AS DDS01_M06_RAISED_MM
       ,0 AS DDS01_M06_RE_SUBCNT
       ,0 AS DDS01_M06_REJ_COUNT
       ,NULL AS M06_REJECT_DT
       ,0 AS DDS01_M06_REQ_DUE_DT
       ,NULL AS M06_REQ_DT
       ,0 AS DDS01_M06_SORT_CODE
       ,0 AS DDS01_M06_SUCCESS_RQ
       ,NULL AS DDS01_M06_NEWPYMFRQ
       ,NULL AS DDS01_M06_AUDDISSTAT
       ,NULL AS DDS01_M06_LASTAUDDIS
       ,0 AS DDS01_M06_BACSAMT
       ,0 AS DDS01_M06_DD_ID
       ,NULL AS DDS01_M06_OLD_DD_ID
       ,NULL AS DDS01_M06_PAYMTH
       ,NULL AS DDS01_M06_AUDACNME
       ,0 AS DDS01_M06_AUDBNKNME
       ,0 AS DDS01_M06_AUDSORTCDE
       ,0 AS DDS01_M06_NEWDUEDT
       ,0 AS DDS01_M06_SUB_NO
       ,0 AS DDS16_M06_AMOUNT
       ,NULL AS DDS16_M06_AMT_OR_PCT
       ,NULL AS DDS16_M06_FST_REC
       ,NULL AS DDS16_M06_PERCENT
       ,0 AS DDS01_M06_FAIL_COUNT
       ,NULL AS DDS01_M06_LAST_DT
       ,NULL AS DDS01_M06_LAST_USER
       ,0 AS DDS01_M06_RAISE_CNT
       ,NULL AS DDS01_M06_BACSREF_FMT4
       ,NULL AS DDS01_M06_ADDACSREAS
       ,NULL AS DDS01_M06_DD_RAISE_M
       ,NULL AS DDS01_M06_DD_RAIS_M1
       ,NULL AS M06_DD_REJ_MTH
       ,NULL AS M06_DD_REJ_MT1
       ,NULL AS M06_BACSREFA
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,M06_CODE
        ,DDS01_M06_AC_TYPE
        ,DDS01_M06_ACCT_NAME
        ,DDS01_M06_LST_CHG_BY
        ,DDS01_M06_PYMFRQ
        ,DDS01_M06_STATUS_IND
        ,DDS01_M06_STATUS_PS
        ,DDS01_M06_TYPEOF
        ,M06_AMEND_DT
        ,DDS01_M06_BANK_ACNO
        ,M06_CANCEL_DT
        ,M06_CEASE_DT
        ,M06_DTEPYM_DT
        ,DDS01_M06_DUE_DATE
        ,M06_DUE_SEC_DT
        ,M06_NEW_DT
        ,M06_POSTED_DT
        ,DDS01_M06_RAISED_MM
        ,DDS01_M06_RE_SUBCNT
        ,DDS01_M06_REJ_COUNT
        ,M06_REJECT_DT
        ,DDS01_M06_REQ_DUE_DT
        ,M06_REQ_DT
        ,DDS01_M06_SORT_CODE
        ,DDS01_M06_SUCCESS_RQ
        ,DDS01_M06_NEWPYMFRQ
        ,DDS01_M06_AUDDISSTAT
        ,DDS01_M06_LASTAUDDIS
        ,DDS01_M06_BACSAMT
        ,DDS01_M06_DD_ID
        ,DDS01_M06_OLD_DD_ID
        ,DDS01_M06_PAYMTH
        ,DDS01_M06_AUDACNME
        ,DDS01_M06_AUDBNKNME
        ,DDS01_M06_AUDSORTCDE
        ,DDS01_M06_NEWDUEDT
        ,DDS01_M06_SUB_NO
        ,DDS16_M06_AMOUNT
        ,DDS16_M06_AMT_OR_PCT
        ,DDS16_M06_FST_REC
        ,DDS16_M06_PERCENT
        ,DDS01_M06_FAIL_COUNT
        ,DDS01_M06_LAST_DT
        ,DDS01_M06_LAST_USER
        ,DDS01_M06_RAISE_CNT
        ,DDS01_M06_BACSREF_FMT4
        ,DDS01_M06_ADDACSREAS
        ,DDS01_M06_DD_RAISE_M
        ,DDS01_M06_DD_RAIS_M1
        ,M06_DD_REJ_MTH
        ,M06_DD_REJ_MT1
        ,M06_BACSREFA
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO

/*
 * Author: Sowmya S V
 * Creation Date: 01/10/2015
 * Description: This SQL code applies business transformation for X02_M09 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0        01/10/2015       Sowmya S V              Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_M09]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_M09]
GO 
CREATE VIEW [dbo].[VW_X02_M09]
AS

WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
    INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
        ,'M09' AS M09_CODE
       ,NULL AS M09_SIGN
       ,0 AS ADM44_M09_ARREARS
       ,0 AS ADM44_M09_MTH_ARR
       ,NULL AS M09_RMC_ARR_ST
       ,NULL AS M09_RMC_ARREND
       ,NULL AS M09_SOL_INS_DT
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,M09_CODE
        ,M09_SIGN
        ,ADM44_M09_ARREARS
        ,ADM44_M09_MTH_ARR
        ,M09_RMC_ARR_ST
        ,M09_RMC_ARREND
        ,M09_SOL_INS_DT
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
/*
 * Author: Sowmya S V
 * Creation Date: 08/10/2015
 * Description: This SQL code applies business transformation for X02_M10 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0        08/10/2015       Sowmya S V              Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_M10]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_M10]
GO 
CREATE VIEW [dbo].[VW_X02_M10]
AS

WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
    INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
        ,'M10' AS M10_CODE
       ,0 AS MAR73_M10_SUB_NO
       ,NULL AS M10_PROCESS_DT
       ,0 AS MAR73_M10_CLOS_ARR
       ,NULL AS M10_SIGN1
       ,0 AS MAR73_M10_CLOS_ADJ
       ,NULL AS M10_SIGN2
       ,0 AS MAR73_M10_CLOS_BAL
       ,NULL AS M10_SIGN3
       ,0 AS MAR73_M10_OPEN_ARR
       ,NULL AS M10_SIGN4
       ,0 AS MAR73_M10_OPEN_ADJ
       ,NULL AS M10_SIGN5
       ,0 AS MAR73_M10_OPEN_BALN
       ,NULL AS M10_SIGN6
       ,0 AS MAR73_M10_CURRENTBAL
       ,NULL AS M10_SIGN7
       ,0 AS MAR73_M10_INTINPRD
       ,NULL AS M10_SIGN8
       ,0 AS MAR73_M10_INTTILLEOM
       ,NULL AS M10_SIGN9
       ,NULL AS M10_START_DT
       ,0 AS M10_OPEN_DEF
       ,0 AS M10_CLOS_DEF
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,M10_CODE
        ,MAR73_M10_SUB_NO
        ,M10_PROCESS_DT
        ,MAR73_M10_CLOS_ARR
        ,M10_SIGN1
        ,MAR73_M10_CLOS_ADJ
        ,M10_SIGN2
        ,MAR73_M10_CLOS_BAL
        ,M10_SIGN3
        ,MAR73_M10_OPEN_ARR
        ,M10_SIGN4
        ,MAR73_M10_OPEN_ADJ
        ,M10_SIGN5
        ,MAR73_M10_OPEN_BALN
        ,M10_SIGN6
        ,MAR73_M10_CURRENTBAL
        ,M10_SIGN7
        ,MAR73_M10_INTINPRD
        ,M10_SIGN8
        ,MAR73_M10_INTTILLEOM
        ,M10_SIGN9
        ,M10_START_DT
        ,M10_OPEN_DEF
        ,M10_CLOS_DEF
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
/*
 * Author: Sowmya S V
 * Creation Date: 01/10/2015
 * Description: This SQL code applies business transformation for X02_MA6 target type.
 * Revision History:
 *-----------------------------------------------------------------------------------------------------
 * Version      Date            Developer               Description
 *-----------------------------------------------------------------------------------------------------
    1.0        01/10/2015       Sowmya S V              Based on Mapping Spec version v1.0
 *-----------------------------------------------------------------------------------------------------
 */
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VW_X02_MA6]') AND type in (N'V'))
DROP VIEW [dbo].[VW_X02_MA6]
GO 
CREATE VIEW [dbo].[VW_X02_MA6]
AS

WITH
JOIN_WRITECRITERIA AS (
  SELECT AC01.ACACNTNO AS X02KEY
    FROM TB_SRC_AC01_MAIN AS AC01 
   INNER JOIN TB_SRC_AC01_FIRSTLIVEORLASTREDEEMSUB AS AC01_FIRSTLIVEORLASTREDEEMSUB
      ON AC01.ACACNTNO = AC01_FIRSTLIVEORLASTREDEEMSUB.ACACNTNO
),
MAP_DEFAULTS AS (
  SELECT X02KEY
        ,'MA6' AS MA6_CODE
       ,0 AS DDS02_MA6_AMOUNT
       ,0 AS DDS02_MA6_BACS_AMT
       ,NULL AS DDS02_MA6_BACS_REF
       ,0 AS DDS02_MA6_DD_ID
       ,NULL AS MA6_DTEPYMRDN
       ,NULL AS DDS02_MA6_ONE_OFF
       ,NULL AS MA6_POSTED_RDN
       ,NULL AS DDS02_MA6_SEP_DDS01
       ,NULL AS DDS02_MA6_STATUS_IND
       ,NULL AS DDS02_MA6_STATUS_PS
       ,NULL AS DDS02_MA6_TR_TYPE
       ,0 AS DDS02_MA6_SUB_NO
       ,NULL AS DDS02_MA6_TYPEOF_DD
       ,NULL AS DDS02_MA6_USER_CODE
    FROM JOIN_WRITECRITERIA AS J_WC
),
OUT_FIELDS AS (
  SELECT X02KEY
        ,MA6_CODE
        ,DDS02_MA6_AMOUNT
        ,DDS02_MA6_BACS_AMT
        ,DDS02_MA6_BACS_REF
        ,DDS02_MA6_DD_ID
        ,MA6_DTEPYMRDN
        ,DDS02_MA6_ONE_OFF
        ,MA6_POSTED_RDN
        ,DDS02_MA6_SEP_DDS01
        ,DDS02_MA6_STATUS_IND
        ,DDS02_MA6_STATUS_PS
        ,DDS02_MA6_TR_TYPE
        ,DDS02_MA6_SUB_NO
        ,DDS02_MA6_TYPEOF_DD
        ,DDS02_MA6_USER_CODE
    FROM MAP_DEFAULTS
)
SELECT *
  FROM OUT_FIELDS

GO
